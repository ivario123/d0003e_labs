
lab3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000002e  00800100  000006ac  00000740  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000006ac  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000228  0080012e  0080012e  0000076e  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000076e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000007a0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000f8  00000000  00000000  000007e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000014ea  00000000  00000000  000008d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000c7b  00000000  00000000  00001dc2  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000092f  00000000  00000000  00002a3d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002dc  00000000  00000000  0000336c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000061f  00000000  00000000  00003648  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000ab8  00000000  00000000  00003c67  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000f8  00000000  00000000  0000471f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2e 00 	jmp	0x5c	; 0x5c <__ctors_end>
   4:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
   8:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
   c:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
  10:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
  14:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
  18:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
  1c:	0c 94 95 02 	jmp	0x52a	; 0x52a <__vector_7>
  20:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
  24:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
  28:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
  2c:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
  30:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
  34:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
  38:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
  3c:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
  40:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
  44:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
  48:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
  4c:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
  50:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
  54:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
  58:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>

0000005c <__ctors_end>:
  5c:	11 24       	eor	r1, r1
  5e:	1f be       	out	0x3f, r1	; 63
  60:	cf ef       	ldi	r28, 0xFF	; 255
  62:	d4 e0       	ldi	r29, 0x04	; 4
  64:	de bf       	out	0x3e, r29	; 62
  66:	cd bf       	out	0x3d, r28	; 61

00000068 <__do_copy_data>:
  68:	11 e0       	ldi	r17, 0x01	; 1
  6a:	a0 e0       	ldi	r26, 0x00	; 0
  6c:	b1 e0       	ldi	r27, 0x01	; 1
  6e:	ec ea       	ldi	r30, 0xAC	; 172
  70:	f6 e0       	ldi	r31, 0x06	; 6
  72:	02 c0       	rjmp	.+4      	; 0x78 <__do_copy_data+0x10>
  74:	05 90       	lpm	r0, Z+
  76:	0d 92       	st	X+, r0
  78:	ae 32       	cpi	r26, 0x2E	; 46
  7a:	b1 07       	cpc	r27, r17
  7c:	d9 f7       	brne	.-10     	; 0x74 <__do_copy_data+0xc>

0000007e <__do_clear_bss>:
  7e:	23 e0       	ldi	r18, 0x03	; 3
  80:	ae e2       	ldi	r26, 0x2E	; 46
  82:	b1 e0       	ldi	r27, 0x01	; 1
  84:	01 c0       	rjmp	.+2      	; 0x88 <.do_clear_bss_start>

00000086 <.do_clear_bss_loop>:
  86:	1d 92       	st	X+, r1

00000088 <.do_clear_bss_start>:
  88:	a6 35       	cpi	r26, 0x56	; 86
  8a:	b2 07       	cpc	r27, r18
  8c:	e1 f7       	brne	.-8      	; 0x86 <.do_clear_bss_loop>
  8e:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <main>
  92:	0c 94 54 03 	jmp	0x6a8	; 0x6a8 <_exit>

00000096 <__bad_interrupt>:
  96:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000009a <init_lcd>:
/************************************************************************/

void swap_segment(void){
	
	LCDDR13 = LCDDR13^1;
	LCDDR18 = LCDDR18^1;
  9a:	e4 ee       	ldi	r30, 0xE4	; 228
  9c:	f0 e0       	ldi	r31, 0x00	; 0
  9e:	80 81       	ld	r24, Z
  a0:	80 68       	ori	r24, 0x80	; 128
  a2:	80 83       	st	Z, r24
  a4:	80 81       	ld	r24, Z
  a6:	80 64       	ori	r24, 0x40	; 64
  a8:	80 83       	st	Z, r24
  aa:	80 81       	ld	r24, Z
  ac:	8f 7e       	andi	r24, 0xEF	; 239
  ae:	80 83       	st	Z, r24
  b0:	80 81       	ld	r24, Z
  b2:	8e 7f       	andi	r24, 0xFE	; 254
  b4:	80 83       	st	Z, r24
  b6:	e5 ee       	ldi	r30, 0xE5	; 229
  b8:	f0 e0       	ldi	r31, 0x00	; 0
  ba:	80 81       	ld	r24, Z
  bc:	80 68       	ori	r24, 0x80	; 128
  be:	80 83       	st	Z, r24
  c0:	80 81       	ld	r24, Z
  c2:	8f 7b       	andi	r24, 0xBF	; 191
  c4:	80 83       	st	Z, r24
  c6:	80 81       	ld	r24, Z
  c8:	80 63       	ori	r24, 0x30	; 48
  ca:	80 83       	st	Z, r24
  cc:	80 81       	ld	r24, Z
  ce:	87 60       	ori	r24, 0x07	; 7
  d0:	80 83       	st	Z, r24
  d2:	e6 ee       	ldi	r30, 0xE6	; 230
  d4:	f0 e0       	ldi	r31, 0x00	; 0
  d6:	80 81       	ld	r24, Z
  d8:	8f 78       	andi	r24, 0x8F	; 143
  da:	80 83       	st	Z, r24
  dc:	80 81       	ld	r24, Z
  de:	87 60       	ori	r24, 0x07	; 7
  e0:	80 83       	st	Z, r24
  e2:	e7 ee       	ldi	r30, 0xE7	; 231
  e4:	f0 e0       	ldi	r31, 0x00	; 0
  e6:	80 81       	ld	r24, Z
  e8:	8f 71       	andi	r24, 0x1F	; 31
  ea:	80 83       	st	Z, r24
  ec:	80 81       	ld	r24, Z
  ee:	8f 60       	ori	r24, 0x0F	; 15
  f0:	80 83       	st	Z, r24
  f2:	08 95       	ret

000000f4 <write_char>:
  f4:	cf 93       	push	r28
  f6:	df 93       	push	r29
  f8:	db 01       	movw	r26, r22
  fa:	66 30       	cpi	r22, 0x06	; 6
  fc:	71 05       	cpc	r23, r1
  fe:	b8 f5       	brcc	.+110    	; 0x16e <write_char+0x7a>
 100:	75 95       	asr	r23
 102:	67 95       	ror	r22
 104:	fb 01       	movw	r30, r22
 106:	e4 51       	subi	r30, 0x14	; 20
 108:	ff 4f       	sbci	r31, 0xFF	; 255
 10a:	90 ed       	ldi	r25, 0xD0	; 208
 10c:	98 0f       	add	r25, r24
 10e:	9a 30       	cpi	r25, 0x0A	; 10
 110:	40 f5       	brcc	.+80     	; 0x162 <write_char+0x6e>
 112:	c8 2f       	mov	r28, r24
 114:	d0 e0       	ldi	r29, 0x00	; 0
 116:	cc 0f       	add	r28, r28
 118:	dd 1f       	adc	r29, r29
 11a:	cc 0f       	add	r28, r28
 11c:	dd 1f       	adc	r29, r29
 11e:	c0 5c       	subi	r28, 0xC0	; 192
 120:	df 4f       	sbci	r29, 0xFF	; 255
 122:	28 81       	ld	r18, Y
 124:	39 81       	ldd	r19, Y+1	; 0x01
 126:	1f c0       	rjmp	.+62     	; 0x166 <write_char+0x72>
 128:	92 2f       	mov	r25, r18
 12a:	9f 70       	andi	r25, 0x0F	; 15
 12c:	32 95       	swap	r19
 12e:	22 95       	swap	r18
 130:	2f 70       	andi	r18, 0x0F	; 15
 132:	23 27       	eor	r18, r19
 134:	3f 70       	andi	r19, 0x0F	; 15
 136:	23 27       	eor	r18, r19
 138:	10 97       	sbiw	r26, 0x00	; 0
 13a:	29 f4       	brne	.+10     	; 0x146 <write_char+0x52>
 13c:	80 81       	ld	r24, Z
 13e:	80 7f       	andi	r24, 0xF0	; 240
 140:	89 2b       	or	r24, r25
 142:	80 83       	st	Z, r24
 144:	09 c0       	rjmp	.+18     	; 0x158 <write_char+0x64>
 146:	80 81       	ld	r24, Z
 148:	48 2f       	mov	r20, r24
 14a:	4f 70       	andi	r20, 0x0F	; 15
 14c:	50 e1       	ldi	r21, 0x10	; 16
 14e:	95 9f       	mul	r25, r21
 150:	c0 01       	movw	r24, r0
 152:	11 24       	eor	r1, r1
 154:	84 2b       	or	r24, r20
 156:	80 83       	st	Z, r24
 158:	35 96       	adiw	r30, 0x05	; 5
 15a:	6e 17       	cp	r22, r30
 15c:	7f 07       	cpc	r23, r31
 15e:	21 f7       	brne	.-56     	; 0x128 <write_char+0x34>
 160:	06 c0       	rjmp	.+12     	; 0x16e <write_char+0x7a>
 162:	20 e0       	ldi	r18, 0x00	; 0
 164:	30 e0       	ldi	r19, 0x00	; 0
 166:	73 95       	inc	r23
 168:	a1 70       	andi	r26, 0x01	; 1
 16a:	bb 27       	eor	r27, r27
 16c:	dd cf       	rjmp	.-70     	; 0x128 <write_char+0x34>
 16e:	df 91       	pop	r29
 170:	cf 91       	pop	r28
 172:	08 95       	ret

00000174 <is_prime>:
}

int is_prime(long num){
 174:	8f 92       	push	r8
 176:	9f 92       	push	r9
 178:	af 92       	push	r10
 17a:	bf 92       	push	r11
 17c:	cf 92       	push	r12
 17e:	df 92       	push	r13
 180:	ef 92       	push	r14
 182:	ff 92       	push	r15
 184:	4b 01       	movw	r8, r22
 186:	5c 01       	movw	r10, r24
	
	if (num <= 3)
 188:	84 e0       	ldi	r24, 0x04	; 4
 18a:	88 16       	cp	r8, r24
 18c:	91 04       	cpc	r9, r1
 18e:	a1 04       	cpc	r10, r1
 190:	b1 04       	cpc	r11, r1
 192:	6c f1       	brlt	.+90     	; 0x1ee <is_prime+0x7a>
	return 1;
	
	if(num%2 == 0)
 194:	80 fe       	sbrs	r8, 0
 196:	2e c0       	rjmp	.+92     	; 0x1f4 <is_prime+0x80>
	return 0;
	
	long counter = 3;
	
	while(counter <num){
		if(num%counter == 0)
 198:	c5 01       	movw	r24, r10
 19a:	b4 01       	movw	r22, r8
 19c:	23 e0       	ldi	r18, 0x03	; 3
 19e:	30 e0       	ldi	r19, 0x00	; 0
 1a0:	40 e0       	ldi	r20, 0x00	; 0
 1a2:	50 e0       	ldi	r21, 0x00	; 0
 1a4:	0e 94 d2 02 	call	0x5a4	; 0x5a4 <__divmodsi4>
 1a8:	67 2b       	or	r22, r23
 1aa:	68 2b       	or	r22, r24
 1ac:	69 2b       	or	r22, r25
 1ae:	29 f1       	breq	.+74     	; 0x1fa <is_prime+0x86>
 1b0:	0f 2e       	mov	r0, r31
 1b2:	f3 e0       	ldi	r31, 0x03	; 3
 1b4:	cf 2e       	mov	r12, r31
 1b6:	d1 2c       	mov	r13, r1
 1b8:	e1 2c       	mov	r14, r1
 1ba:	f1 2c       	mov	r15, r1
 1bc:	f0 2d       	mov	r31, r0
 1be:	0a c0       	rjmp	.+20     	; 0x1d4 <is_prime+0x60>
 1c0:	c5 01       	movw	r24, r10
 1c2:	b4 01       	movw	r22, r8
 1c4:	a7 01       	movw	r20, r14
 1c6:	96 01       	movw	r18, r12
 1c8:	0e 94 d2 02 	call	0x5a4	; 0x5a4 <__divmodsi4>
 1cc:	67 2b       	or	r22, r23
 1ce:	68 2b       	or	r22, r24
 1d0:	69 2b       	or	r22, r25
 1d2:	b1 f0       	breq	.+44     	; 0x200 <__EEPROM_REGION_LENGTH__>
		return 0;
		counter++;
 1d4:	8f ef       	ldi	r24, 0xFF	; 255
 1d6:	c8 1a       	sub	r12, r24
 1d8:	d8 0a       	sbc	r13, r24
 1da:	e8 0a       	sbc	r14, r24
 1dc:	f8 0a       	sbc	r15, r24
	if(num%2 == 0)
	return 0;
	
	long counter = 3;
	
	while(counter <num){
 1de:	8c 14       	cp	r8, r12
 1e0:	9d 04       	cpc	r9, r13
 1e2:	ae 04       	cpc	r10, r14
 1e4:	bf 04       	cpc	r11, r15
 1e6:	61 f7       	brne	.-40     	; 0x1c0 <is_prime+0x4c>
		if(num%counter == 0)
		return 0;
		counter++;
	}
	return 1;
 1e8:	81 e0       	ldi	r24, 0x01	; 1
 1ea:	90 e0       	ldi	r25, 0x00	; 0
 1ec:	0b c0       	rjmp	.+22     	; 0x204 <__EEPROM_REGION_LENGTH__+0x4>
}

int is_prime(long num){
	
	if (num <= 3)
	return 1;
 1ee:	81 e0       	ldi	r24, 0x01	; 1
 1f0:	90 e0       	ldi	r25, 0x00	; 0
 1f2:	08 c0       	rjmp	.+16     	; 0x204 <__EEPROM_REGION_LENGTH__+0x4>
	
	if(num%2 == 0)
	return 0;
 1f4:	80 e0       	ldi	r24, 0x00	; 0
 1f6:	90 e0       	ldi	r25, 0x00	; 0
 1f8:	05 c0       	rjmp	.+10     	; 0x204 <__EEPROM_REGION_LENGTH__+0x4>
	
	long counter = 3;
	
	while(counter <num){
		if(num%counter == 0)
		return 0;
 1fa:	80 e0       	ldi	r24, 0x00	; 0
 1fc:	90 e0       	ldi	r25, 0x00	; 0
 1fe:	02 c0       	rjmp	.+4      	; 0x204 <__EEPROM_REGION_LENGTH__+0x4>
 200:	80 e0       	ldi	r24, 0x00	; 0
 202:	90 e0       	ldi	r25, 0x00	; 0
		counter++;
	}
	return 1;
}
 204:	ff 90       	pop	r15
 206:	ef 90       	pop	r14
 208:	df 90       	pop	r13
 20a:	cf 90       	pop	r12
 20c:	bf 90       	pop	r11
 20e:	af 90       	pop	r10
 210:	9f 90       	pop	r9
 212:	8f 90       	pop	r8
 214:	08 95       	ret

00000216 <toggle_led>:

void toggle_led(void){
	LCDDR8= LCDDR8^1;
 216:	e4 ef       	ldi	r30, 0xF4	; 244
 218:	f0 e0       	ldi	r31, 0x00	; 0
 21a:	90 81       	ld	r25, Z
 21c:	81 e0       	ldi	r24, 0x01	; 1
 21e:	89 27       	eor	r24, r25
 220:	80 83       	st	Z, r24
 222:	08 95       	ret

00000224 <blink>:
		*num+=1;
		if(is_prime(*num)==1){
			return;
		}
	}
}
 224:	0e 94 c8 02 	call	0x590	; 0x590 <get_timer_int_counter>
 228:	0a 97       	sbiw	r24, 0x0a	; 10
 22a:	e0 f3       	brcs	.-8      	; 0x224 <blink>
 22c:	0e 94 cd 02 	call	0x59a	; 0x59a <reset_timer_int_counter>
 230:	0e 94 0b 01 	call	0x216	; 0x216 <toggle_led>
 234:	f7 cf       	rjmp	.-18     	; 0x224 <blink>

00000236 <printAt>:
 236:	8f 92       	push	r8
 238:	9f 92       	push	r9
 23a:	af 92       	push	r10
 23c:	bf 92       	push	r11
 23e:	cf 92       	push	r12
 240:	df 92       	push	r13
 242:	ef 92       	push	r14
 244:	ff 92       	push	r15
 246:	cf 93       	push	r28
 248:	df 93       	push	r29
 24a:	4b 01       	movw	r8, r22
 24c:	5c 01       	movw	r10, r24
 24e:	ea 01       	movw	r28, r20
 250:	24 e6       	ldi	r18, 0x64	; 100
 252:	30 e0       	ldi	r19, 0x00	; 0
 254:	40 e0       	ldi	r20, 0x00	; 0
 256:	50 e0       	ldi	r21, 0x00	; 0
 258:	0e 94 d2 02 	call	0x5a4	; 0x5a4 <__divmodsi4>
 25c:	0f 2e       	mov	r0, r31
 25e:	fa e0       	ldi	r31, 0x0A	; 10
 260:	cf 2e       	mov	r12, r31
 262:	d1 2c       	mov	r13, r1
 264:	e1 2c       	mov	r14, r1
 266:	f1 2c       	mov	r15, r1
 268:	f0 2d       	mov	r31, r0
 26a:	a7 01       	movw	r20, r14
 26c:	96 01       	movw	r18, r12
 26e:	0e 94 d2 02 	call	0x5a4	; 0x5a4 <__divmodsi4>
 272:	be 01       	movw	r22, r28
 274:	80 e3       	ldi	r24, 0x30	; 48
 276:	82 0f       	add	r24, r18
 278:	0e 94 7a 00 	call	0xf4	; 0xf4 <write_char>
 27c:	21 96       	adiw	r28, 0x01	; 1
 27e:	c5 01       	movw	r24, r10
 280:	b4 01       	movw	r22, r8
 282:	a7 01       	movw	r20, r14
 284:	96 01       	movw	r18, r12
 286:	0e 94 d2 02 	call	0x5a4	; 0x5a4 <__divmodsi4>
 28a:	86 2f       	mov	r24, r22
 28c:	be 01       	movw	r22, r28
 28e:	80 5d       	subi	r24, 0xD0	; 208
 290:	0e 94 7a 00 	call	0xf4	; 0xf4 <write_char>
 294:	df 91       	pop	r29
 296:	cf 91       	pop	r28
 298:	ff 90       	pop	r15
 29a:	ef 90       	pop	r14
 29c:	df 90       	pop	r13
 29e:	cf 90       	pop	r12
 2a0:	bf 90       	pop	r11
 2a2:	af 90       	pop	r10
 2a4:	9f 90       	pop	r9
 2a6:	8f 90       	pop	r8
 2a8:	08 95       	ret

000002aa <button>:
 2aa:	1f 9b       	sbis	0x03, 7	; 3
 2ac:	fe cf       	rjmp	.-4      	; 0x2aa <button>
 2ae:	60 91 2e 01 	lds	r22, 0x012E	; 0x80012e <__data_end>
 2b2:	6f 5f       	subi	r22, 0xFF	; 255
 2b4:	60 93 2e 01 	sts	0x012E, r22	; 0x80012e <__data_end>
 2b8:	70 e0       	ldi	r23, 0x00	; 0
 2ba:	80 e0       	ldi	r24, 0x00	; 0
 2bc:	90 e0       	ldi	r25, 0x00	; 0
 2be:	44 e0       	ldi	r20, 0x04	; 4
 2c0:	50 e0       	ldi	r21, 0x00	; 0
 2c2:	0e 94 1b 01 	call	0x236	; 0x236 <printAt>
 2c6:	1f 99       	sbic	0x03, 7	; 3
 2c8:	fe cf       	rjmp	.-4      	; 0x2c6 <button+0x1c>
 2ca:	ef cf       	rjmp	.-34     	; 0x2aa <button>

000002cc <computePrimes>:
 2cc:	ec 01       	movw	r28, r24
 2ce:	c1 2c       	mov	r12, r1
 2d0:	d1 2c       	mov	r13, r1
 2d2:	76 01       	movw	r14, r12
 2d4:	c3 94       	inc	r12
 2d6:	c7 01       	movw	r24, r14
 2d8:	b6 01       	movw	r22, r12
 2da:	0e 94 ba 00 	call	0x174	; 0x174 <is_prime>
 2de:	89 2b       	or	r24, r25
 2e0:	29 f0       	breq	.+10     	; 0x2ec <computePrimes+0x20>
 2e2:	ae 01       	movw	r20, r28
 2e4:	c7 01       	movw	r24, r14
 2e6:	b6 01       	movw	r22, r12
 2e8:	0e 94 1b 01 	call	0x236	; 0x236 <printAt>
 2ec:	8f ef       	ldi	r24, 0xFF	; 255
 2ee:	c8 1a       	sub	r12, r24
 2f0:	d8 0a       	sbc	r13, r24
 2f2:	e8 0a       	sbc	r14, r24
 2f4:	f8 0a       	sbc	r15, r24
 2f6:	ef cf       	rjmp	.-34     	; 0x2d6 <computePrimes+0xa>

000002f8 <main>:
		reset_timer_int_counter();
		toggle_led();
	}
}
int main() {
	LCDDR13 = LCDDR13|1;
 2f8:	e9 ef       	ldi	r30, 0xF9	; 249
 2fa:	f0 e0       	ldi	r31, 0x00	; 0
 2fc:	80 81       	ld	r24, Z
 2fe:	81 60       	ori	r24, 0x01	; 1
 300:	80 83       	st	Z, r24
	init_lcd();
 302:	0e 94 4d 00 	call	0x9a	; 0x9a <init_lcd>
	
	spawn(button,0);
 306:	60 e0       	ldi	r22, 0x00	; 0
 308:	70 e0       	ldi	r23, 0x00	; 0
 30a:	85 e5       	ldi	r24, 0x55	; 85
 30c:	91 e0       	ldi	r25, 0x01	; 1
 30e:	0e 94 ca 01 	call	0x394	; 0x394 <spawn>
    spawn(blink,0);	
 312:	60 e0       	ldi	r22, 0x00	; 0
 314:	70 e0       	ldi	r23, 0x00	; 0
 316:	82 e1       	ldi	r24, 0x12	; 18
 318:	91 e0       	ldi	r25, 0x01	; 1
 31a:	0e 94 ca 01 	call	0x394	; 0x394 <spawn>
	computePrimes(0);
 31e:	80 e0       	ldi	r24, 0x00	; 0
 320:	90 e0       	ldi	r25, 0x00	; 0
 322:	0e 94 66 01 	call	0x2cc	; 0x2cc <computePrimes>

00000326 <enqueue>:
			m->locked = 0;
			dispatch(dequeue(&readyQ));
		}
	}
	ENABLE();
}
 326:	dc 01       	movw	r26, r24
 328:	15 96       	adiw	r26, 0x05	; 5
 32a:	1c 92       	st	X, r1
 32c:	1e 92       	st	-X, r1
 32e:	14 97       	sbiw	r26, 0x04	; 4
 330:	db 01       	movw	r26, r22
 332:	ed 91       	ld	r30, X+
 334:	fc 91       	ld	r31, X
 336:	11 97       	sbiw	r26, 0x01	; 1
 338:	30 97       	sbiw	r30, 0x00	; 0
 33a:	21 f4       	brne	.+8      	; 0x344 <enqueue+0x1e>
 33c:	8d 93       	st	X+, r24
 33e:	9c 93       	st	X, r25
 340:	08 95       	ret
 342:	f9 01       	movw	r30, r18
 344:	24 81       	ldd	r18, Z+4	; 0x04
 346:	35 81       	ldd	r19, Z+5	; 0x05
 348:	21 15       	cp	r18, r1
 34a:	31 05       	cpc	r19, r1
 34c:	d1 f7       	brne	.-12     	; 0x342 <enqueue+0x1c>
 34e:	95 83       	std	Z+5, r25	; 0x05
 350:	84 83       	std	Z+4, r24	; 0x04
 352:	08 95       	ret

00000354 <dispatch>:
 354:	cf 93       	push	r28
 356:	df 93       	push	r29
 358:	00 d0       	rcall	.+0      	; 0x35a <dispatch+0x6>
 35a:	cd b7       	in	r28, 0x3d	; 61
 35c:	de b7       	in	r29, 0x3e	; 62
 35e:	9a 83       	std	Y+2, r25	; 0x02
 360:	89 83       	std	Y+1, r24	; 0x01
 362:	80 91 28 01 	lds	r24, 0x0128	; 0x800128 <current>
 366:	90 91 29 01 	lds	r25, 0x0129	; 0x800129 <current+0x1>
 36a:	06 96       	adiw	r24, 0x06	; 6
 36c:	0e 94 13 03 	call	0x626	; 0x626 <setjmp>
 370:	89 2b       	or	r24, r25
 372:	59 f4       	brne	.+22     	; 0x38a <dispatch+0x36>
 374:	89 81       	ldd	r24, Y+1	; 0x01
 376:	9a 81       	ldd	r25, Y+2	; 0x02
 378:	90 93 29 01 	sts	0x0129, r25	; 0x800129 <current+0x1>
 37c:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <current>
 380:	61 e0       	ldi	r22, 0x01	; 1
 382:	70 e0       	ldi	r23, 0x00	; 0
 384:	06 96       	adiw	r24, 0x06	; 6
 386:	0e 94 33 03 	call	0x666	; 0x666 <longjmp>
 38a:	0f 90       	pop	r0
 38c:	0f 90       	pop	r0
 38e:	df 91       	pop	r29
 390:	cf 91       	pop	r28
 392:	08 95       	ret

00000394 <spawn>:
 394:	cf 93       	push	r28
 396:	df 93       	push	r29
 398:	00 d0       	rcall	.+0      	; 0x39a <spawn+0x6>
 39a:	cd b7       	in	r28, 0x3d	; 61
 39c:	de b7       	in	r29, 0x3e	; 62
 39e:	f8 94       	cli
 3a0:	20 91 2f 01 	lds	r18, 0x012F	; 0x80012f <initialized>
 3a4:	30 91 30 01 	lds	r19, 0x0130	; 0x800130 <initialized+0x1>
 3a8:	23 2b       	or	r18, r19
 3aa:	09 f0       	breq	.+2      	; 0x3ae <spawn+0x1a>
 3ac:	47 c0       	rjmp	.+142    	; 0x43c <__DATA_REGION_LENGTH__+0x3c>
 3ae:	e1 e6       	ldi	r30, 0x61	; 97
 3b0:	f0 e0       	ldi	r31, 0x00	; 0
 3b2:	20 e8       	ldi	r18, 0x80	; 128
 3b4:	20 83       	st	Z, r18
 3b6:	10 82       	st	Z, r1
 3b8:	e1 e8       	ldi	r30, 0x81	; 129
 3ba:	f0 e0       	ldi	r31, 0x00	; 0
 3bc:	20 81       	ld	r18, Z
 3be:	25 60       	ori	r18, 0x05	; 5
 3c0:	20 83       	st	Z, r18
 3c2:	2f 9a       	sbi	0x05, 7	; 5
 3c4:	24 b7       	in	r18, 0x34	; 52
 3c6:	20 68       	ori	r18, 0x80	; 128
 3c8:	24 bf       	out	0x34, r18	; 52
 3ca:	e9 e6       	ldi	r30, 0x69	; 105
 3cc:	f0 e0       	ldi	r31, 0x00	; 0
 3ce:	20 81       	ld	r18, Z
 3d0:	23 60       	ori	r18, 0x03	; 3
 3d2:	20 83       	st	Z, r18
 3d4:	2d b3       	in	r18, 0x1d	; 29
 3d6:	21 68       	ori	r18, 0x81	; 129
 3d8:	2d bb       	out	0x1d, r18	; 29
 3da:	ec e6       	ldi	r30, 0x6C	; 108
 3dc:	f0 e0       	ldi	r31, 0x00	; 0
 3de:	20 81       	ld	r18, Z
 3e0:	20 68       	ori	r18, 0x80	; 128
 3e2:	20 83       	st	Z, r18
 3e4:	ef e6       	ldi	r30, 0x6F	; 111
 3e6:	f0 e0       	ldi	r31, 0x00	; 0
 3e8:	20 81       	ld	r18, Z
 3ea:	22 60       	ori	r18, 0x02	; 2
 3ec:	20 83       	st	Z, r18
 3ee:	27 e8       	ldi	r18, 0x87	; 135
 3f0:	31 e0       	ldi	r19, 0x01	; 1
 3f2:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
 3f6:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
 3fa:	2f e0       	ldi	r18, 0x0F	; 15
 3fc:	32 e0       	ldi	r19, 0x02	; 2
 3fe:	30 93 a7 01 	sts	0x01A7, r19	; 0x8001a7 <threads+0x5>
 402:	20 93 a6 01 	sts	0x01A6, r18	; 0x8001a6 <threads+0x4>
 406:	2c e7       	ldi	r18, 0x7C	; 124
 408:	32 e0       	ldi	r19, 0x02	; 2
 40a:	30 93 14 02 	sts	0x0214, r19	; 0x800214 <threads+0x72>
 40e:	20 93 13 02 	sts	0x0213, r18	; 0x800213 <threads+0x71>
 412:	29 ee       	ldi	r18, 0xE9	; 233
 414:	32 e0       	ldi	r19, 0x02	; 2
 416:	30 93 81 02 	sts	0x0281, r19	; 0x800281 <threads+0xdf>
 41a:	20 93 80 02 	sts	0x0280, r18	; 0x800280 <threads+0xde>
 41e:	10 92 ee 02 	sts	0x02EE, r1	; 0x8002ee <threads+0x14c>
 422:	10 92 ed 02 	sts	0x02ED, r1	; 0x8002ed <threads+0x14b>
 426:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
 42a:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
 42e:	21 e0       	ldi	r18, 0x01	; 1
 430:	30 e0       	ldi	r19, 0x00	; 0
 432:	30 93 30 01 	sts	0x0130, r19	; 0x800130 <initialized+0x1>
 436:	20 93 2f 01 	sts	0x012F, r18	; 0x80012f <initialized>
 43a:	78 94       	sei
 43c:	20 91 2a 01 	lds	r18, 0x012A	; 0x80012a <freeQ>
 440:	30 91 2b 01 	lds	r19, 0x012B	; 0x80012b <freeQ+0x1>
 444:	3a 83       	std	Y+2, r19	; 0x02
 446:	29 83       	std	Y+1, r18	; 0x01
 448:	23 2b       	or	r18, r19
 44a:	a9 f0       	breq	.+42     	; 0x476 <__DATA_REGION_LENGTH__+0x76>
 44c:	e9 81       	ldd	r30, Y+1	; 0x01
 44e:	fa 81       	ldd	r31, Y+2	; 0x02
 450:	44 81       	ldd	r20, Z+4	; 0x04
 452:	55 81       	ldd	r21, Z+5	; 0x05
 454:	50 93 2b 01 	sts	0x012B, r21	; 0x80012b <freeQ+0x1>
 458:	40 93 2a 01 	sts	0x012A, r20	; 0x80012a <freeQ>
 45c:	91 83       	std	Z+1, r25	; 0x01
 45e:	80 83       	st	Z, r24
 460:	73 83       	std	Z+3, r23	; 0x03
 462:	62 83       	std	Z+2, r22	; 0x02
 464:	15 82       	std	Z+5, r1	; 0x05
 466:	14 82       	std	Z+4, r1	; 0x04
 468:	cf 01       	movw	r24, r30
 46a:	06 96       	adiw	r24, 0x06	; 6
 46c:	0e 94 13 03 	call	0x626	; 0x626 <setjmp>
 470:	01 97       	sbiw	r24, 0x01	; 1
 472:	49 f5       	brne	.+82     	; 0x4c6 <__DATA_REGION_LENGTH__+0xc6>
 474:	01 c0       	rjmp	.+2      	; 0x478 <__DATA_REGION_LENGTH__+0x78>
 476:	ff cf       	rjmp	.-2      	; 0x476 <__DATA_REGION_LENGTH__+0x76>
 478:	78 94       	sei
 47a:	a0 91 28 01 	lds	r26, 0x0128	; 0x800128 <current>
 47e:	b0 91 29 01 	lds	r27, 0x0129	; 0x800129 <current+0x1>
 482:	ed 91       	ld	r30, X+
 484:	fc 91       	ld	r31, X
 486:	11 97       	sbiw	r26, 0x01	; 1
 488:	12 96       	adiw	r26, 0x02	; 2
 48a:	8d 91       	ld	r24, X+
 48c:	9c 91       	ld	r25, X
 48e:	13 97       	sbiw	r26, 0x03	; 3
 490:	09 95       	icall
 492:	f8 94       	cli
 494:	6a e2       	ldi	r22, 0x2A	; 42
 496:	71 e0       	ldi	r23, 0x01	; 1
 498:	80 91 28 01 	lds	r24, 0x0128	; 0x800128 <current>
 49c:	90 91 29 01 	lds	r25, 0x0129	; 0x800129 <current+0x1>
 4a0:	0e 94 93 01 	call	0x326	; 0x326 <enqueue>
 4a4:	80 91 31 01 	lds	r24, 0x0131	; 0x800131 <readyQ>
 4a8:	90 91 32 01 	lds	r25, 0x0132	; 0x800132 <readyQ+0x1>
 4ac:	00 97       	sbiw	r24, 0x00	; 0
 4ae:	51 f0       	breq	.+20     	; 0x4c4 <__DATA_REGION_LENGTH__+0xc4>
 4b0:	fc 01       	movw	r30, r24
 4b2:	24 81       	ldd	r18, Z+4	; 0x04
 4b4:	35 81       	ldd	r19, Z+5	; 0x05
 4b6:	30 93 32 01 	sts	0x0132, r19	; 0x800132 <readyQ+0x1>
 4ba:	20 93 31 01 	sts	0x0131, r18	; 0x800131 <readyQ>
 4be:	0e 94 aa 01 	call	0x354	; 0x354 <dispatch>
 4c2:	01 c0       	rjmp	.+2      	; 0x4c6 <__DATA_REGION_LENGTH__+0xc6>
 4c4:	ff cf       	rjmp	.-2      	; 0x4c4 <__DATA_REGION_LENGTH__+0xc4>
 4c6:	e9 81       	ldd	r30, Y+1	; 0x01
 4c8:	fa 81       	ldd	r31, Y+2	; 0x02
 4ca:	36 96       	adiw	r30, 0x06	; 6
 4cc:	89 81       	ldd	r24, Y+1	; 0x01
 4ce:	9a 81       	ldd	r25, Y+2	; 0x02
 4d0:	87 59       	subi	r24, 0x97	; 151
 4d2:	9f 4f       	sbci	r25, 0xFF	; 255
 4d4:	91 8b       	std	Z+17, r25	; 0x11
 4d6:	80 8b       	std	Z+16, r24	; 0x10
 4d8:	93 8b       	std	Z+19, r25	; 0x13
 4da:	82 8b       	std	Z+18, r24	; 0x12
 4dc:	61 e3       	ldi	r22, 0x31	; 49
 4de:	71 e0       	ldi	r23, 0x01	; 1
 4e0:	89 81       	ldd	r24, Y+1	; 0x01
 4e2:	9a 81       	ldd	r25, Y+2	; 0x02
 4e4:	0e 94 93 01 	call	0x326	; 0x326 <enqueue>
 4e8:	78 94       	sei
 4ea:	0f 90       	pop	r0
 4ec:	0f 90       	pop	r0
 4ee:	df 91       	pop	r29
 4f0:	cf 91       	pop	r28
 4f2:	08 95       	ret

000004f4 <yield>:
 4f4:	f8 94       	cli
 4f6:	61 e3       	ldi	r22, 0x31	; 49
 4f8:	71 e0       	ldi	r23, 0x01	; 1
 4fa:	80 91 28 01 	lds	r24, 0x0128	; 0x800128 <current>
 4fe:	90 91 29 01 	lds	r25, 0x0129	; 0x800129 <current+0x1>
 502:	0e 94 93 01 	call	0x326	; 0x326 <enqueue>
 506:	80 91 31 01 	lds	r24, 0x0131	; 0x800131 <readyQ>
 50a:	90 91 32 01 	lds	r25, 0x0132	; 0x800132 <readyQ+0x1>
 50e:	00 97       	sbiw	r24, 0x00	; 0
 510:	59 f0       	breq	.+22     	; 0x528 <__stack+0x29>
 512:	fc 01       	movw	r30, r24
 514:	24 81       	ldd	r18, Z+4	; 0x04
 516:	35 81       	ldd	r19, Z+5	; 0x05
 518:	30 93 32 01 	sts	0x0132, r19	; 0x800132 <readyQ+0x1>
 51c:	20 93 31 01 	sts	0x0131, r18	; 0x800131 <readyQ>
 520:	0e 94 aa 01 	call	0x354	; 0x354 <dispatch>
 524:	78 94       	sei
 526:	08 95       	ret
 528:	ff cf       	rjmp	.-2      	; 0x528 <__stack+0x29>

0000052a <__vector_7>:
 52a:	1f 92       	push	r1
 52c:	0f 92       	push	r0
 52e:	0f b6       	in	r0, 0x3f	; 63
 530:	0f 92       	push	r0
 532:	11 24       	eor	r1, r1
 534:	2f 93       	push	r18
 536:	3f 93       	push	r19
 538:	4f 93       	push	r20
 53a:	5f 93       	push	r21
 53c:	6f 93       	push	r22
 53e:	7f 93       	push	r23
 540:	8f 93       	push	r24
 542:	9f 93       	push	r25
 544:	af 93       	push	r26
 546:	bf 93       	push	r27
 548:	ef 93       	push	r30
 54a:	ff 93       	push	r31
 54c:	80 91 33 01 	lds	r24, 0x0133	; 0x800133 <timer_int_counter>
 550:	90 91 34 01 	lds	r25, 0x0134	; 0x800134 <timer_int_counter+0x1>
 554:	01 96       	adiw	r24, 0x01	; 1
 556:	90 93 34 01 	sts	0x0134, r25	; 0x800134 <timer_int_counter+0x1>
 55a:	80 93 33 01 	sts	0x0133, r24	; 0x800133 <timer_int_counter>
 55e:	e0 91 2c 01 	lds	r30, 0x012C	; 0x80012c <timer>
 562:	f0 91 2d 01 	lds	r31, 0x012D	; 0x80012d <timer+0x1>
 566:	11 82       	std	Z+1, r1	; 0x01
 568:	10 82       	st	Z, r1
 56a:	0e 94 7a 02 	call	0x4f4	; 0x4f4 <yield>
 56e:	ff 91       	pop	r31
 570:	ef 91       	pop	r30
 572:	bf 91       	pop	r27
 574:	af 91       	pop	r26
 576:	9f 91       	pop	r25
 578:	8f 91       	pop	r24
 57a:	7f 91       	pop	r23
 57c:	6f 91       	pop	r22
 57e:	5f 91       	pop	r21
 580:	4f 91       	pop	r20
 582:	3f 91       	pop	r19
 584:	2f 91       	pop	r18
 586:	0f 90       	pop	r0
 588:	0f be       	out	0x3f, r0	; 63
 58a:	0f 90       	pop	r0
 58c:	1f 90       	pop	r1
 58e:	18 95       	reti

00000590 <get_timer_int_counter>:

uint16_t get_timer_int_counter(){
	return timer_int_counter;
}
 590:	80 91 33 01 	lds	r24, 0x0133	; 0x800133 <timer_int_counter>
 594:	90 91 34 01 	lds	r25, 0x0134	; 0x800134 <timer_int_counter+0x1>
 598:	08 95       	ret

0000059a <reset_timer_int_counter>:
void reset_timer_int_counter(){
	timer_int_counter = 0;
 59a:	10 92 34 01 	sts	0x0134, r1	; 0x800134 <timer_int_counter+0x1>
 59e:	10 92 33 01 	sts	0x0133, r1	; 0x800133 <timer_int_counter>
 5a2:	08 95       	ret

000005a4 <__divmodsi4>:
 5a4:	05 2e       	mov	r0, r21
 5a6:	97 fb       	bst	r25, 7
 5a8:	1e f4       	brtc	.+6      	; 0x5b0 <__divmodsi4+0xc>
 5aa:	00 94       	com	r0
 5ac:	0e 94 e9 02 	call	0x5d2	; 0x5d2 <__negsi2>
 5b0:	57 fd       	sbrc	r21, 7
 5b2:	07 d0       	rcall	.+14     	; 0x5c2 <__divmodsi4_neg2>
 5b4:	0e 94 f1 02 	call	0x5e2	; 0x5e2 <__udivmodsi4>
 5b8:	07 fc       	sbrc	r0, 7
 5ba:	03 d0       	rcall	.+6      	; 0x5c2 <__divmodsi4_neg2>
 5bc:	4e f4       	brtc	.+18     	; 0x5d0 <__divmodsi4_exit>
 5be:	0c 94 e9 02 	jmp	0x5d2	; 0x5d2 <__negsi2>

000005c2 <__divmodsi4_neg2>:
 5c2:	50 95       	com	r21
 5c4:	40 95       	com	r20
 5c6:	30 95       	com	r19
 5c8:	21 95       	neg	r18
 5ca:	3f 4f       	sbci	r19, 0xFF	; 255
 5cc:	4f 4f       	sbci	r20, 0xFF	; 255
 5ce:	5f 4f       	sbci	r21, 0xFF	; 255

000005d0 <__divmodsi4_exit>:
 5d0:	08 95       	ret

000005d2 <__negsi2>:
 5d2:	90 95       	com	r25
 5d4:	80 95       	com	r24
 5d6:	70 95       	com	r23
 5d8:	61 95       	neg	r22
 5da:	7f 4f       	sbci	r23, 0xFF	; 255
 5dc:	8f 4f       	sbci	r24, 0xFF	; 255
 5de:	9f 4f       	sbci	r25, 0xFF	; 255
 5e0:	08 95       	ret

000005e2 <__udivmodsi4>:
 5e2:	a1 e2       	ldi	r26, 0x21	; 33
 5e4:	1a 2e       	mov	r1, r26
 5e6:	aa 1b       	sub	r26, r26
 5e8:	bb 1b       	sub	r27, r27
 5ea:	fd 01       	movw	r30, r26
 5ec:	0d c0       	rjmp	.+26     	; 0x608 <__udivmodsi4_ep>

000005ee <__udivmodsi4_loop>:
 5ee:	aa 1f       	adc	r26, r26
 5f0:	bb 1f       	adc	r27, r27
 5f2:	ee 1f       	adc	r30, r30
 5f4:	ff 1f       	adc	r31, r31
 5f6:	a2 17       	cp	r26, r18
 5f8:	b3 07       	cpc	r27, r19
 5fa:	e4 07       	cpc	r30, r20
 5fc:	f5 07       	cpc	r31, r21
 5fe:	20 f0       	brcs	.+8      	; 0x608 <__udivmodsi4_ep>
 600:	a2 1b       	sub	r26, r18
 602:	b3 0b       	sbc	r27, r19
 604:	e4 0b       	sbc	r30, r20
 606:	f5 0b       	sbc	r31, r21

00000608 <__udivmodsi4_ep>:
 608:	66 1f       	adc	r22, r22
 60a:	77 1f       	adc	r23, r23
 60c:	88 1f       	adc	r24, r24
 60e:	99 1f       	adc	r25, r25
 610:	1a 94       	dec	r1
 612:	69 f7       	brne	.-38     	; 0x5ee <__udivmodsi4_loop>
 614:	60 95       	com	r22
 616:	70 95       	com	r23
 618:	80 95       	com	r24
 61a:	90 95       	com	r25
 61c:	9b 01       	movw	r18, r22
 61e:	ac 01       	movw	r20, r24
 620:	bd 01       	movw	r22, r26
 622:	cf 01       	movw	r24, r30
 624:	08 95       	ret

00000626 <setjmp>:
 626:	dc 01       	movw	r26, r24
 628:	2d 92       	st	X+, r2
 62a:	3d 92       	st	X+, r3
 62c:	4d 92       	st	X+, r4
 62e:	5d 92       	st	X+, r5
 630:	6d 92       	st	X+, r6
 632:	7d 92       	st	X+, r7
 634:	8d 92       	st	X+, r8
 636:	9d 92       	st	X+, r9
 638:	ad 92       	st	X+, r10
 63a:	bd 92       	st	X+, r11
 63c:	cd 92       	st	X+, r12
 63e:	dd 92       	st	X+, r13
 640:	ed 92       	st	X+, r14
 642:	fd 92       	st	X+, r15
 644:	0d 93       	st	X+, r16
 646:	1d 93       	st	X+, r17
 648:	cd 93       	st	X+, r28
 64a:	dd 93       	st	X+, r29
 64c:	ff 91       	pop	r31
 64e:	ef 91       	pop	r30
 650:	8d b7       	in	r24, 0x3d	; 61
 652:	8d 93       	st	X+, r24
 654:	8e b7       	in	r24, 0x3e	; 62
 656:	8d 93       	st	X+, r24
 658:	8f b7       	in	r24, 0x3f	; 63
 65a:	8d 93       	st	X+, r24
 65c:	ed 93       	st	X+, r30
 65e:	fd 93       	st	X+, r31
 660:	88 27       	eor	r24, r24
 662:	99 27       	eor	r25, r25
 664:	09 94       	ijmp

00000666 <longjmp>:
 666:	dc 01       	movw	r26, r24
 668:	cb 01       	movw	r24, r22
 66a:	81 30       	cpi	r24, 0x01	; 1
 66c:	91 05       	cpc	r25, r1
 66e:	81 1d       	adc	r24, r1
 670:	2d 90       	ld	r2, X+
 672:	3d 90       	ld	r3, X+
 674:	4d 90       	ld	r4, X+
 676:	5d 90       	ld	r5, X+
 678:	6d 90       	ld	r6, X+
 67a:	7d 90       	ld	r7, X+
 67c:	8d 90       	ld	r8, X+
 67e:	9d 90       	ld	r9, X+
 680:	ad 90       	ld	r10, X+
 682:	bd 90       	ld	r11, X+
 684:	cd 90       	ld	r12, X+
 686:	dd 90       	ld	r13, X+
 688:	ed 90       	ld	r14, X+
 68a:	fd 90       	ld	r15, X+
 68c:	0d 91       	ld	r16, X+
 68e:	1d 91       	ld	r17, X+
 690:	cd 91       	ld	r28, X+
 692:	dd 91       	ld	r29, X+
 694:	ed 91       	ld	r30, X+
 696:	fd 91       	ld	r31, X+
 698:	0d 90       	ld	r0, X+
 69a:	f8 94       	cli
 69c:	fe bf       	out	0x3e, r31	; 62
 69e:	0f be       	out	0x3f, r0	; 63
 6a0:	ed bf       	out	0x3d, r30	; 61
 6a2:	ed 91       	ld	r30, X+
 6a4:	fd 91       	ld	r31, X+
 6a6:	09 94       	ijmp

000006a8 <_exit>:
 6a8:	f8 94       	cli

000006aa <__stop_program>:
 6aa:	ff cf       	rjmp	.-2      	; 0x6aa <__stop_program>
