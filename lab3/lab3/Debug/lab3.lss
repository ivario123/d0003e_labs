
lab3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000002e  00800100  00000af4  00000b88  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000af4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000227  0080012e  0080012e  00000bb6  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000bb6  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000be8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000110  00000000  00000000  00000c28  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000010db  00000000  00000000  00000d38  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000b2f  00000000  00000000  00001e13  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000a88  00000000  00000000  00002942  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000003ac  00000000  00000000  000033cc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000622  00000000  00000000  00003778  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000076d  00000000  00000000  00003d9a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000e0  00000000  00000000  00004507  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2e 00 	jmp	0x5c	; 0x5c <__ctors_end>
   4:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
   8:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
   c:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
  10:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
  14:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
  18:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
  1c:	0c 94 a2 04 	jmp	0x944	; 0x944 <__vector_7>
  20:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
  24:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
  28:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
  2c:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
  30:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
  34:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
  38:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
  3c:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
  40:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
  44:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
  48:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
  4c:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
  50:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
  54:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
  58:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>

0000005c <__ctors_end>:
  5c:	11 24       	eor	r1, r1
  5e:	1f be       	out	0x3f, r1	; 63
  60:	cf ef       	ldi	r28, 0xFF	; 255
  62:	d4 e0       	ldi	r29, 0x04	; 4
  64:	de bf       	out	0x3e, r29	; 62
  66:	cd bf       	out	0x3d, r28	; 61

00000068 <__do_copy_data>:
  68:	11 e0       	ldi	r17, 0x01	; 1
  6a:	a0 e0       	ldi	r26, 0x00	; 0
  6c:	b1 e0       	ldi	r27, 0x01	; 1
  6e:	e4 ef       	ldi	r30, 0xF4	; 244
  70:	fa e0       	ldi	r31, 0x0A	; 10
  72:	02 c0       	rjmp	.+4      	; 0x78 <__do_copy_data+0x10>
  74:	05 90       	lpm	r0, Z+
  76:	0d 92       	st	X+, r0
  78:	ae 32       	cpi	r26, 0x2E	; 46
  7a:	b1 07       	cpc	r27, r17
  7c:	d9 f7       	brne	.-10     	; 0x74 <__do_copy_data+0xc>

0000007e <__do_clear_bss>:
  7e:	23 e0       	ldi	r18, 0x03	; 3
  80:	ae e2       	ldi	r26, 0x2E	; 46
  82:	b1 e0       	ldi	r27, 0x01	; 1
  84:	01 c0       	rjmp	.+2      	; 0x88 <.do_clear_bss_start>

00000086 <.do_clear_bss_loop>:
  86:	1d 92       	st	X+, r1

00000088 <.do_clear_bss_start>:
  88:	a5 35       	cpi	r26, 0x55	; 85
  8a:	b2 07       	cpc	r27, r18
  8c:	e1 f7       	brne	.-8      	; 0x86 <.do_clear_bss_loop>
  8e:	0e 94 b1 02 	call	0x562	; 0x562 <main>
  92:	0c 94 78 05 	jmp	0xaf0	; 0xaf0 <_exit>

00000096 <__bad_interrupt>:
  96:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000009a <init_lcd>:

void swap_segment(void){
	
	LCDDR13 = LCDDR13^1;
	LCDDR18 = LCDDR18^1;
}
  9a:	cf 93       	push	r28
  9c:	df 93       	push	r29
  9e:	cd b7       	in	r28, 0x3d	; 61
  a0:	de b7       	in	r29, 0x3e	; 62
  a2:	84 ee       	ldi	r24, 0xE4	; 228
  a4:	90 e0       	ldi	r25, 0x00	; 0
  a6:	24 ee       	ldi	r18, 0xE4	; 228
  a8:	30 e0       	ldi	r19, 0x00	; 0
  aa:	f9 01       	movw	r30, r18
  ac:	20 81       	ld	r18, Z
  ae:	20 68       	ori	r18, 0x80	; 128
  b0:	fc 01       	movw	r30, r24
  b2:	20 83       	st	Z, r18
  b4:	84 ee       	ldi	r24, 0xE4	; 228
  b6:	90 e0       	ldi	r25, 0x00	; 0
  b8:	24 ee       	ldi	r18, 0xE4	; 228
  ba:	30 e0       	ldi	r19, 0x00	; 0
  bc:	f9 01       	movw	r30, r18
  be:	20 81       	ld	r18, Z
  c0:	20 64       	ori	r18, 0x40	; 64
  c2:	fc 01       	movw	r30, r24
  c4:	20 83       	st	Z, r18
  c6:	84 ee       	ldi	r24, 0xE4	; 228
  c8:	90 e0       	ldi	r25, 0x00	; 0
  ca:	24 ee       	ldi	r18, 0xE4	; 228
  cc:	30 e0       	ldi	r19, 0x00	; 0
  ce:	f9 01       	movw	r30, r18
  d0:	20 81       	ld	r18, Z
  d2:	2f 7e       	andi	r18, 0xEF	; 239
  d4:	fc 01       	movw	r30, r24
  d6:	20 83       	st	Z, r18
  d8:	84 ee       	ldi	r24, 0xE4	; 228
  da:	90 e0       	ldi	r25, 0x00	; 0
  dc:	24 ee       	ldi	r18, 0xE4	; 228
  de:	30 e0       	ldi	r19, 0x00	; 0
  e0:	f9 01       	movw	r30, r18
  e2:	20 81       	ld	r18, Z
  e4:	2e 7f       	andi	r18, 0xFE	; 254
  e6:	fc 01       	movw	r30, r24
  e8:	20 83       	st	Z, r18
  ea:	85 ee       	ldi	r24, 0xE5	; 229
  ec:	90 e0       	ldi	r25, 0x00	; 0
  ee:	25 ee       	ldi	r18, 0xE5	; 229
  f0:	30 e0       	ldi	r19, 0x00	; 0
  f2:	f9 01       	movw	r30, r18
  f4:	20 81       	ld	r18, Z
  f6:	20 68       	ori	r18, 0x80	; 128
  f8:	fc 01       	movw	r30, r24
  fa:	20 83       	st	Z, r18
  fc:	85 ee       	ldi	r24, 0xE5	; 229
  fe:	90 e0       	ldi	r25, 0x00	; 0
 100:	25 ee       	ldi	r18, 0xE5	; 229
 102:	30 e0       	ldi	r19, 0x00	; 0
 104:	f9 01       	movw	r30, r18
 106:	20 81       	ld	r18, Z
 108:	2f 7b       	andi	r18, 0xBF	; 191
 10a:	fc 01       	movw	r30, r24
 10c:	20 83       	st	Z, r18
 10e:	85 ee       	ldi	r24, 0xE5	; 229
 110:	90 e0       	ldi	r25, 0x00	; 0
 112:	25 ee       	ldi	r18, 0xE5	; 229
 114:	30 e0       	ldi	r19, 0x00	; 0
 116:	f9 01       	movw	r30, r18
 118:	20 81       	ld	r18, Z
 11a:	20 63       	ori	r18, 0x30	; 48
 11c:	fc 01       	movw	r30, r24
 11e:	20 83       	st	Z, r18
 120:	85 ee       	ldi	r24, 0xE5	; 229
 122:	90 e0       	ldi	r25, 0x00	; 0
 124:	25 ee       	ldi	r18, 0xE5	; 229
 126:	30 e0       	ldi	r19, 0x00	; 0
 128:	f9 01       	movw	r30, r18
 12a:	20 81       	ld	r18, Z
 12c:	27 60       	ori	r18, 0x07	; 7
 12e:	fc 01       	movw	r30, r24
 130:	20 83       	st	Z, r18
 132:	86 ee       	ldi	r24, 0xE6	; 230
 134:	90 e0       	ldi	r25, 0x00	; 0
 136:	26 ee       	ldi	r18, 0xE6	; 230
 138:	30 e0       	ldi	r19, 0x00	; 0
 13a:	f9 01       	movw	r30, r18
 13c:	20 81       	ld	r18, Z
 13e:	2f 78       	andi	r18, 0x8F	; 143
 140:	fc 01       	movw	r30, r24
 142:	20 83       	st	Z, r18
 144:	86 ee       	ldi	r24, 0xE6	; 230
 146:	90 e0       	ldi	r25, 0x00	; 0
 148:	26 ee       	ldi	r18, 0xE6	; 230
 14a:	30 e0       	ldi	r19, 0x00	; 0
 14c:	f9 01       	movw	r30, r18
 14e:	20 81       	ld	r18, Z
 150:	27 60       	ori	r18, 0x07	; 7
 152:	fc 01       	movw	r30, r24
 154:	20 83       	st	Z, r18
 156:	87 ee       	ldi	r24, 0xE7	; 231
 158:	90 e0       	ldi	r25, 0x00	; 0
 15a:	27 ee       	ldi	r18, 0xE7	; 231
 15c:	30 e0       	ldi	r19, 0x00	; 0
 15e:	f9 01       	movw	r30, r18
 160:	20 81       	ld	r18, Z
 162:	2f 71       	andi	r18, 0x1F	; 31
 164:	fc 01       	movw	r30, r24
 166:	20 83       	st	Z, r18
 168:	87 ee       	ldi	r24, 0xE7	; 231
 16a:	90 e0       	ldi	r25, 0x00	; 0
 16c:	27 ee       	ldi	r18, 0xE7	; 231
 16e:	30 e0       	ldi	r19, 0x00	; 0
 170:	f9 01       	movw	r30, r18
 172:	20 81       	ld	r18, Z
 174:	2f 60       	ori	r18, 0x0F	; 15
 176:	fc 01       	movw	r30, r24
 178:	20 83       	st	Z, r18
 17a:	00 00       	nop
 17c:	df 91       	pop	r29
 17e:	cf 91       	pop	r28
 180:	08 95       	ret

00000182 <write_char>:
 182:	cf 93       	push	r28
 184:	df 93       	push	r29
 186:	cd b7       	in	r28, 0x3d	; 61
 188:	de b7       	in	r29, 0x3e	; 62
 18a:	2a 97       	sbiw	r28, 0x0a	; 10
 18c:	0f b6       	in	r0, 0x3f	; 63
 18e:	f8 94       	cli
 190:	de bf       	out	0x3e, r29	; 62
 192:	0f be       	out	0x3f, r0	; 63
 194:	cd bf       	out	0x3d, r28	; 61
 196:	88 87       	std	Y+8, r24	; 0x08
 198:	7a 87       	std	Y+10, r23	; 0x0a
 19a:	69 87       	std	Y+9, r22	; 0x09
 19c:	89 85       	ldd	r24, Y+9	; 0x09
 19e:	9a 85       	ldd	r25, Y+10	; 0x0a
 1a0:	99 23       	and	r25, r25
 1a2:	0c f4       	brge	.+2      	; 0x1a6 <write_char+0x24>
 1a4:	80 c0       	rjmp	.+256    	; 0x2a6 <__EEPROM_REGION_LENGTH__+0xa6>
 1a6:	89 85       	ldd	r24, Y+9	; 0x09
 1a8:	9a 85       	ldd	r25, Y+10	; 0x0a
 1aa:	06 97       	sbiw	r24, 0x06	; 6
 1ac:	0c f0       	brlt	.+2      	; 0x1b0 <write_char+0x2e>
 1ae:	7b c0       	rjmp	.+246    	; 0x2a6 <__EEPROM_REGION_LENGTH__+0xa6>
 1b0:	1a 82       	std	Y+2, r1	; 0x02
 1b2:	19 82       	std	Y+1, r1	; 0x01
 1b4:	89 85       	ldd	r24, Y+9	; 0x09
 1b6:	9a 85       	ldd	r25, Y+10	; 0x0a
 1b8:	95 95       	asr	r25
 1ba:	87 95       	ror	r24
 1bc:	84 51       	subi	r24, 0x14	; 20
 1be:	9f 4f       	sbci	r25, 0xFF	; 255
 1c0:	9c 83       	std	Y+4, r25	; 0x04
 1c2:	8b 83       	std	Y+3, r24	; 0x03
 1c4:	88 85       	ldd	r24, Y+8	; 0x08
 1c6:	80 33       	cpi	r24, 0x30	; 48
 1c8:	a0 f0       	brcs	.+40     	; 0x1f2 <write_char+0x70>
 1ca:	88 85       	ldd	r24, Y+8	; 0x08
 1cc:	8a 33       	cpi	r24, 0x3A	; 58
 1ce:	88 f4       	brcc	.+34     	; 0x1f2 <write_char+0x70>
 1d0:	88 85       	ldd	r24, Y+8	; 0x08
 1d2:	88 2f       	mov	r24, r24
 1d4:	90 e0       	ldi	r25, 0x00	; 0
 1d6:	c0 97       	sbiw	r24, 0x30	; 48
 1d8:	88 0f       	add	r24, r24
 1da:	99 1f       	adc	r25, r25
 1dc:	88 0f       	add	r24, r24
 1de:	99 1f       	adc	r25, r25
 1e0:	80 50       	subi	r24, 0x00	; 0
 1e2:	9f 4f       	sbci	r25, 0xFF	; 255
 1e4:	fc 01       	movw	r30, r24
 1e6:	80 81       	ld	r24, Z
 1e8:	91 81       	ldd	r25, Z+1	; 0x01
 1ea:	a2 81       	ldd	r26, Z+2	; 0x02
 1ec:	b3 81       	ldd	r27, Z+3	; 0x03
 1ee:	9a 83       	std	Y+2, r25	; 0x02
 1f0:	89 83       	std	Y+1, r24	; 0x01
 1f2:	1e 82       	std	Y+6, r1	; 0x06
 1f4:	1d 82       	std	Y+5, r1	; 0x05
 1f6:	51 c0       	rjmp	.+162    	; 0x29a <__EEPROM_REGION_LENGTH__+0x9a>
 1f8:	89 81       	ldd	r24, Y+1	; 0x01
 1fa:	8f 70       	andi	r24, 0x0F	; 15
 1fc:	8f 83       	std	Y+7, r24	; 0x07
 1fe:	89 81       	ldd	r24, Y+1	; 0x01
 200:	9a 81       	ldd	r25, Y+2	; 0x02
 202:	92 95       	swap	r25
 204:	82 95       	swap	r24
 206:	8f 70       	andi	r24, 0x0F	; 15
 208:	89 27       	eor	r24, r25
 20a:	9f 70       	andi	r25, 0x0F	; 15
 20c:	89 27       	eor	r24, r25
 20e:	9a 83       	std	Y+2, r25	; 0x02
 210:	89 83       	std	Y+1, r24	; 0x01
 212:	89 85       	ldd	r24, Y+9	; 0x09
 214:	9a 85       	ldd	r25, Y+10	; 0x0a
 216:	81 70       	andi	r24, 0x01	; 1
 218:	99 27       	eor	r25, r25
 21a:	89 2b       	or	r24, r25
 21c:	b1 f4       	brne	.+44     	; 0x24a <__EEPROM_REGION_LENGTH__+0x4a>
 21e:	8b 81       	ldd	r24, Y+3	; 0x03
 220:	9c 81       	ldd	r25, Y+4	; 0x04
 222:	fc 01       	movw	r30, r24
 224:	80 81       	ld	r24, Z
 226:	28 2f       	mov	r18, r24
 228:	20 7f       	andi	r18, 0xF0	; 240
 22a:	8b 81       	ldd	r24, Y+3	; 0x03
 22c:	9c 81       	ldd	r25, Y+4	; 0x04
 22e:	fc 01       	movw	r30, r24
 230:	20 83       	st	Z, r18
 232:	8b 81       	ldd	r24, Y+3	; 0x03
 234:	9c 81       	ldd	r25, Y+4	; 0x04
 236:	fc 01       	movw	r30, r24
 238:	90 81       	ld	r25, Z
 23a:	8f 81       	ldd	r24, Y+7	; 0x07
 23c:	29 2f       	mov	r18, r25
 23e:	28 2b       	or	r18, r24
 240:	8b 81       	ldd	r24, Y+3	; 0x03
 242:	9c 81       	ldd	r25, Y+4	; 0x04
 244:	fc 01       	movw	r30, r24
 246:	20 83       	st	Z, r18
 248:	1e c0       	rjmp	.+60     	; 0x286 <__EEPROM_REGION_LENGTH__+0x86>
 24a:	8b 81       	ldd	r24, Y+3	; 0x03
 24c:	9c 81       	ldd	r25, Y+4	; 0x04
 24e:	fc 01       	movw	r30, r24
 250:	80 81       	ld	r24, Z
 252:	28 2f       	mov	r18, r24
 254:	2f 70       	andi	r18, 0x0F	; 15
 256:	8b 81       	ldd	r24, Y+3	; 0x03
 258:	9c 81       	ldd	r25, Y+4	; 0x04
 25a:	fc 01       	movw	r30, r24
 25c:	20 83       	st	Z, r18
 25e:	8b 81       	ldd	r24, Y+3	; 0x03
 260:	9c 81       	ldd	r25, Y+4	; 0x04
 262:	fc 01       	movw	r30, r24
 264:	80 81       	ld	r24, Z
 266:	28 2f       	mov	r18, r24
 268:	8f 81       	ldd	r24, Y+7	; 0x07
 26a:	88 2f       	mov	r24, r24
 26c:	90 e0       	ldi	r25, 0x00	; 0
 26e:	82 95       	swap	r24
 270:	92 95       	swap	r25
 272:	90 7f       	andi	r25, 0xF0	; 240
 274:	98 27       	eor	r25, r24
 276:	80 7f       	andi	r24, 0xF0	; 240
 278:	98 27       	eor	r25, r24
 27a:	82 2b       	or	r24, r18
 27c:	28 2f       	mov	r18, r24
 27e:	8b 81       	ldd	r24, Y+3	; 0x03
 280:	9c 81       	ldd	r25, Y+4	; 0x04
 282:	fc 01       	movw	r30, r24
 284:	20 83       	st	Z, r18
 286:	8b 81       	ldd	r24, Y+3	; 0x03
 288:	9c 81       	ldd	r25, Y+4	; 0x04
 28a:	05 96       	adiw	r24, 0x05	; 5
 28c:	9c 83       	std	Y+4, r25	; 0x04
 28e:	8b 83       	std	Y+3, r24	; 0x03
 290:	8d 81       	ldd	r24, Y+5	; 0x05
 292:	9e 81       	ldd	r25, Y+6	; 0x06
 294:	01 96       	adiw	r24, 0x01	; 1
 296:	9e 83       	std	Y+6, r25	; 0x06
 298:	8d 83       	std	Y+5, r24	; 0x05
 29a:	8d 81       	ldd	r24, Y+5	; 0x05
 29c:	9e 81       	ldd	r25, Y+6	; 0x06
 29e:	04 97       	sbiw	r24, 0x04	; 4
 2a0:	0c f4       	brge	.+2      	; 0x2a4 <__EEPROM_REGION_LENGTH__+0xa4>
 2a2:	aa cf       	rjmp	.-172    	; 0x1f8 <write_char+0x76>
 2a4:	01 c0       	rjmp	.+2      	; 0x2a8 <__EEPROM_REGION_LENGTH__+0xa8>
 2a6:	00 00       	nop
 2a8:	2a 96       	adiw	r28, 0x0a	; 10
 2aa:	0f b6       	in	r0, 0x3f	; 63
 2ac:	f8 94       	cli
 2ae:	de bf       	out	0x3e, r29	; 62
 2b0:	0f be       	out	0x3f, r0	; 63
 2b2:	cd bf       	out	0x3d, r28	; 61
 2b4:	df 91       	pop	r29
 2b6:	cf 91       	pop	r28
 2b8:	08 95       	ret

000002ba <is_prime>:

int is_prime(long num){
 2ba:	cf 93       	push	r28
 2bc:	df 93       	push	r29
 2be:	cd b7       	in	r28, 0x3d	; 61
 2c0:	de b7       	in	r29, 0x3e	; 62
 2c2:	28 97       	sbiw	r28, 0x08	; 8
 2c4:	0f b6       	in	r0, 0x3f	; 63
 2c6:	f8 94       	cli
 2c8:	de bf       	out	0x3e, r29	; 62
 2ca:	0f be       	out	0x3f, r0	; 63
 2cc:	cd bf       	out	0x3d, r28	; 61
 2ce:	6d 83       	std	Y+5, r22	; 0x05
 2d0:	7e 83       	std	Y+6, r23	; 0x06
 2d2:	8f 83       	std	Y+7, r24	; 0x07
 2d4:	98 87       	std	Y+8, r25	; 0x08
	
	if (num <= 3)
 2d6:	8d 81       	ldd	r24, Y+5	; 0x05
 2d8:	9e 81       	ldd	r25, Y+6	; 0x06
 2da:	af 81       	ldd	r26, Y+7	; 0x07
 2dc:	b8 85       	ldd	r27, Y+8	; 0x08
 2de:	04 97       	sbiw	r24, 0x04	; 4
 2e0:	a1 05       	cpc	r26, r1
 2e2:	b1 05       	cpc	r27, r1
 2e4:	1c f4       	brge	.+6      	; 0x2ec <is_prime+0x32>
	return 1;
 2e6:	81 e0       	ldi	r24, 0x01	; 1
 2e8:	90 e0       	ldi	r25, 0x00	; 0
 2ea:	47 c0       	rjmp	.+142    	; 0x37a <is_prime+0xc0>
	
	if(num%2 == 0)
 2ec:	8d 81       	ldd	r24, Y+5	; 0x05
 2ee:	9e 81       	ldd	r25, Y+6	; 0x06
 2f0:	af 81       	ldd	r26, Y+7	; 0x07
 2f2:	b8 85       	ldd	r27, Y+8	; 0x08
 2f4:	81 70       	andi	r24, 0x01	; 1
 2f6:	99 27       	eor	r25, r25
 2f8:	aa 27       	eor	r26, r26
 2fa:	bb 27       	eor	r27, r27
 2fc:	89 2b       	or	r24, r25
 2fe:	8a 2b       	or	r24, r26
 300:	8b 2b       	or	r24, r27
 302:	19 f4       	brne	.+6      	; 0x30a <is_prime+0x50>
	return 0;
 304:	80 e0       	ldi	r24, 0x00	; 0
 306:	90 e0       	ldi	r25, 0x00	; 0
 308:	38 c0       	rjmp	.+112    	; 0x37a <is_prime+0xc0>
	
	long counter = 3;
 30a:	83 e0       	ldi	r24, 0x03	; 3
 30c:	90 e0       	ldi	r25, 0x00	; 0
 30e:	a0 e0       	ldi	r26, 0x00	; 0
 310:	b0 e0       	ldi	r27, 0x00	; 0
 312:	89 83       	std	Y+1, r24	; 0x01
 314:	9a 83       	std	Y+2, r25	; 0x02
 316:	ab 83       	std	Y+3, r26	; 0x03
 318:	bc 83       	std	Y+4, r27	; 0x04
	
	while(counter <num){
 31a:	20 c0       	rjmp	.+64     	; 0x35c <is_prime+0xa2>
		if(num%counter == 0)
 31c:	8d 81       	ldd	r24, Y+5	; 0x05
 31e:	9e 81       	ldd	r25, Y+6	; 0x06
 320:	af 81       	ldd	r26, Y+7	; 0x07
 322:	b8 85       	ldd	r27, Y+8	; 0x08
 324:	29 81       	ldd	r18, Y+1	; 0x01
 326:	3a 81       	ldd	r19, Y+2	; 0x02
 328:	4b 81       	ldd	r20, Y+3	; 0x03
 32a:	5c 81       	ldd	r21, Y+4	; 0x04
 32c:	bc 01       	movw	r22, r24
 32e:	cd 01       	movw	r24, r26
 330:	0e 94 f6 04 	call	0x9ec	; 0x9ec <__divmodsi4>
 334:	dc 01       	movw	r26, r24
 336:	cb 01       	movw	r24, r22
 338:	89 2b       	or	r24, r25
 33a:	8a 2b       	or	r24, r26
 33c:	8b 2b       	or	r24, r27
 33e:	19 f4       	brne	.+6      	; 0x346 <is_prime+0x8c>
		return 0;
 340:	80 e0       	ldi	r24, 0x00	; 0
 342:	90 e0       	ldi	r25, 0x00	; 0
 344:	1a c0       	rjmp	.+52     	; 0x37a <is_prime+0xc0>
		counter++;
 346:	89 81       	ldd	r24, Y+1	; 0x01
 348:	9a 81       	ldd	r25, Y+2	; 0x02
 34a:	ab 81       	ldd	r26, Y+3	; 0x03
 34c:	bc 81       	ldd	r27, Y+4	; 0x04
 34e:	01 96       	adiw	r24, 0x01	; 1
 350:	a1 1d       	adc	r26, r1
 352:	b1 1d       	adc	r27, r1
 354:	89 83       	std	Y+1, r24	; 0x01
 356:	9a 83       	std	Y+2, r25	; 0x02
 358:	ab 83       	std	Y+3, r26	; 0x03
 35a:	bc 83       	std	Y+4, r27	; 0x04
	if(num%2 == 0)
	return 0;
	
	long counter = 3;
	
	while(counter <num){
 35c:	29 81       	ldd	r18, Y+1	; 0x01
 35e:	3a 81       	ldd	r19, Y+2	; 0x02
 360:	4b 81       	ldd	r20, Y+3	; 0x03
 362:	5c 81       	ldd	r21, Y+4	; 0x04
 364:	8d 81       	ldd	r24, Y+5	; 0x05
 366:	9e 81       	ldd	r25, Y+6	; 0x06
 368:	af 81       	ldd	r26, Y+7	; 0x07
 36a:	b8 85       	ldd	r27, Y+8	; 0x08
 36c:	28 17       	cp	r18, r24
 36e:	39 07       	cpc	r19, r25
 370:	4a 07       	cpc	r20, r26
 372:	5b 07       	cpc	r21, r27
 374:	9c f2       	brlt	.-90     	; 0x31c <is_prime+0x62>
		if(num%counter == 0)
		return 0;
		counter++;
	}
	return 1;
 376:	81 e0       	ldi	r24, 0x01	; 1
 378:	90 e0       	ldi	r25, 0x00	; 0
}
 37a:	28 96       	adiw	r28, 0x08	; 8
 37c:	0f b6       	in	r0, 0x3f	; 63
 37e:	f8 94       	cli
 380:	de bf       	out	0x3e, r29	; 62
 382:	0f be       	out	0x3f, r0	; 63
 384:	cd bf       	out	0x3d, r28	; 61
 386:	df 91       	pop	r29
 388:	cf 91       	pop	r28
 38a:	08 95       	ret

0000038c <toggle_led>:

void toggle_led(void){
 38c:	cf 93       	push	r28
 38e:	df 93       	push	r29
 390:	cd b7       	in	r28, 0x3d	; 61
 392:	de b7       	in	r29, 0x3e	; 62
	LCDDR8= LCDDR8^1;
 394:	84 ef       	ldi	r24, 0xF4	; 244
 396:	90 e0       	ldi	r25, 0x00	; 0
 398:	24 ef       	ldi	r18, 0xF4	; 244
 39a:	30 e0       	ldi	r19, 0x00	; 0
 39c:	f9 01       	movw	r30, r18
 39e:	30 81       	ld	r19, Z
 3a0:	21 e0       	ldi	r18, 0x01	; 1
 3a2:	23 27       	eor	r18, r19
 3a4:	fc 01       	movw	r30, r24
 3a6:	20 83       	st	Z, r18
}
 3a8:	00 00       	nop
 3aa:	df 91       	pop	r29
 3ac:	cf 91       	pop	r28
 3ae:	08 95       	ret

000003b0 <blink>:
void blink(void){
 3b0:	cf 93       	push	r28
 3b2:	df 93       	push	r29
 3b4:	00 d0       	rcall	.+0      	; 0x3b6 <blink+0x6>
 3b6:	00 d0       	rcall	.+0      	; 0x3b8 <blink+0x8>
 3b8:	cd b7       	in	r28, 0x3d	; 61
 3ba:	de b7       	in	r29, 0x3e	; 62
	uint16_t freq = 31250/2;
 3bc:	89 e0       	ldi	r24, 0x09	; 9
 3be:	9d e3       	ldi	r25, 0x3D	; 61
 3c0:	9a 83       	std	Y+2, r25	; 0x02
 3c2:	89 83       	std	Y+1, r24	; 0x01
	uint16_t last_time = TCNT1;
 3c4:	84 e8       	ldi	r24, 0x84	; 132
 3c6:	90 e0       	ldi	r25, 0x00	; 0
 3c8:	fc 01       	movw	r30, r24
 3ca:	80 81       	ld	r24, Z
 3cc:	91 81       	ldd	r25, Z+1	; 0x01
 3ce:	9c 83       	std	Y+4, r25	; 0x04
 3d0:	8b 83       	std	Y+3, r24	; 0x03
	while(1){
		while(get_timer_int_counter() < 10);
 3d2:	00 00       	nop
 3d4:	0e 94 df 04 	call	0x9be	; 0x9be <get_timer_int_counter>
 3d8:	0a 97       	sbiw	r24, 0x0a	; 10
 3da:	e4 f3       	brlt	.-8      	; 0x3d4 <blink+0x24>
		reset_timer_int_counter();
 3dc:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <reset_timer_int_counter>
		last_time =(uint16_t)TCNT1;
 3e0:	84 e8       	ldi	r24, 0x84	; 132
 3e2:	90 e0       	ldi	r25, 0x00	; 0
 3e4:	fc 01       	movw	r30, r24
 3e6:	80 81       	ld	r24, Z
 3e8:	91 81       	ldd	r25, Z+1	; 0x01
 3ea:	9c 83       	std	Y+4, r25	; 0x04
 3ec:	8b 83       	std	Y+3, r24	; 0x03
		toggle_led();
 3ee:	0e 94 c6 01 	call	0x38c	; 0x38c <toggle_led>
	}
 3f2:	ef cf       	rjmp	.-34     	; 0x3d2 <blink+0x22>

000003f4 <printAt>:
		*num+=1;
		if(is_prime(*num)==1){
			return;
		}
	}
}
 3f4:	0f 93       	push	r16
 3f6:	1f 93       	push	r17
 3f8:	cf 93       	push	r28
 3fa:	df 93       	push	r29
 3fc:	00 d0       	rcall	.+0      	; 0x3fe <printAt+0xa>
 3fe:	00 d0       	rcall	.+0      	; 0x400 <__DATA_REGION_LENGTH__>
 400:	00 d0       	rcall	.+0      	; 0x402 <__DATA_REGION_LENGTH__+0x2>
 402:	cd b7       	in	r28, 0x3d	; 61
 404:	de b7       	in	r29, 0x3e	; 62
 406:	69 83       	std	Y+1, r22	; 0x01
 408:	7a 83       	std	Y+2, r23	; 0x02
 40a:	8b 83       	std	Y+3, r24	; 0x03
 40c:	9c 83       	std	Y+4, r25	; 0x04
 40e:	5e 83       	std	Y+6, r21	; 0x06
 410:	4d 83       	std	Y+5, r20	; 0x05
 412:	89 81       	ldd	r24, Y+1	; 0x01
 414:	9a 81       	ldd	r25, Y+2	; 0x02
 416:	ab 81       	ldd	r26, Y+3	; 0x03
 418:	bc 81       	ldd	r27, Y+4	; 0x04
 41a:	24 e6       	ldi	r18, 0x64	; 100
 41c:	30 e0       	ldi	r19, 0x00	; 0
 41e:	40 e0       	ldi	r20, 0x00	; 0
 420:	50 e0       	ldi	r21, 0x00	; 0
 422:	bc 01       	movw	r22, r24
 424:	cd 01       	movw	r24, r26
 426:	0e 94 f6 04 	call	0x9ec	; 0x9ec <__divmodsi4>
 42a:	dc 01       	movw	r26, r24
 42c:	cb 01       	movw	r24, r22
 42e:	2a e0       	ldi	r18, 0x0A	; 10
 430:	30 e0       	ldi	r19, 0x00	; 0
 432:	40 e0       	ldi	r20, 0x00	; 0
 434:	50 e0       	ldi	r21, 0x00	; 0
 436:	bc 01       	movw	r22, r24
 438:	cd 01       	movw	r24, r26
 43a:	0e 94 f6 04 	call	0x9ec	; 0x9ec <__divmodsi4>
 43e:	da 01       	movw	r26, r20
 440:	c9 01       	movw	r24, r18
 442:	20 e3       	ldi	r18, 0x30	; 48
 444:	28 0f       	add	r18, r24
 446:	8d 81       	ldd	r24, Y+5	; 0x05
 448:	9e 81       	ldd	r25, Y+6	; 0x06
 44a:	bc 01       	movw	r22, r24
 44c:	82 2f       	mov	r24, r18
 44e:	0e 94 c1 00 	call	0x182	; 0x182 <write_char>
 452:	8d 81       	ldd	r24, Y+5	; 0x05
 454:	9e 81       	ldd	r25, Y+6	; 0x06
 456:	8c 01       	movw	r16, r24
 458:	0f 5f       	subi	r16, 0xFF	; 255
 45a:	1f 4f       	sbci	r17, 0xFF	; 255
 45c:	89 81       	ldd	r24, Y+1	; 0x01
 45e:	9a 81       	ldd	r25, Y+2	; 0x02
 460:	ab 81       	ldd	r26, Y+3	; 0x03
 462:	bc 81       	ldd	r27, Y+4	; 0x04
 464:	2a e0       	ldi	r18, 0x0A	; 10
 466:	30 e0       	ldi	r19, 0x00	; 0
 468:	40 e0       	ldi	r20, 0x00	; 0
 46a:	50 e0       	ldi	r21, 0x00	; 0
 46c:	bc 01       	movw	r22, r24
 46e:	cd 01       	movw	r24, r26
 470:	0e 94 f6 04 	call	0x9ec	; 0x9ec <__divmodsi4>
 474:	dc 01       	movw	r26, r24
 476:	cb 01       	movw	r24, r22
 478:	80 5d       	subi	r24, 0xD0	; 208
 47a:	b8 01       	movw	r22, r16
 47c:	0e 94 c1 00 	call	0x182	; 0x182 <write_char>
 480:	00 00       	nop
 482:	26 96       	adiw	r28, 0x06	; 6
 484:	0f b6       	in	r0, 0x3f	; 63
 486:	f8 94       	cli
 488:	de bf       	out	0x3e, r29	; 62
 48a:	0f be       	out	0x3f, r0	; 63
 48c:	cd bf       	out	0x3d, r28	; 61
 48e:	df 91       	pop	r29
 490:	cf 91       	pop	r28
 492:	1f 91       	pop	r17
 494:	0f 91       	pop	r16
 496:	08 95       	ret

00000498 <computePrimes>:
 498:	cf 93       	push	r28
 49a:	df 93       	push	r29
 49c:	00 d0       	rcall	.+0      	; 0x49e <computePrimes+0x6>
 49e:	00 d0       	rcall	.+0      	; 0x4a0 <computePrimes+0x8>
 4a0:	00 d0       	rcall	.+0      	; 0x4a2 <computePrimes+0xa>
 4a2:	cd b7       	in	r28, 0x3d	; 61
 4a4:	de b7       	in	r29, 0x3e	; 62
 4a6:	9e 83       	std	Y+6, r25	; 0x06
 4a8:	8d 83       	std	Y+5, r24	; 0x05
 4aa:	81 e0       	ldi	r24, 0x01	; 1
 4ac:	90 e0       	ldi	r25, 0x00	; 0
 4ae:	a0 e0       	ldi	r26, 0x00	; 0
 4b0:	b0 e0       	ldi	r27, 0x00	; 0
 4b2:	89 83       	std	Y+1, r24	; 0x01
 4b4:	9a 83       	std	Y+2, r25	; 0x02
 4b6:	ab 83       	std	Y+3, r26	; 0x03
 4b8:	bc 83       	std	Y+4, r27	; 0x04
 4ba:	89 81       	ldd	r24, Y+1	; 0x01
 4bc:	9a 81       	ldd	r25, Y+2	; 0x02
 4be:	ab 81       	ldd	r26, Y+3	; 0x03
 4c0:	bc 81       	ldd	r27, Y+4	; 0x04
 4c2:	bc 01       	movw	r22, r24
 4c4:	cd 01       	movw	r24, r26
 4c6:	0e 94 5d 01 	call	0x2ba	; 0x2ba <is_prime>
 4ca:	89 2b       	or	r24, r25
 4cc:	59 f0       	breq	.+22     	; 0x4e4 <computePrimes+0x4c>
 4ce:	2d 81       	ldd	r18, Y+5	; 0x05
 4d0:	3e 81       	ldd	r19, Y+6	; 0x06
 4d2:	89 81       	ldd	r24, Y+1	; 0x01
 4d4:	9a 81       	ldd	r25, Y+2	; 0x02
 4d6:	ab 81       	ldd	r26, Y+3	; 0x03
 4d8:	bc 81       	ldd	r27, Y+4	; 0x04
 4da:	a9 01       	movw	r20, r18
 4dc:	bc 01       	movw	r22, r24
 4de:	cd 01       	movw	r24, r26
 4e0:	0e 94 fa 01 	call	0x3f4	; 0x3f4 <printAt>
 4e4:	89 81       	ldd	r24, Y+1	; 0x01
 4e6:	9a 81       	ldd	r25, Y+2	; 0x02
 4e8:	ab 81       	ldd	r26, Y+3	; 0x03
 4ea:	bc 81       	ldd	r27, Y+4	; 0x04
 4ec:	01 96       	adiw	r24, 0x01	; 1
 4ee:	a1 1d       	adc	r26, r1
 4f0:	b1 1d       	adc	r27, r1
 4f2:	89 83       	std	Y+1, r24	; 0x01
 4f4:	9a 83       	std	Y+2, r25	; 0x02
 4f6:	ab 83       	std	Y+3, r26	; 0x03
 4f8:	bc 83       	std	Y+4, r27	; 0x04
 4fa:	df cf       	rjmp	.-66     	; 0x4ba <computePrimes+0x22>

000004fc <button>:

volatile uint8_t button_counter = 0;
void button(){
 4fc:	cf 93       	push	r28
 4fe:	df 93       	push	r29
 500:	00 d0       	rcall	.+0      	; 0x502 <__stack+0x3>
 502:	cd b7       	in	r28, 0x3d	; 61
 504:	de b7       	in	r29, 0x3e	; 62
		
		// Uses two busy wait loops to ensure that the switch needs to be pushed and released before event trigger
		uint8_t * ptr = 0x83E9;
 506:	89 ee       	ldi	r24, 0xE9	; 233
 508:	93 e8       	ldi	r25, 0x83	; 131
 50a:	9a 83       	std	Y+2, r25	; 0x02
 50c:	89 83       	std	Y+1, r24	; 0x01
		//uint8_t * ptr = &button_counter;
		while(1){
			while(0==(PINB&(1<<7))>>7);
 50e:	00 00       	nop
 510:	83 e2       	ldi	r24, 0x23	; 35
 512:	90 e0       	ldi	r25, 0x00	; 0
 514:	fc 01       	movw	r30, r24
 516:	80 81       	ld	r24, Z
 518:	88 23       	and	r24, r24
 51a:	d4 f7       	brge	.-12     	; 0x510 <__stack+0x11>
			*(ptr) = *ptr +1;
 51c:	89 81       	ldd	r24, Y+1	; 0x01
 51e:	9a 81       	ldd	r25, Y+2	; 0x02
 520:	fc 01       	movw	r30, r24
 522:	80 81       	ld	r24, Z
 524:	21 e0       	ldi	r18, 0x01	; 1
 526:	28 0f       	add	r18, r24
 528:	89 81       	ldd	r24, Y+1	; 0x01
 52a:	9a 81       	ldd	r25, Y+2	; 0x02
 52c:	fc 01       	movw	r30, r24
 52e:	20 83       	st	Z, r18
			printAt(*ptr,4);
 530:	89 81       	ldd	r24, Y+1	; 0x01
 532:	9a 81       	ldd	r25, Y+2	; 0x02
 534:	fc 01       	movw	r30, r24
 536:	80 81       	ld	r24, Z
 538:	88 2f       	mov	r24, r24
 53a:	90 e0       	ldi	r25, 0x00	; 0
 53c:	a0 e0       	ldi	r26, 0x00	; 0
 53e:	b0 e0       	ldi	r27, 0x00	; 0
 540:	44 e0       	ldi	r20, 0x04	; 4
 542:	50 e0       	ldi	r21, 0x00	; 0
 544:	bc 01       	movw	r22, r24
 546:	cd 01       	movw	r24, r26
 548:	0e 94 fa 01 	call	0x3f4	; 0x3f4 <printAt>
			while(1==(PINB&(1<<7))>>7);
 54c:	00 00       	nop
 54e:	83 e2       	ldi	r24, 0x23	; 35
 550:	90 e0       	ldi	r25, 0x00	; 0
 552:	fc 01       	movw	r30, r24
 554:	80 81       	ld	r24, Z
 556:	88 1f       	adc	r24, r24
 558:	88 27       	eor	r24, r24
 55a:	88 1f       	adc	r24, r24
 55c:	81 30       	cpi	r24, 0x01	; 1
 55e:	b9 f3       	breq	.-18     	; 0x54e <__stack+0x4f>
		}
 560:	d6 cf       	rjmp	.-84     	; 0x50e <__stack+0xf>

00000562 <main>:
}

int main() {
 562:	cf 93       	push	r28
 564:	df 93       	push	r29
 566:	cd b7       	in	r28, 0x3d	; 61
 568:	de b7       	in	r29, 0x3e	; 62
	LCDDR13 = LCDDR13|1;
 56a:	89 ef       	ldi	r24, 0xF9	; 249
 56c:	90 e0       	ldi	r25, 0x00	; 0
 56e:	29 ef       	ldi	r18, 0xF9	; 249
 570:	30 e0       	ldi	r19, 0x00	; 0
 572:	f9 01       	movw	r30, r18
 574:	20 81       	ld	r18, Z
 576:	21 60       	ori	r18, 0x01	; 1
 578:	fc 01       	movw	r30, r24
 57a:	20 83       	st	Z, r18
	init_lcd();
 57c:	0e 94 4d 00 	call	0x9a	; 0x9a <init_lcd>
	
    spawn(blink,0);	
 580:	60 e0       	ldi	r22, 0x00	; 0
 582:	70 e0       	ldi	r23, 0x00	; 0
 584:	88 ed       	ldi	r24, 0xD8	; 216
 586:	91 e0       	ldi	r25, 0x01	; 1
 588:	0e 94 0b 04 	call	0x816	; 0x816 <spawn>
	spawn(button,0);
 58c:	60 e0       	ldi	r22, 0x00	; 0
 58e:	70 e0       	ldi	r23, 0x00	; 0
 590:	8e e7       	ldi	r24, 0x7E	; 126
 592:	92 e0       	ldi	r25, 0x02	; 2
 594:	0e 94 0b 04 	call	0x816	; 0x816 <spawn>
	computePrimes(0);
 598:	80 e0       	ldi	r24, 0x00	; 0
 59a:	90 e0       	ldi	r25, 0x00	; 0
 59c:	0e 94 4c 02 	call	0x498	; 0x498 <computePrimes>
	return 0;
 5a0:	80 e0       	ldi	r24, 0x00	; 0
 5a2:	90 e0       	ldi	r25, 0x00	; 0
}
 5a4:	df 91       	pop	r29
 5a6:	cf 91       	pop	r28
 5a8:	08 95       	ret

000005aa <initialize>:
			m->locked = 0;
			dispatch(dequeue(&readyQ));
		}
	}
	ENABLE();
}
 5aa:	cf 93       	push	r28
 5ac:	df 93       	push	r29
 5ae:	00 d0       	rcall	.+0      	; 0x5b0 <initialize+0x6>
 5b0:	00 d0       	rcall	.+0      	; 0x5b2 <initialize+0x8>
 5b2:	00 d0       	rcall	.+0      	; 0x5b4 <initialize+0xa>
 5b4:	cd b7       	in	r28, 0x3d	; 61
 5b6:	de b7       	in	r29, 0x3e	; 62
 5b8:	84 e8       	ldi	r24, 0x84	; 132
 5ba:	90 e0       	ldi	r25, 0x00	; 0
 5bc:	9c 83       	std	Y+4, r25	; 0x04
 5be:	8b 83       	std	Y+3, r24	; 0x03
 5c0:	81 e6       	ldi	r24, 0x61	; 97
 5c2:	90 e0       	ldi	r25, 0x00	; 0
 5c4:	20 e8       	ldi	r18, 0x80	; 128
 5c6:	fc 01       	movw	r30, r24
 5c8:	20 83       	st	Z, r18
 5ca:	81 e6       	ldi	r24, 0x61	; 97
 5cc:	90 e0       	ldi	r25, 0x00	; 0
 5ce:	fc 01       	movw	r30, r24
 5d0:	10 82       	st	Z, r1
 5d2:	81 e8       	ldi	r24, 0x81	; 129
 5d4:	90 e0       	ldi	r25, 0x00	; 0
 5d6:	21 e8       	ldi	r18, 0x81	; 129
 5d8:	30 e0       	ldi	r19, 0x00	; 0
 5da:	f9 01       	movw	r30, r18
 5dc:	20 81       	ld	r18, Z
 5de:	25 60       	ori	r18, 0x05	; 5
 5e0:	fc 01       	movw	r30, r24
 5e2:	20 83       	st	Z, r18
 5e4:	85 e2       	ldi	r24, 0x25	; 37
 5e6:	90 e0       	ldi	r25, 0x00	; 0
 5e8:	25 e2       	ldi	r18, 0x25	; 37
 5ea:	30 e0       	ldi	r19, 0x00	; 0
 5ec:	f9 01       	movw	r30, r18
 5ee:	20 81       	ld	r18, Z
 5f0:	20 68       	ori	r18, 0x80	; 128
 5f2:	fc 01       	movw	r30, r24
 5f4:	20 83       	st	Z, r18
 5f6:	84 e5       	ldi	r24, 0x54	; 84
 5f8:	90 e0       	ldi	r25, 0x00	; 0
 5fa:	24 e5       	ldi	r18, 0x54	; 84
 5fc:	30 e0       	ldi	r19, 0x00	; 0
 5fe:	f9 01       	movw	r30, r18
 600:	20 81       	ld	r18, Z
 602:	20 68       	ori	r18, 0x80	; 128
 604:	fc 01       	movw	r30, r24
 606:	20 83       	st	Z, r18
 608:	89 e6       	ldi	r24, 0x69	; 105
 60a:	90 e0       	ldi	r25, 0x00	; 0
 60c:	29 e6       	ldi	r18, 0x69	; 105
 60e:	30 e0       	ldi	r19, 0x00	; 0
 610:	f9 01       	movw	r30, r18
 612:	20 81       	ld	r18, Z
 614:	23 60       	ori	r18, 0x03	; 3
 616:	fc 01       	movw	r30, r24
 618:	20 83       	st	Z, r18
 61a:	8d e3       	ldi	r24, 0x3D	; 61
 61c:	90 e0       	ldi	r25, 0x00	; 0
 61e:	2d e3       	ldi	r18, 0x3D	; 61
 620:	30 e0       	ldi	r19, 0x00	; 0
 622:	f9 01       	movw	r30, r18
 624:	20 81       	ld	r18, Z
 626:	21 68       	ori	r18, 0x81	; 129
 628:	fc 01       	movw	r30, r24
 62a:	20 83       	st	Z, r18
 62c:	8c e6       	ldi	r24, 0x6C	; 108
 62e:	90 e0       	ldi	r25, 0x00	; 0
 630:	2c e6       	ldi	r18, 0x6C	; 108
 632:	30 e0       	ldi	r19, 0x00	; 0
 634:	f9 01       	movw	r30, r18
 636:	20 81       	ld	r18, Z
 638:	20 68       	ori	r18, 0x80	; 128
 63a:	fc 01       	movw	r30, r24
 63c:	20 83       	st	Z, r18
 63e:	8f e6       	ldi	r24, 0x6F	; 111
 640:	90 e0       	ldi	r25, 0x00	; 0
 642:	2f e6       	ldi	r18, 0x6F	; 111
 644:	30 e0       	ldi	r19, 0x00	; 0
 646:	f9 01       	movw	r30, r18
 648:	20 81       	ld	r18, Z
 64a:	22 60       	ori	r18, 0x02	; 2
 64c:	fc 01       	movw	r30, r24
 64e:	20 83       	st	Z, r18
 650:	88 e8       	ldi	r24, 0x88	; 136
 652:	90 e0       	ldi	r25, 0x00	; 0
 654:	9e 83       	std	Y+6, r25	; 0x06
 656:	8d 83       	std	Y+5, r24	; 0x05
 658:	8d 81       	ldd	r24, Y+5	; 0x05
 65a:	9e 81       	ldd	r25, Y+6	; 0x06
 65c:	27 e8       	ldi	r18, 0x87	; 135
 65e:	31 e0       	ldi	r19, 0x01	; 1
 660:	fc 01       	movw	r30, r24
 662:	31 83       	std	Z+1, r19	; 0x01
 664:	20 83       	st	Z, r18
 666:	1a 82       	std	Y+2, r1	; 0x02
 668:	19 82       	std	Y+1, r1	; 0x01
 66a:	20 c0       	rjmp	.+64     	; 0x6ac <initialize+0x102>
 66c:	89 81       	ldd	r24, Y+1	; 0x01
 66e:	9a 81       	ldd	r25, Y+2	; 0x02
 670:	9c 01       	movw	r18, r24
 672:	2f 5f       	subi	r18, 0xFF	; 255
 674:	3f 4f       	sbci	r19, 0xFF	; 255
 676:	4d e6       	ldi	r20, 0x6D	; 109
 678:	42 9f       	mul	r20, r18
 67a:	c0 01       	movw	r24, r0
 67c:	43 9f       	mul	r20, r19
 67e:	90 0d       	add	r25, r0
 680:	11 24       	eor	r1, r1
 682:	9c 01       	movw	r18, r24
 684:	2f 55       	subi	r18, 0x5F	; 95
 686:	3e 4f       	sbci	r19, 0xFE	; 254
 688:	49 81       	ldd	r20, Y+1	; 0x01
 68a:	5a 81       	ldd	r21, Y+2	; 0x02
 68c:	6d e6       	ldi	r22, 0x6D	; 109
 68e:	64 9f       	mul	r22, r20
 690:	c0 01       	movw	r24, r0
 692:	65 9f       	mul	r22, r21
 694:	90 0d       	add	r25, r0
 696:	11 24       	eor	r1, r1
 698:	8b 55       	subi	r24, 0x5B	; 91
 69a:	9e 4f       	sbci	r25, 0xFE	; 254
 69c:	fc 01       	movw	r30, r24
 69e:	31 83       	std	Z+1, r19	; 0x01
 6a0:	20 83       	st	Z, r18
 6a2:	89 81       	ldd	r24, Y+1	; 0x01
 6a4:	9a 81       	ldd	r25, Y+2	; 0x02
 6a6:	01 96       	adiw	r24, 0x01	; 1
 6a8:	9a 83       	std	Y+2, r25	; 0x02
 6aa:	89 83       	std	Y+1, r24	; 0x01
 6ac:	89 81       	ldd	r24, Y+1	; 0x01
 6ae:	9a 81       	ldd	r25, Y+2	; 0x02
 6b0:	03 97       	sbiw	r24, 0x03	; 3
 6b2:	e4 f2       	brlt	.-72     	; 0x66c <initialize+0xc2>
 6b4:	10 92 ed 02 	sts	0x02ED, r1	; 0x8002ed <threads+0x14c>
 6b8:	10 92 ec 02 	sts	0x02EC, r1	; 0x8002ec <threads+0x14b>
 6bc:	8b 81       	ldd	r24, Y+3	; 0x03
 6be:	9c 81       	ldd	r25, Y+4	; 0x04
 6c0:	fc 01       	movw	r30, r24
 6c2:	11 82       	std	Z+1, r1	; 0x01
 6c4:	10 82       	st	Z, r1
 6c6:	81 e0       	ldi	r24, 0x01	; 1
 6c8:	90 e0       	ldi	r25, 0x00	; 0
 6ca:	90 93 33 01 	sts	0x0133, r25	; 0x800133 <initialized+0x1>
 6ce:	80 93 32 01 	sts	0x0132, r24	; 0x800132 <initialized>
 6d2:	78 94       	sei
 6d4:	00 00       	nop
 6d6:	26 96       	adiw	r28, 0x06	; 6
 6d8:	0f b6       	in	r0, 0x3f	; 63
 6da:	f8 94       	cli
 6dc:	de bf       	out	0x3e, r29	; 62
 6de:	0f be       	out	0x3f, r0	; 63
 6e0:	cd bf       	out	0x3d, r28	; 61
 6e2:	df 91       	pop	r29
 6e4:	cf 91       	pop	r28
 6e6:	08 95       	ret

000006e8 <enqueue>:
 6e8:	cf 93       	push	r28
 6ea:	df 93       	push	r29
 6ec:	00 d0       	rcall	.+0      	; 0x6ee <enqueue+0x6>
 6ee:	00 d0       	rcall	.+0      	; 0x6f0 <enqueue+0x8>
 6f0:	00 d0       	rcall	.+0      	; 0x6f2 <enqueue+0xa>
 6f2:	cd b7       	in	r28, 0x3d	; 61
 6f4:	de b7       	in	r29, 0x3e	; 62
 6f6:	9c 83       	std	Y+4, r25	; 0x04
 6f8:	8b 83       	std	Y+3, r24	; 0x03
 6fa:	7e 83       	std	Y+6, r23	; 0x06
 6fc:	6d 83       	std	Y+5, r22	; 0x05
 6fe:	8b 81       	ldd	r24, Y+3	; 0x03
 700:	9c 81       	ldd	r25, Y+4	; 0x04
 702:	fc 01       	movw	r30, r24
 704:	15 82       	std	Z+5, r1	; 0x05
 706:	14 82       	std	Z+4, r1	; 0x04
 708:	8d 81       	ldd	r24, Y+5	; 0x05
 70a:	9e 81       	ldd	r25, Y+6	; 0x06
 70c:	fc 01       	movw	r30, r24
 70e:	80 81       	ld	r24, Z
 710:	91 81       	ldd	r25, Z+1	; 0x01
 712:	89 2b       	or	r24, r25
 714:	41 f4       	brne	.+16     	; 0x726 <enqueue+0x3e>
 716:	8d 81       	ldd	r24, Y+5	; 0x05
 718:	9e 81       	ldd	r25, Y+6	; 0x06
 71a:	2b 81       	ldd	r18, Y+3	; 0x03
 71c:	3c 81       	ldd	r19, Y+4	; 0x04
 71e:	fc 01       	movw	r30, r24
 720:	31 83       	std	Z+1, r19	; 0x01
 722:	20 83       	st	Z, r18
 724:	1d c0       	rjmp	.+58     	; 0x760 <enqueue+0x78>
 726:	8d 81       	ldd	r24, Y+5	; 0x05
 728:	9e 81       	ldd	r25, Y+6	; 0x06
 72a:	fc 01       	movw	r30, r24
 72c:	80 81       	ld	r24, Z
 72e:	91 81       	ldd	r25, Z+1	; 0x01
 730:	9a 83       	std	Y+2, r25	; 0x02
 732:	89 83       	std	Y+1, r24	; 0x01
 734:	07 c0       	rjmp	.+14     	; 0x744 <enqueue+0x5c>
 736:	89 81       	ldd	r24, Y+1	; 0x01
 738:	9a 81       	ldd	r25, Y+2	; 0x02
 73a:	fc 01       	movw	r30, r24
 73c:	84 81       	ldd	r24, Z+4	; 0x04
 73e:	95 81       	ldd	r25, Z+5	; 0x05
 740:	9a 83       	std	Y+2, r25	; 0x02
 742:	89 83       	std	Y+1, r24	; 0x01
 744:	89 81       	ldd	r24, Y+1	; 0x01
 746:	9a 81       	ldd	r25, Y+2	; 0x02
 748:	fc 01       	movw	r30, r24
 74a:	84 81       	ldd	r24, Z+4	; 0x04
 74c:	95 81       	ldd	r25, Z+5	; 0x05
 74e:	89 2b       	or	r24, r25
 750:	91 f7       	brne	.-28     	; 0x736 <enqueue+0x4e>
 752:	89 81       	ldd	r24, Y+1	; 0x01
 754:	9a 81       	ldd	r25, Y+2	; 0x02
 756:	2b 81       	ldd	r18, Y+3	; 0x03
 758:	3c 81       	ldd	r19, Y+4	; 0x04
 75a:	fc 01       	movw	r30, r24
 75c:	35 83       	std	Z+5, r19	; 0x05
 75e:	24 83       	std	Z+4, r18	; 0x04
 760:	00 00       	nop
 762:	26 96       	adiw	r28, 0x06	; 6
 764:	0f b6       	in	r0, 0x3f	; 63
 766:	f8 94       	cli
 768:	de bf       	out	0x3e, r29	; 62
 76a:	0f be       	out	0x3f, r0	; 63
 76c:	cd bf       	out	0x3d, r28	; 61
 76e:	df 91       	pop	r29
 770:	cf 91       	pop	r28
 772:	08 95       	ret

00000774 <dequeue>:
 774:	cf 93       	push	r28
 776:	df 93       	push	r29
 778:	00 d0       	rcall	.+0      	; 0x77a <dequeue+0x6>
 77a:	00 d0       	rcall	.+0      	; 0x77c <dequeue+0x8>
 77c:	cd b7       	in	r28, 0x3d	; 61
 77e:	de b7       	in	r29, 0x3e	; 62
 780:	9c 83       	std	Y+4, r25	; 0x04
 782:	8b 83       	std	Y+3, r24	; 0x03
 784:	8b 81       	ldd	r24, Y+3	; 0x03
 786:	9c 81       	ldd	r25, Y+4	; 0x04
 788:	fc 01       	movw	r30, r24
 78a:	80 81       	ld	r24, Z
 78c:	91 81       	ldd	r25, Z+1	; 0x01
 78e:	9a 83       	std	Y+2, r25	; 0x02
 790:	89 83       	std	Y+1, r24	; 0x01
 792:	8b 81       	ldd	r24, Y+3	; 0x03
 794:	9c 81       	ldd	r25, Y+4	; 0x04
 796:	fc 01       	movw	r30, r24
 798:	80 81       	ld	r24, Z
 79a:	91 81       	ldd	r25, Z+1	; 0x01
 79c:	89 2b       	or	r24, r25
 79e:	71 f0       	breq	.+28     	; 0x7bc <dequeue+0x48>
 7a0:	8b 81       	ldd	r24, Y+3	; 0x03
 7a2:	9c 81       	ldd	r25, Y+4	; 0x04
 7a4:	fc 01       	movw	r30, r24
 7a6:	80 81       	ld	r24, Z
 7a8:	91 81       	ldd	r25, Z+1	; 0x01
 7aa:	fc 01       	movw	r30, r24
 7ac:	24 81       	ldd	r18, Z+4	; 0x04
 7ae:	35 81       	ldd	r19, Z+5	; 0x05
 7b0:	8b 81       	ldd	r24, Y+3	; 0x03
 7b2:	9c 81       	ldd	r25, Y+4	; 0x04
 7b4:	fc 01       	movw	r30, r24
 7b6:	31 83       	std	Z+1, r19	; 0x01
 7b8:	20 83       	st	Z, r18
 7ba:	01 c0       	rjmp	.+2      	; 0x7be <dequeue+0x4a>
 7bc:	ff cf       	rjmp	.-2      	; 0x7bc <dequeue+0x48>
 7be:	89 81       	ldd	r24, Y+1	; 0x01
 7c0:	9a 81       	ldd	r25, Y+2	; 0x02
 7c2:	0f 90       	pop	r0
 7c4:	0f 90       	pop	r0
 7c6:	0f 90       	pop	r0
 7c8:	0f 90       	pop	r0
 7ca:	df 91       	pop	r29
 7cc:	cf 91       	pop	r28
 7ce:	08 95       	ret

000007d0 <dispatch>:
 7d0:	cf 93       	push	r28
 7d2:	df 93       	push	r29
 7d4:	00 d0       	rcall	.+0      	; 0x7d6 <dispatch+0x6>
 7d6:	cd b7       	in	r28, 0x3d	; 61
 7d8:	de b7       	in	r29, 0x3e	; 62
 7da:	9a 83       	std	Y+2, r25	; 0x02
 7dc:	89 83       	std	Y+1, r24	; 0x01
 7de:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <current>
 7e2:	90 91 2d 01 	lds	r25, 0x012D	; 0x80012d <current+0x1>
 7e6:	06 96       	adiw	r24, 0x06	; 6
 7e8:	0e 94 37 05 	call	0xa6e	; 0xa6e <setjmp>
 7ec:	89 2b       	or	r24, r25
 7ee:	69 f4       	brne	.+26     	; 0x80a <dispatch+0x3a>
 7f0:	89 81       	ldd	r24, Y+1	; 0x01
 7f2:	9a 81       	ldd	r25, Y+2	; 0x02
 7f4:	90 93 2d 01 	sts	0x012D, r25	; 0x80012d <current+0x1>
 7f8:	80 93 2c 01 	sts	0x012C, r24	; 0x80012c <current>
 7fc:	89 81       	ldd	r24, Y+1	; 0x01
 7fe:	9a 81       	ldd	r25, Y+2	; 0x02
 800:	06 96       	adiw	r24, 0x06	; 6
 802:	61 e0       	ldi	r22, 0x01	; 1
 804:	70 e0       	ldi	r23, 0x00	; 0
 806:	0e 94 57 05 	call	0xaae	; 0xaae <longjmp>
 80a:	00 00       	nop
 80c:	0f 90       	pop	r0
 80e:	0f 90       	pop	r0
 810:	df 91       	pop	r29
 812:	cf 91       	pop	r28
 814:	08 95       	ret

00000816 <spawn>:
 816:	cf 93       	push	r28
 818:	df 93       	push	r29
 81a:	00 d0       	rcall	.+0      	; 0x81c <spawn+0x6>
 81c:	00 d0       	rcall	.+0      	; 0x81e <spawn+0x8>
 81e:	00 d0       	rcall	.+0      	; 0x820 <spawn+0xa>
 820:	cd b7       	in	r28, 0x3d	; 61
 822:	de b7       	in	r29, 0x3e	; 62
 824:	9c 83       	std	Y+4, r25	; 0x04
 826:	8b 83       	std	Y+3, r24	; 0x03
 828:	7e 83       	std	Y+6, r23	; 0x06
 82a:	6d 83       	std	Y+5, r22	; 0x05
 82c:	f8 94       	cli
 82e:	80 91 32 01 	lds	r24, 0x0132	; 0x800132 <initialized>
 832:	90 91 33 01 	lds	r25, 0x0133	; 0x800133 <initialized+0x1>
 836:	89 2b       	or	r24, r25
 838:	11 f4       	brne	.+4      	; 0x83e <spawn+0x28>
 83a:	0e 94 d5 02 	call	0x5aa	; 0x5aa <initialize>
 83e:	8a e2       	ldi	r24, 0x2A	; 42
 840:	91 e0       	ldi	r25, 0x01	; 1
 842:	0e 94 ba 03 	call	0x774	; 0x774 <dequeue>
 846:	9a 83       	std	Y+2, r25	; 0x02
 848:	89 83       	std	Y+1, r24	; 0x01
 84a:	89 81       	ldd	r24, Y+1	; 0x01
 84c:	9a 81       	ldd	r25, Y+2	; 0x02
 84e:	2b 81       	ldd	r18, Y+3	; 0x03
 850:	3c 81       	ldd	r19, Y+4	; 0x04
 852:	fc 01       	movw	r30, r24
 854:	31 83       	std	Z+1, r19	; 0x01
 856:	20 83       	st	Z, r18
 858:	89 81       	ldd	r24, Y+1	; 0x01
 85a:	9a 81       	ldd	r25, Y+2	; 0x02
 85c:	2d 81       	ldd	r18, Y+5	; 0x05
 85e:	3e 81       	ldd	r19, Y+6	; 0x06
 860:	fc 01       	movw	r30, r24
 862:	33 83       	std	Z+3, r19	; 0x03
 864:	22 83       	std	Z+2, r18	; 0x02
 866:	89 81       	ldd	r24, Y+1	; 0x01
 868:	9a 81       	ldd	r25, Y+2	; 0x02
 86a:	fc 01       	movw	r30, r24
 86c:	15 82       	std	Z+5, r1	; 0x05
 86e:	14 82       	std	Z+4, r1	; 0x04
 870:	89 81       	ldd	r24, Y+1	; 0x01
 872:	9a 81       	ldd	r25, Y+2	; 0x02
 874:	06 96       	adiw	r24, 0x06	; 6
 876:	0e 94 37 05 	call	0xa6e	; 0xa6e <setjmp>
 87a:	01 97       	sbiw	r24, 0x01	; 1
 87c:	01 f5       	brne	.+64     	; 0x8be <spawn+0xa8>
 87e:	78 94       	sei
 880:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <current>
 884:	90 91 2d 01 	lds	r25, 0x012D	; 0x80012d <current+0x1>
 888:	fc 01       	movw	r30, r24
 88a:	20 81       	ld	r18, Z
 88c:	31 81       	ldd	r19, Z+1	; 0x01
 88e:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <current>
 892:	90 91 2d 01 	lds	r25, 0x012D	; 0x80012d <current+0x1>
 896:	fc 01       	movw	r30, r24
 898:	82 81       	ldd	r24, Z+2	; 0x02
 89a:	93 81       	ldd	r25, Z+3	; 0x03
 89c:	f9 01       	movw	r30, r18
 89e:	09 95       	icall
 8a0:	f8 94       	cli
 8a2:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <current>
 8a6:	90 91 2d 01 	lds	r25, 0x012D	; 0x80012d <current+0x1>
 8aa:	6a e2       	ldi	r22, 0x2A	; 42
 8ac:	71 e0       	ldi	r23, 0x01	; 1
 8ae:	0e 94 74 03 	call	0x6e8	; 0x6e8 <enqueue>
 8b2:	80 e3       	ldi	r24, 0x30	; 48
 8b4:	91 e0       	ldi	r25, 0x01	; 1
 8b6:	0e 94 ba 03 	call	0x774	; 0x774 <dequeue>
 8ba:	0e 94 e8 03 	call	0x7d0	; 0x7d0 <dispatch>
 8be:	89 81       	ldd	r24, Y+1	; 0x01
 8c0:	9a 81       	ldd	r25, Y+2	; 0x02
 8c2:	06 96       	adiw	r24, 0x06	; 6
 8c4:	40 96       	adiw	r24, 0x10	; 16
 8c6:	29 81       	ldd	r18, Y+1	; 0x01
 8c8:	3a 81       	ldd	r19, Y+2	; 0x02
 8ca:	23 5e       	subi	r18, 0xE3	; 227
 8cc:	3f 4f       	sbci	r19, 0xFF	; 255
 8ce:	24 5b       	subi	r18, 0xB4	; 180
 8d0:	3f 4f       	sbci	r19, 0xFF	; 255
 8d2:	fc 01       	movw	r30, r24
 8d4:	31 83       	std	Z+1, r19	; 0x01
 8d6:	20 83       	st	Z, r18
 8d8:	89 81       	ldd	r24, Y+1	; 0x01
 8da:	9a 81       	ldd	r25, Y+2	; 0x02
 8dc:	06 96       	adiw	r24, 0x06	; 6
 8de:	42 96       	adiw	r24, 0x12	; 18
 8e0:	29 81       	ldd	r18, Y+1	; 0x01
 8e2:	3a 81       	ldd	r19, Y+2	; 0x02
 8e4:	23 5e       	subi	r18, 0xE3	; 227
 8e6:	3f 4f       	sbci	r19, 0xFF	; 255
 8e8:	24 5b       	subi	r18, 0xB4	; 180
 8ea:	3f 4f       	sbci	r19, 0xFF	; 255
 8ec:	fc 01       	movw	r30, r24
 8ee:	31 83       	std	Z+1, r19	; 0x01
 8f0:	20 83       	st	Z, r18
 8f2:	89 81       	ldd	r24, Y+1	; 0x01
 8f4:	9a 81       	ldd	r25, Y+2	; 0x02
 8f6:	60 e3       	ldi	r22, 0x30	; 48
 8f8:	71 e0       	ldi	r23, 0x01	; 1
 8fa:	0e 94 74 03 	call	0x6e8	; 0x6e8 <enqueue>
 8fe:	78 94       	sei
 900:	00 00       	nop
 902:	26 96       	adiw	r28, 0x06	; 6
 904:	0f b6       	in	r0, 0x3f	; 63
 906:	f8 94       	cli
 908:	de bf       	out	0x3e, r29	; 62
 90a:	0f be       	out	0x3f, r0	; 63
 90c:	cd bf       	out	0x3d, r28	; 61
 90e:	df 91       	pop	r29
 910:	cf 91       	pop	r28
 912:	08 95       	ret

00000914 <yield>:
 914:	cf 93       	push	r28
 916:	df 93       	push	r29
 918:	cd b7       	in	r28, 0x3d	; 61
 91a:	de b7       	in	r29, 0x3e	; 62
 91c:	f8 94       	cli
 91e:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <current>
 922:	90 91 2d 01 	lds	r25, 0x012D	; 0x80012d <current+0x1>
 926:	60 e3       	ldi	r22, 0x30	; 48
 928:	71 e0       	ldi	r23, 0x01	; 1
 92a:	0e 94 74 03 	call	0x6e8	; 0x6e8 <enqueue>
 92e:	80 e3       	ldi	r24, 0x30	; 48
 930:	91 e0       	ldi	r25, 0x01	; 1
 932:	0e 94 ba 03 	call	0x774	; 0x774 <dequeue>
 936:	0e 94 e8 03 	call	0x7d0	; 0x7d0 <dispatch>
 93a:	78 94       	sei
 93c:	00 00       	nop
 93e:	df 91       	pop	r29
 940:	cf 91       	pop	r28
 942:	08 95       	ret

00000944 <__vector_7>:
 944:	1f 92       	push	r1
 946:	0f 92       	push	r0
 948:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7fc05f>
 94c:	0f 92       	push	r0
 94e:	11 24       	eor	r1, r1
 950:	2f 93       	push	r18
 952:	3f 93       	push	r19
 954:	4f 93       	push	r20
 956:	5f 93       	push	r21
 958:	6f 93       	push	r22
 95a:	7f 93       	push	r23
 95c:	8f 93       	push	r24
 95e:	9f 93       	push	r25
 960:	af 93       	push	r26
 962:	bf 93       	push	r27
 964:	ef 93       	push	r30
 966:	ff 93       	push	r31
 968:	cf 93       	push	r28
 96a:	df 93       	push	r29
 96c:	cd b7       	in	r28, 0x3d	; 61
 96e:	de b7       	in	r29, 0x3e	; 62
 970:	80 91 2e 01 	lds	r24, 0x012E	; 0x80012e <__data_end>
 974:	90 91 2f 01 	lds	r25, 0x012F	; 0x80012f <__data_end+0x1>
 978:	01 96       	adiw	r24, 0x01	; 1
 97a:	90 93 2f 01 	sts	0x012F, r25	; 0x80012f <__data_end+0x1>
 97e:	80 93 2e 01 	sts	0x012E, r24	; 0x80012e <__data_end>
 982:	80 91 28 01 	lds	r24, 0x0128	; 0x800128 <timer>
 986:	90 91 29 01 	lds	r25, 0x0129	; 0x800129 <timer+0x1>
 98a:	fc 01       	movw	r30, r24
 98c:	11 82       	std	Z+1, r1	; 0x01
 98e:	10 82       	st	Z, r1
 990:	0e 94 8a 04 	call	0x914	; 0x914 <yield>
 994:	00 00       	nop
 996:	df 91       	pop	r29
 998:	cf 91       	pop	r28
 99a:	ff 91       	pop	r31
 99c:	ef 91       	pop	r30
 99e:	bf 91       	pop	r27
 9a0:	af 91       	pop	r26
 9a2:	9f 91       	pop	r25
 9a4:	8f 91       	pop	r24
 9a6:	7f 91       	pop	r23
 9a8:	6f 91       	pop	r22
 9aa:	5f 91       	pop	r21
 9ac:	4f 91       	pop	r20
 9ae:	3f 91       	pop	r19
 9b0:	2f 91       	pop	r18
 9b2:	0f 90       	pop	r0
 9b4:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7fc05f>
 9b8:	0f 90       	pop	r0
 9ba:	1f 90       	pop	r1
 9bc:	18 95       	reti

000009be <get_timer_int_counter>:

uint16_t get_timer_int_counter(){
 9be:	cf 93       	push	r28
 9c0:	df 93       	push	r29
 9c2:	cd b7       	in	r28, 0x3d	; 61
 9c4:	de b7       	in	r29, 0x3e	; 62
	return timer_int_counter;
 9c6:	80 91 2e 01 	lds	r24, 0x012E	; 0x80012e <__data_end>
 9ca:	90 91 2f 01 	lds	r25, 0x012F	; 0x80012f <__data_end+0x1>
}
 9ce:	df 91       	pop	r29
 9d0:	cf 91       	pop	r28
 9d2:	08 95       	ret

000009d4 <reset_timer_int_counter>:
void reset_timer_int_counter(){
 9d4:	cf 93       	push	r28
 9d6:	df 93       	push	r29
 9d8:	cd b7       	in	r28, 0x3d	; 61
 9da:	de b7       	in	r29, 0x3e	; 62
	timer_int_counter = 0;
 9dc:	10 92 2f 01 	sts	0x012F, r1	; 0x80012f <__data_end+0x1>
 9e0:	10 92 2e 01 	sts	0x012E, r1	; 0x80012e <__data_end>
}
 9e4:	00 00       	nop
 9e6:	df 91       	pop	r29
 9e8:	cf 91       	pop	r28
 9ea:	08 95       	ret

000009ec <__divmodsi4>:
 9ec:	05 2e       	mov	r0, r21
 9ee:	97 fb       	bst	r25, 7
 9f0:	1e f4       	brtc	.+6      	; 0x9f8 <__divmodsi4+0xc>
 9f2:	00 94       	com	r0
 9f4:	0e 94 0d 05 	call	0xa1a	; 0xa1a <__negsi2>
 9f8:	57 fd       	sbrc	r21, 7
 9fa:	07 d0       	rcall	.+14     	; 0xa0a <__divmodsi4_neg2>
 9fc:	0e 94 15 05 	call	0xa2a	; 0xa2a <__udivmodsi4>
 a00:	07 fc       	sbrc	r0, 7
 a02:	03 d0       	rcall	.+6      	; 0xa0a <__divmodsi4_neg2>
 a04:	4e f4       	brtc	.+18     	; 0xa18 <__divmodsi4_exit>
 a06:	0c 94 0d 05 	jmp	0xa1a	; 0xa1a <__negsi2>

00000a0a <__divmodsi4_neg2>:
 a0a:	50 95       	com	r21
 a0c:	40 95       	com	r20
 a0e:	30 95       	com	r19
 a10:	21 95       	neg	r18
 a12:	3f 4f       	sbci	r19, 0xFF	; 255
 a14:	4f 4f       	sbci	r20, 0xFF	; 255
 a16:	5f 4f       	sbci	r21, 0xFF	; 255

00000a18 <__divmodsi4_exit>:
 a18:	08 95       	ret

00000a1a <__negsi2>:
 a1a:	90 95       	com	r25
 a1c:	80 95       	com	r24
 a1e:	70 95       	com	r23
 a20:	61 95       	neg	r22
 a22:	7f 4f       	sbci	r23, 0xFF	; 255
 a24:	8f 4f       	sbci	r24, 0xFF	; 255
 a26:	9f 4f       	sbci	r25, 0xFF	; 255
 a28:	08 95       	ret

00000a2a <__udivmodsi4>:
 a2a:	a1 e2       	ldi	r26, 0x21	; 33
 a2c:	1a 2e       	mov	r1, r26
 a2e:	aa 1b       	sub	r26, r26
 a30:	bb 1b       	sub	r27, r27
 a32:	fd 01       	movw	r30, r26
 a34:	0d c0       	rjmp	.+26     	; 0xa50 <__udivmodsi4_ep>

00000a36 <__udivmodsi4_loop>:
 a36:	aa 1f       	adc	r26, r26
 a38:	bb 1f       	adc	r27, r27
 a3a:	ee 1f       	adc	r30, r30
 a3c:	ff 1f       	adc	r31, r31
 a3e:	a2 17       	cp	r26, r18
 a40:	b3 07       	cpc	r27, r19
 a42:	e4 07       	cpc	r30, r20
 a44:	f5 07       	cpc	r31, r21
 a46:	20 f0       	brcs	.+8      	; 0xa50 <__udivmodsi4_ep>
 a48:	a2 1b       	sub	r26, r18
 a4a:	b3 0b       	sbc	r27, r19
 a4c:	e4 0b       	sbc	r30, r20
 a4e:	f5 0b       	sbc	r31, r21

00000a50 <__udivmodsi4_ep>:
 a50:	66 1f       	adc	r22, r22
 a52:	77 1f       	adc	r23, r23
 a54:	88 1f       	adc	r24, r24
 a56:	99 1f       	adc	r25, r25
 a58:	1a 94       	dec	r1
 a5a:	69 f7       	brne	.-38     	; 0xa36 <__udivmodsi4_loop>
 a5c:	60 95       	com	r22
 a5e:	70 95       	com	r23
 a60:	80 95       	com	r24
 a62:	90 95       	com	r25
 a64:	9b 01       	movw	r18, r22
 a66:	ac 01       	movw	r20, r24
 a68:	bd 01       	movw	r22, r26
 a6a:	cf 01       	movw	r24, r30
 a6c:	08 95       	ret

00000a6e <setjmp>:
 a6e:	dc 01       	movw	r26, r24
 a70:	2d 92       	st	X+, r2
 a72:	3d 92       	st	X+, r3
 a74:	4d 92       	st	X+, r4
 a76:	5d 92       	st	X+, r5
 a78:	6d 92       	st	X+, r6
 a7a:	7d 92       	st	X+, r7
 a7c:	8d 92       	st	X+, r8
 a7e:	9d 92       	st	X+, r9
 a80:	ad 92       	st	X+, r10
 a82:	bd 92       	st	X+, r11
 a84:	cd 92       	st	X+, r12
 a86:	dd 92       	st	X+, r13
 a88:	ed 92       	st	X+, r14
 a8a:	fd 92       	st	X+, r15
 a8c:	0d 93       	st	X+, r16
 a8e:	1d 93       	st	X+, r17
 a90:	cd 93       	st	X+, r28
 a92:	dd 93       	st	X+, r29
 a94:	ff 91       	pop	r31
 a96:	ef 91       	pop	r30
 a98:	8d b7       	in	r24, 0x3d	; 61
 a9a:	8d 93       	st	X+, r24
 a9c:	8e b7       	in	r24, 0x3e	; 62
 a9e:	8d 93       	st	X+, r24
 aa0:	8f b7       	in	r24, 0x3f	; 63
 aa2:	8d 93       	st	X+, r24
 aa4:	ed 93       	st	X+, r30
 aa6:	fd 93       	st	X+, r31
 aa8:	88 27       	eor	r24, r24
 aaa:	99 27       	eor	r25, r25
 aac:	09 94       	ijmp

00000aae <longjmp>:
 aae:	dc 01       	movw	r26, r24
 ab0:	cb 01       	movw	r24, r22
 ab2:	81 30       	cpi	r24, 0x01	; 1
 ab4:	91 05       	cpc	r25, r1
 ab6:	81 1d       	adc	r24, r1
 ab8:	2d 90       	ld	r2, X+
 aba:	3d 90       	ld	r3, X+
 abc:	4d 90       	ld	r4, X+
 abe:	5d 90       	ld	r5, X+
 ac0:	6d 90       	ld	r6, X+
 ac2:	7d 90       	ld	r7, X+
 ac4:	8d 90       	ld	r8, X+
 ac6:	9d 90       	ld	r9, X+
 ac8:	ad 90       	ld	r10, X+
 aca:	bd 90       	ld	r11, X+
 acc:	cd 90       	ld	r12, X+
 ace:	dd 90       	ld	r13, X+
 ad0:	ed 90       	ld	r14, X+
 ad2:	fd 90       	ld	r15, X+
 ad4:	0d 91       	ld	r16, X+
 ad6:	1d 91       	ld	r17, X+
 ad8:	cd 91       	ld	r28, X+
 ada:	dd 91       	ld	r29, X+
 adc:	ed 91       	ld	r30, X+
 ade:	fd 91       	ld	r31, X+
 ae0:	0d 90       	ld	r0, X+
 ae2:	f8 94       	cli
 ae4:	fe bf       	out	0x3e, r31	; 62
 ae6:	0f be       	out	0x3f, r0	; 63
 ae8:	ed bf       	out	0x3d, r30	; 61
 aea:	ed 91       	ld	r30, X+
 aec:	fd 91       	ld	r31, X+
 aee:	09 94       	ijmp

00000af0 <_exit>:
 af0:	f8 94       	cli

00000af2 <__stop_program>:
 af2:	ff cf       	rjmp	.-2      	; 0xaf2 <__stop_program>
