
lab4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000005a  00800100  000023fe  00002492  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000023fe  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000357  0080015a  0080015a  000024ec  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000024ec  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000251c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000002e0  00000000  00000000  0000255c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000408b  00000000  00000000  0000283c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000014ef  00000000  00000000  000068c7  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001b9f  00000000  00000000  00007db6  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000e58  00000000  00000000  00009958  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000b24  00000000  00000000  0000a7b0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00003c97  00000000  00000000  0000b2d4  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000260  00000000  00000000  0000ef6b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2e 00 	jmp	0x5c	; 0x5c <__ctors_end>
       4:	0c 94 7e 04 	jmp	0x8fc	; 0x8fc <__vector_1>
       8:	0c 94 ed 04 	jmp	0x9da	; 0x9da <__vector_2>
       c:	0c 94 5c 05 	jmp	0xab8	; 0xab8 <__vector_3>
      10:	0c 94 cb 05 	jmp	0xb96	; 0xb96 <__vector_4>
      14:	0c 94 3a 06 	jmp	0xc74	; 0xc74 <__vector_5>
      18:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
      1c:	0c 94 a5 0c 	jmp	0x194a	; 0x194a <__vector_7>
      20:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
      24:	0c 94 53 0c 	jmp	0x18a6	; 0x18a6 <__vector_9>
      28:	0c 94 a9 06 	jmp	0xd52	; 0xd52 <__vector_10>
      2c:	0c 94 18 07 	jmp	0xe30	; 0xe30 <__vector_11>
      30:	0c 94 87 07 	jmp	0xf0e	; 0xf0e <__vector_12>
      34:	0c 94 f6 07 	jmp	0xfec	; 0xfec <__vector_13>
      38:	0c 94 65 08 	jmp	0x10ca	; 0x10ca <__vector_14>
      3c:	0c 94 d4 08 	jmp	0x11a8	; 0x11a8 <__vector_15>
      40:	0c 94 43 09 	jmp	0x1286	; 0x1286 <__vector_16>
      44:	0c 94 b2 09 	jmp	0x1364	; 0x1364 <__vector_17>
      48:	0c 94 21 0a 	jmp	0x1442	; 0x1442 <__vector_18>
      4c:	0c 94 90 0a 	jmp	0x1520	; 0x1520 <__vector_19>
      50:	0c 94 ff 0a 	jmp	0x15fe	; 0x15fe <__vector_20>
      54:	0c 94 6e 0b 	jmp	0x16dc	; 0x16dc <__vector_21>
      58:	0c 94 dd 0b 	jmp	0x17ba	; 0x17ba <__vector_22>

0000005c <__ctors_end>:
      5c:	11 24       	eor	r1, r1
      5e:	1f be       	out	0x3f, r1	; 63
      60:	cf ef       	ldi	r28, 0xFF	; 255
      62:	d4 e0       	ldi	r29, 0x04	; 4
      64:	de bf       	out	0x3e, r29	; 62
      66:	cd bf       	out	0x3d, r28	; 61

00000068 <__do_copy_data>:
      68:	11 e0       	ldi	r17, 0x01	; 1
      6a:	a0 e0       	ldi	r26, 0x00	; 0
      6c:	b1 e0       	ldi	r27, 0x01	; 1
      6e:	ee ef       	ldi	r30, 0xFE	; 254
      70:	f3 e2       	ldi	r31, 0x23	; 35
      72:	02 c0       	rjmp	.+4      	; 0x78 <__do_copy_data+0x10>
      74:	05 90       	lpm	r0, Z+
      76:	0d 92       	st	X+, r0
      78:	aa 35       	cpi	r26, 0x5A	; 90
      7a:	b1 07       	cpc	r27, r17
      7c:	d9 f7       	brne	.-10     	; 0x74 <__do_copy_data+0xc>

0000007e <__do_clear_bss>:
      7e:	24 e0       	ldi	r18, 0x04	; 4
      80:	aa e5       	ldi	r26, 0x5A	; 90
      82:	b1 e0       	ldi	r27, 0x01	; 1
      84:	01 c0       	rjmp	.+2      	; 0x88 <.do_clear_bss_start>

00000086 <.do_clear_bss_loop>:
      86:	1d 92       	st	X+, r1

00000088 <.do_clear_bss_start>:
      88:	a1 3b       	cpi	r26, 0xB1	; 177
      8a:	b2 07       	cpc	r27, r18
      8c:	e1 f7       	brne	.-8      	; 0x86 <.do_clear_bss_loop>
      8e:	0e 94 2b 02 	call	0x456	; 0x456 <main>
      92:	0c 94 fd 11 	jmp	0x23fa	; 0x23fa <_exit>

00000096 <__bad_interrupt>:
      96:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000009a <handle_joystick>:
 *
 * Created: 2022-03-01 16:20:33
 *  Author: ivarj
 */
#include "../include/button.h"
void handle_joystick(button_object *self,int arg){
      9a:	9f 92       	push	r9
      9c:	af 92       	push	r10
      9e:	bf 92       	push	r11
      a0:	cf 92       	push	r12
      a2:	df 92       	push	r13
      a4:	ef 92       	push	r14
      a6:	ff 92       	push	r15
      a8:	0f 93       	push	r16
      aa:	1f 93       	push	r17
      ac:	cf 93       	push	r28
      ae:	df 93       	push	r29
#define REG_API_H
#include <stdint-gcc.h>
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wdiscarded-qualifiers"
inline void read_8(uint8_t *reg, uint8_t *ret){
	*ret = *reg;
      b0:	e3 b1       	in	r30, 0x03	; 3
inline void read_8_field(uint8_t *reg, uint8_t* ret, uint8_t field_width,uint8_t offset){
	uint8_t temp;
	read_8(reg,&temp);
	// Masks out the relevant bits
	uint8_t mask = ((1<<field_width)-1)<<offset;
	*ret = (temp&mask)>>offset;
      b2:	4e 2f       	mov	r20, r30
      b4:	40 71       	andi	r20, 0x10	; 16
      b6:	50 e0       	ldi	r21, 0x00	; 0
      b8:	7a 01       	movw	r14, r20
      ba:	f5 94       	asr	r15
      bc:	e7 94       	ror	r14
      be:	f5 94       	asr	r15
      c0:	e7 94       	ror	r14
      c2:	f5 94       	asr	r15
      c4:	e7 94       	ror	r14
      c6:	f5 94       	asr	r15
      c8:	e7 94       	ror	r14
      ca:	2e 2f       	mov	r18, r30
      cc:	20 74       	andi	r18, 0x40	; 64
      ce:	30 e0       	ldi	r19, 0x00	; 0
      d0:	02 2e       	mov	r0, r18
      d2:	23 2f       	mov	r18, r19
      d4:	00 0c       	add	r0, r0
      d6:	22 1f       	adc	r18, r18
      d8:	33 0b       	sbc	r19, r19
      da:	00 0c       	add	r0, r0
      dc:	22 1f       	adc	r18, r18
      de:	33 1f       	adc	r19, r19
      e0:	12 2f       	mov	r17, r18
      e2:	e0 78       	andi	r30, 0x80	; 128
      e4:	4e 2f       	mov	r20, r30
      e6:	50 e0       	ldi	r21, 0x00	; 0
      e8:	44 0f       	add	r20, r20
      ea:	45 2f       	mov	r20, r21
      ec:	44 1f       	adc	r20, r20
      ee:	55 0b       	sbc	r21, r21
      f0:	04 2f       	mov	r16, r20
#define REG_API_H
#include <stdint-gcc.h>
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wdiscarded-qualifiers"
inline void read_8(uint8_t *reg, uint8_t *ret){
	*ret = *reg;
      f2:	ac b1       	in	r26, 0x0c	; 12
inline void read_8_field(uint8_t *reg, uint8_t* ret, uint8_t field_width,uint8_t offset){
	uint8_t temp;
	read_8(reg,&temp);
	// Masks out the relevant bits
	uint8_t mask = ((1<<field_width)-1)<<offset;
	*ret = (temp&mask)>>offset;
      f4:	ca 2f       	mov	r28, r26
      f6:	c4 70       	andi	r28, 0x04	; 4
      f8:	d0 e0       	ldi	r29, 0x00	; 0
      fa:	d5 95       	asr	r29
      fc:	c7 95       	ror	r28
      fe:	d5 95       	asr	r29
     100:	c7 95       	ror	r28
     102:	9c 2e       	mov	r9, r28
     104:	a8 70       	andi	r26, 0x08	; 8
     106:	b0 e0       	ldi	r27, 0x00	; 0
     108:	b5 95       	asr	r27
     10a:	a7 95       	ror	r26
     10c:	b5 95       	asr	r27
     10e:	a7 95       	ror	r26
     110:	b5 95       	asr	r27
     112:	a7 95       	ror	r26
	read_8_field(&PINB,&up,1,6);
	read_8_field(&PINB,&down,1,7);
	read_8_field(&PINE,&left,1,2);
	read_8_field(&PINE,&right,1,3);
	
	if(up+down+press+left+right != 4)
     114:	fa 01       	movw	r30, r20
     116:	e2 0f       	add	r30, r18
     118:	f3 1f       	adc	r31, r19
     11a:	a7 01       	movw	r20, r14
     11c:	4e 0f       	add	r20, r30
     11e:	5f 1f       	adc	r21, r31
     120:	9e 01       	movw	r18, r28
     122:	24 0f       	add	r18, r20
     124:	35 1f       	adc	r19, r21
     126:	2a 0f       	add	r18, r26
     128:	3b 1f       	adc	r19, r27
     12a:	24 30       	cpi	r18, 0x04	; 4
     12c:	31 05       	cpc	r19, r1
     12e:	09 f0       	breq	.+2      	; 0x132 <handle_joystick+0x98>
     130:	83 c0       	rjmp	.+262    	; 0x238 <__EEPROM_REGION_LENGTH__+0x38>
     132:	eb 01       	movw	r28, r22
     134:	5c 01       	movw	r10, r24
	return;

	if(up == 0)
     136:	11 11       	cpse	r17, r1
     138:	15 c0       	rjmp	.+42     	; 0x164 <handle_joystick+0xca>
		ASYNC(self->app,itterate_freq,1);
     13a:	fc 01       	movw	r30, r24
     13c:	04 81       	ldd	r16, Z+4	; 0x04
     13e:	15 81       	ldd	r17, Z+5	; 0x05
     140:	cc 24       	eor	r12, r12
     142:	c3 94       	inc	r12
     144:	d1 2c       	mov	r13, r1
     146:	0f 2e       	mov	r0, r31
     148:	f4 ee       	ldi	r31, 0xE4	; 228
     14a:	ef 2e       	mov	r14, r31
     14c:	ff e0       	ldi	r31, 0x0F	; 15
     14e:	ff 2e       	mov	r15, r31
     150:	f0 2d       	mov	r31, r0
     152:	20 e0       	ldi	r18, 0x00	; 0
     154:	30 e0       	ldi	r19, 0x00	; 0
     156:	a9 01       	movw	r20, r18
     158:	60 e0       	ldi	r22, 0x00	; 0
     15a:	70 e0       	ldi	r23, 0x00	; 0
     15c:	cb 01       	movw	r24, r22
     15e:	0e 94 45 0d 	call	0x1a8a	; 0x1a8a <async>
     162:	59 c0       	rjmp	.+178    	; 0x216 <__EEPROM_REGION_LENGTH__+0x16>
	else if(down == 0)
     164:	01 11       	cpse	r16, r1
     166:	15 c0       	rjmp	.+42     	; 0x192 <handle_joystick+0xf8>
		ASYNC(self->app,itterate_freq,-1);
     168:	fc 01       	movw	r30, r24
     16a:	04 81       	ldd	r16, Z+4	; 0x04
     16c:	15 81       	ldd	r17, Z+5	; 0x05
     16e:	cc 24       	eor	r12, r12
     170:	ca 94       	dec	r12
     172:	dc 2c       	mov	r13, r12
     174:	0f 2e       	mov	r0, r31
     176:	f4 ee       	ldi	r31, 0xE4	; 228
     178:	ef 2e       	mov	r14, r31
     17a:	ff e0       	ldi	r31, 0x0F	; 15
     17c:	ff 2e       	mov	r15, r31
     17e:	f0 2d       	mov	r31, r0
     180:	20 e0       	ldi	r18, 0x00	; 0
     182:	30 e0       	ldi	r19, 0x00	; 0
     184:	a9 01       	movw	r20, r18
     186:	60 e0       	ldi	r22, 0x00	; 0
     188:	70 e0       	ldi	r23, 0x00	; 0
     18a:	cb 01       	movw	r24, r22
     18c:	0e 94 45 0d 	call	0x1a8a	; 0x1a8a <async>
     190:	42 c0       	rjmp	.+132    	; 0x216 <__EEPROM_REGION_LENGTH__+0x16>
	else if(press == 0)
     192:	e1 10       	cpse	r14, r1
     194:	14 c0       	rjmp	.+40     	; 0x1be <handle_joystick+0x124>
		ASYNC(self->app,save_freq,0);
     196:	fc 01       	movw	r30, r24
     198:	04 81       	ldd	r16, Z+4	; 0x04
     19a:	15 81       	ldd	r17, Z+5	; 0x05
     19c:	c1 2c       	mov	r12, r1
     19e:	d1 2c       	mov	r13, r1
     1a0:	0f 2e       	mov	r0, r31
     1a2:	fa e4       	ldi	r31, 0x4A	; 74
     1a4:	ef 2e       	mov	r14, r31
     1a6:	f0 e1       	ldi	r31, 0x10	; 16
     1a8:	ff 2e       	mov	r15, r31
     1aa:	f0 2d       	mov	r31, r0
     1ac:	20 e0       	ldi	r18, 0x00	; 0
     1ae:	30 e0       	ldi	r19, 0x00	; 0
     1b0:	a9 01       	movw	r20, r18
     1b2:	60 e0       	ldi	r22, 0x00	; 0
     1b4:	70 e0       	ldi	r23, 0x00	; 0
     1b6:	cb 01       	movw	r24, r22
     1b8:	0e 94 45 0d 	call	0x1a8a	; 0x1a8a <async>
     1bc:	2c c0       	rjmp	.+88     	; 0x216 <__EEPROM_REGION_LENGTH__+0x16>
	else if(right == 0)
     1be:	a1 11       	cpse	r26, r1
     1c0:	15 c0       	rjmp	.+42     	; 0x1ec <handle_joystick+0x152>
		ASYNC(self->app,change_pulse_gen,1);
     1c2:	fc 01       	movw	r30, r24
     1c4:	04 81       	ldd	r16, Z+4	; 0x04
     1c6:	15 81       	ldd	r17, Z+5	; 0x05
     1c8:	cc 24       	eor	r12, r12
     1ca:	c3 94       	inc	r12
     1cc:	d1 2c       	mov	r13, r1
     1ce:	0f 2e       	mov	r0, r31
     1d0:	f4 ec       	ldi	r31, 0xC4	; 196
     1d2:	ef 2e       	mov	r14, r31
     1d4:	ff e0       	ldi	r31, 0x0F	; 15
     1d6:	ff 2e       	mov	r15, r31
     1d8:	f0 2d       	mov	r31, r0
     1da:	20 e0       	ldi	r18, 0x00	; 0
     1dc:	30 e0       	ldi	r19, 0x00	; 0
     1de:	a9 01       	movw	r20, r18
     1e0:	60 e0       	ldi	r22, 0x00	; 0
     1e2:	70 e0       	ldi	r23, 0x00	; 0
     1e4:	cb 01       	movw	r24, r22
     1e6:	0e 94 45 0d 	call	0x1a8a	; 0x1a8a <async>
     1ea:	15 c0       	rjmp	.+42     	; 0x216 <__EEPROM_REGION_LENGTH__+0x16>
	else if(left == 0)
     1ec:	91 10       	cpse	r9, r1
     1ee:	13 c0       	rjmp	.+38     	; 0x216 <__EEPROM_REGION_LENGTH__+0x16>
		ASYNC(self->app,change_pulse_gen,0);
     1f0:	fc 01       	movw	r30, r24
     1f2:	04 81       	ldd	r16, Z+4	; 0x04
     1f4:	15 81       	ldd	r17, Z+5	; 0x05
     1f6:	c1 2c       	mov	r12, r1
     1f8:	d1 2c       	mov	r13, r1
     1fa:	0f 2e       	mov	r0, r31
     1fc:	f4 ec       	ldi	r31, 0xC4	; 196
     1fe:	ef 2e       	mov	r14, r31
     200:	ff e0       	ldi	r31, 0x0F	; 15
     202:	ff 2e       	mov	r15, r31
     204:	f0 2d       	mov	r31, r0
     206:	20 e0       	ldi	r18, 0x00	; 0
     208:	30 e0       	ldi	r19, 0x00	; 0
     20a:	a9 01       	movw	r20, r18
     20c:	60 e0       	ldi	r22, 0x00	; 0
     20e:	70 e0       	ldi	r23, 0x00	; 0
     210:	cb 01       	movw	r24, r22
     212:	0e 94 45 0d 	call	0x1a8a	; 0x1a8a <async>

	AFTER(MSEC(250),self,handle_joystick,arg);
     216:	6e 01       	movw	r12, r28
     218:	0f 2e       	mov	r0, r31
     21a:	fd e4       	ldi	r31, 0x4D	; 77
     21c:	ef 2e       	mov	r14, r31
     21e:	f0 e0       	ldi	r31, 0x00	; 0
     220:	ff 2e       	mov	r15, r31
     222:	f0 2d       	mov	r31, r0
     224:	85 01       	movw	r16, r10
     226:	20 e0       	ldi	r18, 0x00	; 0
     228:	30 e0       	ldi	r19, 0x00	; 0
     22a:	a9 01       	movw	r20, r18
     22c:	64 e8       	ldi	r22, 0x84	; 132
     22e:	7e e1       	ldi	r23, 0x1E	; 30
     230:	80 e0       	ldi	r24, 0x00	; 0
     232:	90 e0       	ldi	r25, 0x00	; 0
     234:	0e 94 45 0d 	call	0x1a8a	; 0x1a8a <async>
     238:	df 91       	pop	r29
     23a:	cf 91       	pop	r28
     23c:	1f 91       	pop	r17
     23e:	0f 91       	pop	r16
     240:	ff 90       	pop	r15
     242:	ef 90       	pop	r14
     244:	df 90       	pop	r13
     246:	cf 90       	pop	r12
     248:	bf 90       	pop	r11
     24a:	af 90       	pop	r10
     24c:	9f 90       	pop	r9
     24e:	08 95       	ret

00000250 <left_right_handeler>:
 * Created: 2022-02-23 08:33:01
 *  Author: ivarj
 */ 
#include "../include/interrupt.h"
#define cool_delay 500
void left_right_handeler(interrupt_object *self,int arg){
     250:	cf 92       	push	r12
     252:	df 92       	push	r13
     254:	ef 92       	push	r14
     256:	ff 92       	push	r15
     258:	0f 93       	push	r16
     25a:	1f 93       	push	r17
	ASYNC(self->button,handle_joystick,0);
     25c:	fc 01       	movw	r30, r24
     25e:	04 81       	ldd	r16, Z+4	; 0x04
     260:	15 81       	ldd	r17, Z+5	; 0x05
     262:	c1 2c       	mov	r12, r1
     264:	d1 2c       	mov	r13, r1
     266:	0f 2e       	mov	r0, r31
     268:	fd e4       	ldi	r31, 0x4D	; 77
     26a:	ef 2e       	mov	r14, r31
     26c:	f0 e0       	ldi	r31, 0x00	; 0
     26e:	ff 2e       	mov	r15, r31
     270:	f0 2d       	mov	r31, r0
     272:	20 e0       	ldi	r18, 0x00	; 0
     274:	30 e0       	ldi	r19, 0x00	; 0
     276:	a9 01       	movw	r20, r18
     278:	60 e0       	ldi	r22, 0x00	; 0
     27a:	70 e0       	ldi	r23, 0x00	; 0
     27c:	cb 01       	movw	r24, r22
     27e:	0e 94 45 0d 	call	0x1a8a	; 0x1a8a <async>
}
     282:	1f 91       	pop	r17
     284:	0f 91       	pop	r16
     286:	ff 90       	pop	r15
     288:	ef 90       	pop	r14
     28a:	df 90       	pop	r13
     28c:	cf 90       	pop	r12
     28e:	08 95       	ret

00000290 <upp_down_press_handeler>:
void upp_down_press_handeler(interrupt_object *self, int arg){
     290:	cf 92       	push	r12
     292:	df 92       	push	r13
     294:	ef 92       	push	r14
     296:	ff 92       	push	r15
     298:	0f 93       	push	r16
     29a:	1f 93       	push	r17
	ASYNC(self->button,handle_joystick,0);
     29c:	fc 01       	movw	r30, r24
     29e:	04 81       	ldd	r16, Z+4	; 0x04
     2a0:	15 81       	ldd	r17, Z+5	; 0x05
     2a2:	c1 2c       	mov	r12, r1
     2a4:	d1 2c       	mov	r13, r1
     2a6:	0f 2e       	mov	r0, r31
     2a8:	fd e4       	ldi	r31, 0x4D	; 77
     2aa:	ef 2e       	mov	r14, r31
     2ac:	f0 e0       	ldi	r31, 0x00	; 0
     2ae:	ff 2e       	mov	r15, r31
     2b0:	f0 2d       	mov	r31, r0
     2b2:	20 e0       	ldi	r18, 0x00	; 0
     2b4:	30 e0       	ldi	r19, 0x00	; 0
     2b6:	a9 01       	movw	r20, r18
     2b8:	60 e0       	ldi	r22, 0x00	; 0
     2ba:	70 e0       	ldi	r23, 0x00	; 0
     2bc:	cb 01       	movw	r24, r22
     2be:	0e 94 45 0d 	call	0x1a8a	; 0x1a8a <async>
     2c2:	1f 91       	pop	r17
     2c4:	0f 91       	pop	r16
     2c6:	ff 90       	pop	r15
     2c8:	ef 90       	pop	r14
     2ca:	df 90       	pop	r13
     2cc:	cf 90       	pop	r12
     2ce:	08 95       	ret

000002d0 <toggle_bit>:
}
volatile void set_high(io_object *self,uint8_t offset){
	if (offset >7)
		return;
	uint8_t field = 1<<(offset);
	PORTE = PORTE|(field);
     2d0:	68 30       	cpi	r22, 0x08	; 8
     2d2:	50 f4       	brcc	.+20     	; 0x2e8 <toggle_bit+0x18>
     2d4:	81 e0       	ldi	r24, 0x01	; 1
     2d6:	90 e0       	ldi	r25, 0x00	; 0
     2d8:	02 c0       	rjmp	.+4      	; 0x2de <toggle_bit+0xe>
     2da:	88 0f       	add	r24, r24
     2dc:	99 1f       	adc	r25, r25
     2de:	6a 95       	dec	r22
     2e0:	e2 f7       	brpl	.-8      	; 0x2da <toggle_bit+0xa>
     2e2:	9e b1       	in	r25, 0x0e	; 14
     2e4:	89 27       	eor	r24, r25
     2e6:	8e b9       	out	0x0e, r24	; 14
     2e8:	08 95       	ret

000002ea <set_low>:
	
}
volatile void set_low(io_object *self,uint8_t offset){
	if (offset >7)
     2ea:	68 30       	cpi	r22, 0x08	; 8
     2ec:	58 f4       	brcc	.+22     	; 0x304 <set_low+0x1a>
		return;
	uint8_t field = ~(1<<offset);
     2ee:	81 e0       	ldi	r24, 0x01	; 1
     2f0:	90 e0       	ldi	r25, 0x00	; 0
     2f2:	02 c0       	rjmp	.+4      	; 0x2f8 <set_low+0xe>
     2f4:	88 0f       	add	r24, r24
     2f6:	99 1f       	adc	r25, r25
     2f8:	6a 95       	dec	r22
     2fa:	e2 f7       	brpl	.-8      	; 0x2f4 <set_low+0xa>
     2fc:	80 95       	com	r24
	PORTE = PORTE&field;
     2fe:	9e b1       	in	r25, 0x0e	; 14
     300:	89 23       	and	r24, r25
     302:	8e b9       	out	0x0e, r24	; 14
     304:	08 95       	ret

00000306 <init_lcd>:
/************************************************************************/

void swap_segment(void){
	
	LCDDR13 = LCDDR13^1;
	LCDDR18 = LCDDR18^1;
     306:	e4 ee       	ldi	r30, 0xE4	; 228
     308:	f0 e0       	ldi	r31, 0x00	; 0
     30a:	80 81       	ld	r24, Z
     30c:	80 6c       	ori	r24, 0xC0	; 192
     30e:	8e 7e       	andi	r24, 0xEE	; 238
     310:	80 83       	st	Z, r24
     312:	e5 ee       	ldi	r30, 0xE5	; 229
     314:	f0 e0       	ldi	r31, 0x00	; 0
     316:	80 81       	ld	r24, Z
     318:	87 6b       	ori	r24, 0xB7	; 183
     31a:	80 83       	st	Z, r24
     31c:	e6 ee       	ldi	r30, 0xE6	; 230
     31e:	f0 e0       	ldi	r31, 0x00	; 0
     320:	80 81       	ld	r24, Z
     322:	88 78       	andi	r24, 0x88	; 136
     324:	87 60       	ori	r24, 0x07	; 7
     326:	80 83       	st	Z, r24
     328:	e7 ee       	ldi	r30, 0xE7	; 231
     32a:	f0 e0       	ldi	r31, 0x00	; 0
     32c:	80 81       	ld	r24, Z
     32e:	80 71       	andi	r24, 0x10	; 16
     330:	8f 60       	ori	r24, 0x0F	; 15
     332:	80 83       	st	Z, r24
     334:	08 95       	ret

00000336 <write_char>:
     336:	cf 93       	push	r28
     338:	c6 2f       	mov	r28, r22
     33a:	66 30       	cpi	r22, 0x06	; 6
     33c:	71 05       	cpc	r23, r1
     33e:	c0 f5       	brcc	.+112    	; 0x3b0 <write_char+0x7a>
     340:	75 95       	asr	r23
     342:	67 95       	ror	r22
     344:	fb 01       	movw	r30, r22
     346:	e4 51       	subi	r30, 0x14	; 20
     348:	ff 4f       	sbci	r31, 0xFF	; 255
     34a:	90 ed       	ldi	r25, 0xD0	; 208
     34c:	98 0f       	add	r25, r24
     34e:	9a 30       	cpi	r25, 0x0A	; 10
     350:	60 f4       	brcc	.+24     	; 0x36a <write_char+0x34>
     352:	a8 2f       	mov	r26, r24
     354:	b0 e0       	ldi	r27, 0x00	; 0
     356:	d0 97       	sbiw	r26, 0x30	; 48
     358:	aa 0f       	add	r26, r26
     35a:	bb 1f       	adc	r27, r27
     35c:	aa 0f       	add	r26, r26
     35e:	bb 1f       	adc	r27, r27
     360:	a0 50       	subi	r26, 0x00	; 0
     362:	bf 4f       	sbci	r27, 0xFF	; 255
     364:	4d 91       	ld	r20, X+
     366:	5c 91       	ld	r21, X
     368:	02 c0       	rjmp	.+4      	; 0x36e <write_char+0x38>
     36a:	40 e0       	ldi	r20, 0x00	; 0
     36c:	50 e0       	ldi	r21, 0x00	; 0
     36e:	20 e0       	ldi	r18, 0x00	; 0
     370:	30 e0       	ldi	r19, 0x00	; 0
     372:	1b c0       	rjmp	.+54     	; 0x3aa <write_char+0x74>
     374:	94 2f       	mov	r25, r20
     376:	9f 70       	andi	r25, 0x0F	; 15
     378:	52 95       	swap	r21
     37a:	42 95       	swap	r20
     37c:	4f 70       	andi	r20, 0x0F	; 15
     37e:	45 27       	eor	r20, r21
     380:	5f 70       	andi	r21, 0x0F	; 15
     382:	45 27       	eor	r20, r21
     384:	c0 fd       	sbrc	r28, 0
     386:	05 c0       	rjmp	.+10     	; 0x392 <write_char+0x5c>
     388:	80 81       	ld	r24, Z
     38a:	80 7f       	andi	r24, 0xF0	; 240
     38c:	89 2b       	or	r24, r25
     38e:	80 83       	st	Z, r24
     390:	09 c0       	rjmp	.+18     	; 0x3a4 <write_char+0x6e>
     392:	80 81       	ld	r24, Z
     394:	68 2f       	mov	r22, r24
     396:	6f 70       	andi	r22, 0x0F	; 15
     398:	70 e1       	ldi	r23, 0x10	; 16
     39a:	97 9f       	mul	r25, r23
     39c:	c0 01       	movw	r24, r0
     39e:	11 24       	eor	r1, r1
     3a0:	86 2b       	or	r24, r22
     3a2:	80 83       	st	Z, r24
     3a4:	35 96       	adiw	r30, 0x05	; 5
     3a6:	2f 5f       	subi	r18, 0xFF	; 255
     3a8:	3f 4f       	sbci	r19, 0xFF	; 255
     3aa:	24 30       	cpi	r18, 0x04	; 4
     3ac:	31 05       	cpc	r19, r1
     3ae:	14 f3       	brlt	.-60     	; 0x374 <write_char+0x3e>
     3b0:	cf 91       	pop	r28
     3b2:	08 95       	ret

000003b4 <print_at>:
}
void print_at(uint8_t num, uint8_t pos, uint8_t width){
     3b4:	0f 93       	push	r16
     3b6:	1f 93       	push	r17
     3b8:	cf 93       	push	r28
     3ba:	df 93       	push	r29
     3bc:	18 2f       	mov	r17, r24
     3be:	06 2f       	mov	r16, r22
	for(int i = width-1; i >= 0; i--){
     3c0:	c4 2f       	mov	r28, r20
     3c2:	d0 e0       	ldi	r29, 0x00	; 0
     3c4:	21 97       	sbiw	r28, 0x01	; 1
     3c6:	1a c0       	rjmp	.+52     	; 0x3fc <print_at+0x48>
		uint8_t temp = num%10;
     3c8:	9d ec       	ldi	r25, 0xCD	; 205
     3ca:	19 9f       	mul	r17, r25
     3cc:	91 2d       	mov	r25, r1
     3ce:	11 24       	eor	r1, r1
     3d0:	89 2f       	mov	r24, r25
     3d2:	86 95       	lsr	r24
     3d4:	86 95       	lsr	r24
     3d6:	86 95       	lsr	r24
     3d8:	88 0f       	add	r24, r24
     3da:	28 2f       	mov	r18, r24
     3dc:	22 0f       	add	r18, r18
     3de:	22 0f       	add	r18, r18
     3e0:	82 0f       	add	r24, r18
     3e2:	18 1b       	sub	r17, r24
     3e4:	81 2f       	mov	r24, r17
		num = num/10;
     3e6:	19 2f       	mov	r17, r25
     3e8:	16 95       	lsr	r17
     3ea:	16 95       	lsr	r17
     3ec:	16 95       	lsr	r17
		write_char(temp+48,pos+i);
     3ee:	be 01       	movw	r22, r28
     3f0:	60 0f       	add	r22, r16
     3f2:	71 1d       	adc	r23, r1
     3f4:	80 5d       	subi	r24, 0xD0	; 208
     3f6:	0e 94 9b 01 	call	0x336	; 0x336 <write_char>
	
	LCDDR13 = LCDDR13^1;
	LCDDR18 = LCDDR18^1;
}
void print_at(uint8_t num, uint8_t pos, uint8_t width){
	for(int i = width-1; i >= 0; i--){
     3fa:	21 97       	sbiw	r28, 0x01	; 1
     3fc:	dd 23       	and	r29, r29
     3fe:	24 f7       	brge	.-56     	; 0x3c8 <print_at+0x14>
		uint8_t temp = num%10;
		num = num/10;
		write_char(temp+48,pos+i);
	}
}
     400:	df 91       	pop	r29
     402:	cf 91       	pop	r28
     404:	1f 91       	pop	r17
     406:	0f 91       	pop	r16
     408:	08 95       	ret

0000040a <init_outputs>:
#define REG_API_H
#include <stdint-gcc.h>
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wdiscarded-qualifiers"
inline void read_8(uint8_t *reg, uint8_t *ret){
	*ret = *reg;
     40a:	8d b1       	in	r24, 0x0d	; 13
inline void write_8_field(uint8_t *reg,uint8_t value, uint8_t field_width,uint8_t offset){
	uint8_t temp;
	read_8(reg,&temp);
	// Masks out the relevant bits
	uint8_t mask = ((1<<field_width)-1)<<offset;
	value = ((~(mask))&temp)| (value<<offset&mask);
     40c:	80 65       	ori	r24, 0x50	; 80
}
inline void read_16(uint8_t *reg, uint16_t *ret){
	return;
};
inline void write_8(uint8_t *reg, uint8_t val){
	*reg = val;
     40e:	8d b9       	out	0x0d, r24	; 13
     410:	08 95       	ret

00000412 <init_joystick>:
#define REG_API_H
#include <stdint-gcc.h>
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wdiscarded-qualifiers"
inline void read_8(uint8_t *reg, uint8_t *ret){
	*ret = *reg;
     412:	85 b1       	in	r24, 0x05	; 5
inline void write_8_field(uint8_t *reg,uint8_t value, uint8_t field_width,uint8_t offset){
	uint8_t temp;
	read_8(reg,&temp);
	// Masks out the relevant bits
	uint8_t mask = ((1<<field_width)-1)<<offset;
	value = ((~(mask))&temp)| (value<<offset&mask);
     414:	80 6d       	ori	r24, 0xD0	; 208
}
inline void read_16(uint8_t *reg, uint16_t *ret){
	return;
};
inline void write_8(uint8_t *reg, uint8_t val){
	*reg = val;
     416:	85 b9       	out	0x05, r24	; 5
#define REG_API_H
#include <stdint-gcc.h>
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wdiscarded-qualifiers"
inline void read_8(uint8_t *reg, uint8_t *ret){
	*ret = *reg;
     418:	8e b1       	in	r24, 0x0e	; 14
inline void write_8_field(uint8_t *reg,uint8_t value, uint8_t field_width,uint8_t offset){
	uint8_t temp;
	read_8(reg,&temp);
	// Masks out the relevant bits
	uint8_t mask = ((1<<field_width)-1)<<offset;
	value = ((~(mask))&temp)| (value<<offset&mask);
     41a:	8c 60       	ori	r24, 0x0C	; 12
}
inline void read_16(uint8_t *reg, uint16_t *ret){
	return;
};
inline void write_8(uint8_t *reg, uint8_t val){
	*reg = val;
     41c:	8e b9       	out	0x0e, r24	; 14
	// Set all the relevant regs, this is not run as a task so it should be ok to assume that no interrupts can occur
	// Setting pullup enabled for pin b
	write_8_field(&PORTB,3,2,6); // Set portb 6,7 to pullup enabled
	write_8_field(&PORTB,1,1,4); // Set port b 4 to input pullup enabled
	write_8_field(&PORTE,3,2,2); // Set porte 2,3 to pullup enabled
	EIMSK = (1<<PCIE1) | (1<<PCIE0) | EIMSK;
     41e:	8d b3       	in	r24, 0x1d	; 29
     420:	80 6c       	ori	r24, 0xC0	; 192
     422:	8d bb       	out	0x1d, r24	; 29
#define REG_API_H
#include <stdint-gcc.h>
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wdiscarded-qualifiers"
inline void read_8(uint8_t *reg, uint8_t *ret){
	*ret = *reg;
     424:	eb e6       	ldi	r30, 0x6B	; 107
     426:	f0 e0       	ldi	r31, 0x00	; 0
     428:	80 81       	ld	r24, Z
inline void write_8_field(uint8_t *reg,uint8_t value, uint8_t field_width,uint8_t offset){
	uint8_t temp;
	read_8(reg,&temp);
	// Masks out the relevant bits
	uint8_t mask = ((1<<field_width)-1)<<offset;
	value = ((~(mask))&temp)| (value<<offset&mask);
     42a:	8c 60       	ori	r24, 0x0C	; 12
}
inline void read_16(uint8_t *reg, uint16_t *ret){
	return;
};
inline void write_8(uint8_t *reg, uint8_t val){
	*reg = val;
     42c:	80 83       	st	Z, r24
#define REG_API_H
#include <stdint-gcc.h>
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wdiscarded-qualifiers"
inline void read_8(uint8_t *reg, uint8_t *ret){
	*ret = *reg;
     42e:	ec e6       	ldi	r30, 0x6C	; 108
     430:	f0 e0       	ldi	r31, 0x00	; 0
     432:	80 81       	ld	r24, Z
inline void write_8_field(uint8_t *reg,uint8_t value, uint8_t field_width,uint8_t offset){
	uint8_t temp;
	read_8(reg,&temp);
	// Masks out the relevant bits
	uint8_t mask = ((1<<field_width)-1)<<offset;
	value = ((~(mask))&temp)| (value<<offset&mask);
     434:	80 6d       	ori	r24, 0xD0	; 208
}
inline void read_16(uint8_t *reg, uint16_t *ret){
	return;
};
inline void write_8(uint8_t *reg, uint8_t val){
	*reg = val;
     436:	80 83       	st	Z, r24
	//write_8_field(&EIMSK,3,2,6); // enable all ext int
	write_8_field(&PCMSK0,3,2,2); // Enable interrupts on PCINT2,3
	write_8_field(&PCMSK1,0b11,2,6); // Enable interrupts PCINT15,14
	write_8_field(&PCMSK1,1,1,4);
	// int 15,14,12,3,2
	INSTALL(&interrupts,left_right_handeler,IRQ_PCINT0);
     438:	41 e0       	ldi	r20, 0x01	; 1
     43a:	68 e2       	ldi	r22, 0x28	; 40
     43c:	71 e0       	ldi	r23, 0x01	; 1
     43e:	88 e2       	ldi	r24, 0x28	; 40
     440:	91 e0       	ldi	r25, 0x01	; 1
     442:	0e 94 6e 0f 	call	0x1edc	; 0x1edc <install>
	INSTALL(&interrupts,upp_down_press_handeler,IRQ_PCINT1);
     446:	42 e0       	ldi	r20, 0x02	; 2
     448:	68 e4       	ldi	r22, 0x48	; 72
     44a:	71 e0       	ldi	r23, 0x01	; 1
     44c:	88 e2       	ldi	r24, 0x28	; 40
     44e:	91 e0       	ldi	r25, 0x01	; 1
     450:	0e 94 6e 0f 	call	0x1edc	; 0x1edc <install>
     454:	08 95       	ret

00000456 <main>:
}
int main(void)
{
	init_lcd();
     456:	0e 94 83 01 	call	0x306	; 0x306 <init_lcd>
	init_outputs();
     45a:	0e 94 05 02 	call	0x40a	; 0x40a <init_outputs>
	init_joystick();
     45e:	0e 94 09 02 	call	0x412	; 0x412 <init_joystick>
	
	return TINYTIMBER(&app,app_entry,0);
     462:	40 e0       	ldi	r20, 0x00	; 0
     464:	50 e0       	ldi	r21, 0x00	; 0
     466:	68 eb       	ldi	r22, 0xB8	; 184
     468:	70 e1       	ldi	r23, 0x10	; 16
     46a:	84 e3       	ldi	r24, 0x34	; 52
     46c:	91 e0       	ldi	r25, 0x01	; 1
     46e:	0e 94 89 0f 	call	0x1f12	; 0x1f12 <tinytimber>
}
     472:	08 95       	ret

00000474 <pulse>:
 * Created: 2022-02-22 14:27:18
 *  Author: ivarj
 */ 
#include "../include/puls_gen.h"

void pulse(pulse_gen *self, uint8_t arg){
     474:	5f 92       	push	r5
     476:	6f 92       	push	r6
     478:	7f 92       	push	r7
     47a:	8f 92       	push	r8
     47c:	9f 92       	push	r9
     47e:	af 92       	push	r10
     480:	bf 92       	push	r11
     482:	cf 92       	push	r12
     484:	df 92       	push	r13
     486:	ef 92       	push	r14
     488:	ff 92       	push	r15
     48a:	0f 93       	push	r16
     48c:	1f 93       	push	r17
     48e:	cf 93       	push	r28
     490:	df 93       	push	r29
	if(self->freq == 0)
     492:	fc 01       	movw	r30, r24
     494:	24 81       	ldd	r18, Z+4	; 0x04
     496:	22 23       	and	r18, r18
     498:	09 f4       	brne	.+2      	; 0x49c <pulse+0x28>
     49a:	67 c0       	rjmp	.+206    	; 0x56a <__stack+0x6b>
     49c:	ec 01       	movw	r28, r24
		return;
	uint64_t delay = 1000000/self->freq;
     49e:	30 e0       	ldi	r19, 0x00	; 0
     4a0:	40 e0       	ldi	r20, 0x00	; 0
     4a2:	50 e0       	ldi	r21, 0x00	; 0
     4a4:	60 e4       	ldi	r22, 0x40	; 64
     4a6:	72 e4       	ldi	r23, 0x42	; 66
     4a8:	8f e0       	ldi	r24, 0x0F	; 15
     4aa:	90 e0       	ldi	r25, 0x00	; 0
     4ac:	0e 94 1e 11 	call	0x223c	; 0x223c <__divmodsi4>
     4b0:	69 01       	movw	r12, r18
     4b2:	7a 01       	movw	r14, r20
     4b4:	49 01       	movw	r8, r18
     4b6:	5a 01       	movw	r10, r20
     4b8:	bb 0c       	add	r11, r11
     4ba:	88 08       	sbc	r8, r8
     4bc:	98 2c       	mov	r9, r8
     4be:	54 01       	movw	r10, r8
	SYNC(self->reg_handeler,toggle_bit,self->bit_offset);
     4c0:	4d 81       	ldd	r20, Y+5	; 0x05
     4c2:	50 e0       	ldi	r21, 0x00	; 0
     4c4:	68 e6       	ldi	r22, 0x68	; 104
     4c6:	71 e0       	ldi	r23, 0x01	; 1
     4c8:	8e 81       	ldd	r24, Y+6	; 0x06
     4ca:	9f 81       	ldd	r25, Y+7	; 0x07
     4cc:	0e 94 4e 0e 	call	0x1c9c	; 0x1c9c <sync>
	self->message = AFTER(USEC(delay/2),self,pulse,0);
     4d0:	2c 2d       	mov	r18, r12
     4d2:	3d 2d       	mov	r19, r13
     4d4:	4e 2d       	mov	r20, r14
     4d6:	5f 2d       	mov	r21, r15
     4d8:	68 2d       	mov	r22, r8
     4da:	78 2d       	mov	r23, r8
     4dc:	88 2d       	mov	r24, r8
     4de:	98 2d       	mov	r25, r8
     4e0:	01 e0       	ldi	r16, 0x01	; 1
     4e2:	0e 94 58 11 	call	0x22b0	; 0x22b0 <__lshrdi3>
     4e6:	72 2e       	mov	r7, r18
     4e8:	83 2e       	mov	r8, r19
     4ea:	94 2e       	mov	r9, r20
     4ec:	b5 2f       	mov	r27, r21
     4ee:	a6 2f       	mov	r26, r22
     4f0:	f7 2f       	mov	r31, r23
     4f2:	e8 2f       	mov	r30, r24
     4f4:	59 2e       	mov	r5, r25
     4f6:	02 e0       	ldi	r16, 0x02	; 2
     4f8:	0e 94 3d 11 	call	0x227a	; 0x227a <__ashldi3>
     4fc:	a2 2e       	mov	r10, r18
     4fe:	b3 2e       	mov	r11, r19
     500:	c4 2e       	mov	r12, r20
     502:	d5 2e       	mov	r13, r21
     504:	e6 2e       	mov	r14, r22
     506:	f7 2e       	mov	r15, r23
     508:	68 2e       	mov	r6, r24
     50a:	19 2f       	mov	r17, r25
     50c:	05 e0       	ldi	r16, 0x05	; 5
     50e:	0e 94 3d 11 	call	0x227a	; 0x227a <__ashldi3>
     512:	06 2d       	mov	r16, r6
     514:	0e 94 7d 11 	call	0x22fa	; 0x22fa <__subdi3>
     518:	a7 2c       	mov	r10, r7
     51a:	b8 2c       	mov	r11, r8
     51c:	c9 2c       	mov	r12, r9
     51e:	db 2e       	mov	r13, r27
     520:	ea 2e       	mov	r14, r26
     522:	ff 2e       	mov	r15, r31
     524:	0e 2f       	mov	r16, r30
     526:	15 2d       	mov	r17, r5
     528:	0e 94 74 11 	call	0x22e8	; 0x22e8 <__adddi3>
     52c:	02 e0       	ldi	r16, 0x02	; 2
     52e:	0e 94 58 11 	call	0x22b0	; 0x22b0 <__lshrdi3>
     532:	62 2f       	mov	r22, r18
     534:	73 2f       	mov	r23, r19
     536:	84 2f       	mov	r24, r20
     538:	95 2f       	mov	r25, r21
     53a:	28 ee       	ldi	r18, 0xE8	; 232
     53c:	33 e0       	ldi	r19, 0x03	; 3
     53e:	40 e0       	ldi	r20, 0x00	; 0
     540:	50 e0       	ldi	r21, 0x00	; 0
     542:	0e 94 1e 11 	call	0x223c	; 0x223c <__divmodsi4>
     546:	ca 01       	movw	r24, r20
     548:	b9 01       	movw	r22, r18
     54a:	c1 2c       	mov	r12, r1
     54c:	d1 2c       	mov	r13, r1
     54e:	0f 2e       	mov	r0, r31
     550:	fa e3       	ldi	r31, 0x3A	; 58
     552:	ef 2e       	mov	r14, r31
     554:	f2 e0       	ldi	r31, 0x02	; 2
     556:	ff 2e       	mov	r15, r31
     558:	f0 2d       	mov	r31, r0
     55a:	8e 01       	movw	r16, r28
     55c:	20 e0       	ldi	r18, 0x00	; 0
     55e:	30 e0       	ldi	r19, 0x00	; 0
     560:	a9 01       	movw	r20, r18
     562:	0e 94 45 0d 	call	0x1a8a	; 0x1a8a <async>
     566:	99 87       	std	Y+9, r25	; 0x09
     568:	88 87       	std	Y+8, r24	; 0x08
}
     56a:	df 91       	pop	r29
     56c:	cf 91       	pop	r28
     56e:	1f 91       	pop	r17
     570:	0f 91       	pop	r16
     572:	ff 90       	pop	r15
     574:	ef 90       	pop	r14
     576:	df 90       	pop	r13
     578:	cf 90       	pop	r12
     57a:	bf 90       	pop	r11
     57c:	af 90       	pop	r10
     57e:	9f 90       	pop	r9
     580:	8f 90       	pop	r8
     582:	7f 90       	pop	r7
     584:	6f 90       	pop	r6
     586:	5f 90       	pop	r5
     588:	08 95       	ret

0000058a <set_pulse_low>:
void set_pulse_low(pulse_gen *self, int arg){
	SYNC(self->reg_handeler,set_low,self->bit_offset);
     58a:	fc 01       	movw	r30, r24
     58c:	45 81       	ldd	r20, Z+5	; 0x05
     58e:	50 e0       	ldi	r21, 0x00	; 0
     590:	65 e7       	ldi	r22, 0x75	; 117
     592:	71 e0       	ldi	r23, 0x01	; 1
     594:	86 81       	ldd	r24, Z+6	; 0x06
     596:	97 81       	ldd	r25, Z+7	; 0x07
     598:	0e 94 4e 0e 	call	0x1c9c	; 0x1c9c <sync>
     59c:	08 95       	ret

0000059e <remove>:
    Time now;
    DISABLE(status);
    TIMERGET(now);
    ENABLE(status);
    return now - (status ? current->msg->baseline : timestamp);
}
     59e:	db 01       	movw	r26, r22
     5a0:	ed 91       	ld	r30, X+
     5a2:	fc 91       	ld	r31, X
     5a4:	a0 e0       	ldi	r26, 0x00	; 0
     5a6:	b0 e0       	ldi	r27, 0x00	; 0
     5a8:	04 c0       	rjmp	.+8      	; 0x5b2 <remove+0x14>
     5aa:	df 01       	movw	r26, r30
     5ac:	01 90       	ld	r0, Z+
     5ae:	f0 81       	ld	r31, Z
     5b0:	e0 2d       	mov	r30, r0
     5b2:	30 97       	sbiw	r30, 0x00	; 0
     5b4:	19 f0       	breq	.+6      	; 0x5bc <remove+0x1e>
     5b6:	e8 17       	cp	r30, r24
     5b8:	f9 07       	cpc	r31, r25
     5ba:	b9 f7       	brne	.-18     	; 0x5aa <remove+0xc>
     5bc:	30 97       	sbiw	r30, 0x00	; 0
     5be:	89 f0       	breq	.+34     	; 0x5e2 <remove+0x44>
     5c0:	10 97       	sbiw	r26, 0x00	; 0
     5c2:	39 f0       	breq	.+14     	; 0x5d2 <remove+0x34>
     5c4:	80 81       	ld	r24, Z
     5c6:	91 81       	ldd	r25, Z+1	; 0x01
     5c8:	8d 93       	st	X+, r24
     5ca:	9c 93       	st	X, r25
     5cc:	81 e0       	ldi	r24, 0x01	; 1
     5ce:	90 e0       	ldi	r25, 0x00	; 0
     5d0:	08 95       	ret
     5d2:	80 81       	ld	r24, Z
     5d4:	91 81       	ldd	r25, Z+1	; 0x01
     5d6:	fb 01       	movw	r30, r22
     5d8:	91 83       	std	Z+1, r25	; 0x01
     5da:	80 83       	st	Z, r24
     5dc:	81 e0       	ldi	r24, 0x01	; 1
     5de:	90 e0       	ldi	r25, 0x00	; 0
     5e0:	08 95       	ret
     5e2:	80 e0       	ldi	r24, 0x00	; 0
     5e4:	90 e0       	ldi	r25, 0x00	; 0
     5e6:	08 95       	ret

000005e8 <initialize>:
     5e8:	cf 93       	push	r28
     5ea:	df 93       	push	r29
     5ec:	00 d0       	rcall	.+0      	; 0x5ee <initialize+0x6>
     5ee:	00 d0       	rcall	.+0      	; 0x5f0 <initialize+0x8>
     5f0:	cd b7       	in	r28, 0x3d	; 61
     5f2:	de b7       	in	r29, 0x3e	; 62
     5f4:	80 e0       	ldi	r24, 0x00	; 0
     5f6:	90 e0       	ldi	r25, 0x00	; 0
     5f8:	18 c0       	rjmp	.+48     	; 0x62a <initialize+0x42>
     5fa:	ac 01       	movw	r20, r24
     5fc:	4f 5f       	subi	r20, 0xFF	; 255
     5fe:	5f 4f       	sbci	r21, 0xFF	; 255
     600:	9a 01       	movw	r18, r20
     602:	22 95       	swap	r18
     604:	32 95       	swap	r19
     606:	30 7f       	andi	r19, 0xF0	; 240
     608:	32 27       	eor	r19, r18
     60a:	20 7f       	andi	r18, 0xF0	; 240
     60c:	32 27       	eor	r19, r18
     60e:	2f 5b       	subi	r18, 0xBF	; 191
     610:	3d 4f       	sbci	r19, 0xFD	; 253
     612:	82 95       	swap	r24
     614:	92 95       	swap	r25
     616:	90 7f       	andi	r25, 0xF0	; 240
     618:	98 27       	eor	r25, r24
     61a:	80 7f       	andi	r24, 0xF0	; 240
     61c:	98 27       	eor	r25, r24
     61e:	fc 01       	movw	r30, r24
     620:	ef 5b       	subi	r30, 0xBF	; 191
     622:	fd 4f       	sbci	r31, 0xFD	; 253
     624:	31 83       	std	Z+1, r19	; 0x01
     626:	20 83       	st	Z, r18
     628:	ca 01       	movw	r24, r20
     62a:	8e 30       	cpi	r24, 0x0E	; 14
     62c:	91 05       	cpc	r25, r1
     62e:	2c f3       	brlt	.-54     	; 0x5fa <initialize+0x12>
     630:	10 92 22 03 	sts	0x0322, r1	; 0x800322 <messages+0xe1>
     634:	10 92 21 03 	sts	0x0321, r1	; 0x800321 <messages+0xe0>
     638:	80 e0       	ldi	r24, 0x00	; 0
     63a:	90 e0       	ldi	r25, 0x00	; 0
     63c:	15 c0       	rjmp	.+42     	; 0x668 <initialize+0x80>
     63e:	ac 01       	movw	r20, r24
     640:	4f 5f       	subi	r20, 0xFF	; 255
     642:	5f 4f       	sbci	r21, 0xFF	; 255
     644:	6d e1       	ldi	r22, 0x1D	; 29
     646:	64 9f       	mul	r22, r20
     648:	90 01       	movw	r18, r0
     64a:	65 9f       	mul	r22, r21
     64c:	30 0d       	add	r19, r0
     64e:	11 24       	eor	r1, r1
     650:	24 57       	subi	r18, 0x74	; 116
     652:	3e 4f       	sbci	r19, 0xFE	; 254
     654:	68 9f       	mul	r22, r24
     656:	f0 01       	movw	r30, r0
     658:	69 9f       	mul	r22, r25
     65a:	f0 0d       	add	r31, r0
     65c:	11 24       	eor	r1, r1
     65e:	e4 57       	subi	r30, 0x74	; 116
     660:	fe 4f       	sbci	r31, 0xFE	; 254
     662:	31 83       	std	Z+1, r19	; 0x01
     664:	20 83       	st	Z, r18
     666:	ca 01       	movw	r24, r20
     668:	83 30       	cpi	r24, 0x03	; 3
     66a:	91 05       	cpc	r25, r1
     66c:	44 f3       	brlt	.-48     	; 0x63e <initialize+0x56>
     66e:	10 92 e4 01 	sts	0x01E4, r1	; 0x8001e4 <threads+0x58>
     672:	10 92 e3 01 	sts	0x01E3, r1	; 0x8001e3 <threads+0x57>
     676:	1a 82       	std	Y+2, r1	; 0x02
     678:	19 82       	std	Y+1, r1	; 0x01
     67a:	32 c0       	rjmp	.+100    	; 0x6e0 <initialize+0xf8>
     67c:	2d e1       	ldi	r18, 0x1D	; 29
     67e:	49 81       	ldd	r20, Y+1	; 0x01
     680:	5a 81       	ldd	r21, Y+2	; 0x02
     682:	24 9f       	mul	r18, r20
     684:	c0 01       	movw	r24, r0
     686:	25 9f       	mul	r18, r21
     688:	90 0d       	add	r25, r0
     68a:	11 24       	eor	r1, r1
     68c:	fc 01       	movw	r30, r24
     68e:	ee 56       	subi	r30, 0x6E	; 110
     690:	fe 4f       	sbci	r31, 0xFE	; 254
     692:	fc 83       	std	Y+4, r31	; 0x04
     694:	eb 83       	std	Y+3, r30	; 0x03
     696:	cf 01       	movw	r24, r30
     698:	0e 94 bc 11 	call	0x2378	; 0x2378 <setjmp>
     69c:	20 e6       	ldi	r18, 0x60	; 96
     69e:	49 81       	ldd	r20, Y+1	; 0x01
     6a0:	5a 81       	ldd	r21, Y+2	; 0x02
     6a2:	24 9f       	mul	r18, r20
     6a4:	c0 01       	movw	r24, r0
     6a6:	25 9f       	mul	r18, r21
     6a8:	90 0d       	add	r25, r0
     6aa:	11 24       	eor	r1, r1
     6ac:	83 57       	subi	r24, 0x73	; 115
     6ae:	9c 4f       	sbci	r25, 0xFC	; 252
     6b0:	eb 81       	ldd	r30, Y+3	; 0x03
     6b2:	fc 81       	ldd	r31, Y+4	; 0x04
     6b4:	91 8b       	std	Z+17, r25	; 0x11
     6b6:	80 8b       	std	Z+16, r24	; 0x10
     6b8:	93 8b       	std	Z+19, r25	; 0x13
     6ba:	82 8b       	std	Z+18, r24	; 0x12
     6bc:	80 ed       	ldi	r24, 0xD0	; 208
     6be:	9e e0       	ldi	r25, 0x0E	; 14
     6c0:	96 8b       	std	Z+22, r25	; 0x16
     6c2:	85 8b       	std	Z+21, r24	; 0x15
     6c4:	8d e1       	ldi	r24, 0x1D	; 29
     6c6:	84 9f       	mul	r24, r20
     6c8:	f0 01       	movw	r30, r0
     6ca:	85 9f       	mul	r24, r21
     6cc:	f0 0d       	add	r31, r0
     6ce:	11 24       	eor	r1, r1
     6d0:	e4 57       	subi	r30, 0x74	; 116
     6d2:	fe 4f       	sbci	r31, 0xFE	; 254
     6d4:	15 82       	std	Z+5, r1	; 0x05
     6d6:	14 82       	std	Z+4, r1	; 0x04
     6d8:	4f 5f       	subi	r20, 0xFF	; 255
     6da:	5f 4f       	sbci	r21, 0xFF	; 255
     6dc:	5a 83       	std	Y+2, r21	; 0x02
     6de:	49 83       	std	Y+1, r20	; 0x01
     6e0:	29 81       	ldd	r18, Y+1	; 0x01
     6e2:	3a 81       	ldd	r19, Y+2	; 0x02
     6e4:	24 30       	cpi	r18, 0x04	; 4
     6e6:	31 05       	cpc	r19, r1
     6e8:	4c f2       	brlt	.-110    	; 0x67c <initialize+0x94>
     6ea:	e4 e2       	ldi	r30, 0x24	; 36
     6ec:	f2 e0       	ldi	r31, 0x02	; 2
     6ee:	11 82       	std	Z+1, r1	; 0x01
     6f0:	10 82       	st	Z, r1
     6f2:	15 82       	std	Z+5, r1	; 0x05
     6f4:	14 82       	std	Z+4, r1	; 0x04
     6f6:	13 82       	std	Z+3, r1	; 0x03
     6f8:	12 82       	std	Z+2, r1	; 0x02
     6fa:	e1 e6       	ldi	r30, 0x61	; 97
     6fc:	f0 e0       	ldi	r31, 0x00	; 0
     6fe:	80 e8       	ldi	r24, 0x80	; 128
     700:	80 83       	st	Z, r24
     702:	10 82       	st	Z, r1
     704:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     708:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     70c:	84 e0       	ldi	r24, 0x04	; 4
     70e:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7fc081>
     712:	81 e0       	ldi	r24, 0x01	; 1
     714:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
     718:	0f 90       	pop	r0
     71a:	0f 90       	pop	r0
     71c:	0f 90       	pop	r0
     71e:	0f 90       	pop	r0
     720:	df 91       	pop	r29
     722:	cf 91       	pop	r28
     724:	08 95       	ret

00000726 <dispatch>:
     726:	cf 93       	push	r28
     728:	df 93       	push	r29
     72a:	00 d0       	rcall	.+0      	; 0x72c <dispatch+0x6>
     72c:	cd b7       	in	r28, 0x3d	; 61
     72e:	de b7       	in	r29, 0x3e	; 62
     730:	9a 83       	std	Y+2, r25	; 0x02
     732:	89 83       	std	Y+1, r24	; 0x01
     734:	80 91 52 01 	lds	r24, 0x0152	; 0x800152 <current>
     738:	90 91 53 01 	lds	r25, 0x0153	; 0x800153 <current+0x1>
     73c:	06 96       	adiw	r24, 0x06	; 6
     73e:	0e 94 bc 11 	call	0x2378	; 0x2378 <setjmp>
     742:	89 2b       	or	r24, r25
     744:	59 f4       	brne	.+22     	; 0x75c <dispatch+0x36>
     746:	89 81       	ldd	r24, Y+1	; 0x01
     748:	9a 81       	ldd	r25, Y+2	; 0x02
     74a:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <current+0x1>
     74e:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <current>
     752:	61 e0       	ldi	r22, 0x01	; 1
     754:	70 e0       	ldi	r23, 0x00	; 0
     756:	06 96       	adiw	r24, 0x06	; 6
     758:	0e 94 dc 11 	call	0x23b8	; 0x23b8 <longjmp>
     75c:	0f 90       	pop	r0
     75e:	0f 90       	pop	r0
     760:	df 91       	pop	r29
     762:	cf 91       	pop	r28
     764:	08 95       	ret

00000766 <enqueueByDeadline>:
     766:	0f 93       	push	r16
     768:	1f 93       	push	r17
     76a:	cf 93       	push	r28
     76c:	df 93       	push	r29
     76e:	dc 01       	movw	r26, r24
     770:	cb 01       	movw	r24, r22
     772:	eb 01       	movw	r28, r22
     774:	e8 81       	ld	r30, Y
     776:	f9 81       	ldd	r31, Y+1	; 0x01
     778:	c0 e0       	ldi	r28, 0x00	; 0
     77a:	d0 e0       	ldi	r29, 0x00	; 0
     77c:	04 c0       	rjmp	.+8      	; 0x786 <enqueueByDeadline+0x20>
     77e:	ef 01       	movw	r28, r30
     780:	01 90       	ld	r0, Z+
     782:	f0 81       	ld	r31, Z
     784:	e0 2d       	mov	r30, r0
     786:	30 97       	sbiw	r30, 0x00	; 0
     788:	79 f0       	breq	.+30     	; 0x7a8 <enqueueByDeadline+0x42>
     78a:	06 81       	ldd	r16, Z+6	; 0x06
     78c:	17 81       	ldd	r17, Z+7	; 0x07
     78e:	20 85       	ldd	r18, Z+8	; 0x08
     790:	31 85       	ldd	r19, Z+9	; 0x09
     792:	16 96       	adiw	r26, 0x06	; 6
     794:	4d 91       	ld	r20, X+
     796:	5d 91       	ld	r21, X+
     798:	6d 91       	ld	r22, X+
     79a:	7c 91       	ld	r23, X
     79c:	19 97       	sbiw	r26, 0x09	; 9
     79e:	40 17       	cp	r20, r16
     7a0:	51 07       	cpc	r21, r17
     7a2:	62 07       	cpc	r22, r18
     7a4:	73 07       	cpc	r23, r19
     7a6:	5c f7       	brge	.-42     	; 0x77e <enqueueByDeadline+0x18>
     7a8:	11 96       	adiw	r26, 0x01	; 1
     7aa:	fc 93       	st	X, r31
     7ac:	ee 93       	st	-X, r30
     7ae:	20 97       	sbiw	r28, 0x00	; 0
     7b0:	21 f4       	brne	.+8      	; 0x7ba <enqueueByDeadline+0x54>
     7b2:	fc 01       	movw	r30, r24
     7b4:	b1 83       	std	Z+1, r27	; 0x01
     7b6:	a0 83       	st	Z, r26
     7b8:	02 c0       	rjmp	.+4      	; 0x7be <enqueueByDeadline+0x58>
     7ba:	b9 83       	std	Y+1, r27	; 0x01
     7bc:	a8 83       	st	Y, r26
     7be:	df 91       	pop	r29
     7c0:	cf 91       	pop	r28
     7c2:	1f 91       	pop	r17
     7c4:	0f 91       	pop	r16
     7c6:	08 95       	ret

000007c8 <enqueueByBaseline>:
     7c8:	0f 93       	push	r16
     7ca:	1f 93       	push	r17
     7cc:	cf 93       	push	r28
     7ce:	df 93       	push	r29
     7d0:	dc 01       	movw	r26, r24
     7d2:	cb 01       	movw	r24, r22
     7d4:	eb 01       	movw	r28, r22
     7d6:	e8 81       	ld	r30, Y
     7d8:	f9 81       	ldd	r31, Y+1	; 0x01
     7da:	c0 e0       	ldi	r28, 0x00	; 0
     7dc:	d0 e0       	ldi	r29, 0x00	; 0
     7de:	04 c0       	rjmp	.+8      	; 0x7e8 <enqueueByBaseline+0x20>
     7e0:	ef 01       	movw	r28, r30
     7e2:	01 90       	ld	r0, Z+
     7e4:	f0 81       	ld	r31, Z
     7e6:	e0 2d       	mov	r30, r0
     7e8:	30 97       	sbiw	r30, 0x00	; 0
     7ea:	79 f0       	breq	.+30     	; 0x80a <enqueueByBaseline+0x42>
     7ec:	02 81       	ldd	r16, Z+2	; 0x02
     7ee:	13 81       	ldd	r17, Z+3	; 0x03
     7f0:	24 81       	ldd	r18, Z+4	; 0x04
     7f2:	35 81       	ldd	r19, Z+5	; 0x05
     7f4:	12 96       	adiw	r26, 0x02	; 2
     7f6:	4d 91       	ld	r20, X+
     7f8:	5d 91       	ld	r21, X+
     7fa:	6d 91       	ld	r22, X+
     7fc:	7c 91       	ld	r23, X
     7fe:	15 97       	sbiw	r26, 0x05	; 5
     800:	40 17       	cp	r20, r16
     802:	51 07       	cpc	r21, r17
     804:	62 07       	cpc	r22, r18
     806:	73 07       	cpc	r23, r19
     808:	5c f7       	brge	.-42     	; 0x7e0 <enqueueByBaseline+0x18>
     80a:	11 96       	adiw	r26, 0x01	; 1
     80c:	fc 93       	st	X, r31
     80e:	ee 93       	st	-X, r30
     810:	20 97       	sbiw	r28, 0x00	; 0
     812:	21 f4       	brne	.+8      	; 0x81c <enqueueByBaseline+0x54>
     814:	fc 01       	movw	r30, r24
     816:	b1 83       	std	Z+1, r27	; 0x01
     818:	a0 83       	st	Z, r26
     81a:	02 c0       	rjmp	.+4      	; 0x820 <enqueueByBaseline+0x58>
     81c:	b9 83       	std	Y+1, r27	; 0x01
     81e:	a8 83       	st	Y, r26
     820:	df 91       	pop	r29
     822:	cf 91       	pop	r28
     824:	1f 91       	pop	r17
     826:	0f 91       	pop	r16
     828:	08 95       	ret

0000082a <dequeue>:
     82a:	dc 01       	movw	r26, r24
     82c:	ed 91       	ld	r30, X+
     82e:	fc 91       	ld	r31, X
     830:	11 97       	sbiw	r26, 0x01	; 1
     832:	30 97       	sbiw	r30, 0x00	; 0
     834:	59 f4       	brne	.+22     	; 0x84c <dequeue+0x22>
     836:	8f ef       	ldi	r24, 0xFF	; 255
     838:	80 93 ec 00 	sts	0x00EC, r24	; 0x8000ec <__TEXT_REGION_LENGTH__+0x7fc0ec>
     83c:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7fc0ed>
     840:	80 93 ee 00 	sts	0x00EE, r24	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7fc0ee>
     844:	81 e0       	ldi	r24, 0x01	; 1
     846:	83 bf       	out	0x33, r24	; 51
     848:	88 95       	sleep
     84a:	fc cf       	rjmp	.-8      	; 0x844 <dequeue+0x1a>
     84c:	20 81       	ld	r18, Z
     84e:	31 81       	ldd	r19, Z+1	; 0x01
     850:	2d 93       	st	X+, r18
     852:	3c 93       	st	X, r19
     854:	cf 01       	movw	r24, r30
     856:	08 95       	ret

00000858 <insert>:
     858:	fb 01       	movw	r30, r22
     85a:	20 81       	ld	r18, Z
     85c:	31 81       	ldd	r19, Z+1	; 0x01
     85e:	fc 01       	movw	r30, r24
     860:	31 83       	std	Z+1, r19	; 0x01
     862:	20 83       	st	Z, r18
     864:	fb 01       	movw	r30, r22
     866:	91 83       	std	Z+1, r25	; 0x01
     868:	80 83       	st	Z, r24
     86a:	08 95       	ret

0000086c <push>:
     86c:	fb 01       	movw	r30, r22
     86e:	20 81       	ld	r18, Z
     870:	31 81       	ldd	r19, Z+1	; 0x01
     872:	fc 01       	movw	r30, r24
     874:	31 83       	std	Z+1, r19	; 0x01
     876:	20 83       	st	Z, r18
     878:	fb 01       	movw	r30, r22
     87a:	91 83       	std	Z+1, r25	; 0x01
     87c:	80 83       	st	Z, r24
     87e:	08 95       	ret

00000880 <pop>:
     880:	dc 01       	movw	r26, r24
     882:	ed 91       	ld	r30, X+
     884:	fc 91       	ld	r31, X
     886:	11 97       	sbiw	r26, 0x01	; 1
     888:	20 81       	ld	r18, Z
     88a:	31 81       	ldd	r19, Z+1	; 0x01
     88c:	2d 93       	st	X+, r18
     88e:	3c 93       	st	X, r19
     890:	cf 01       	movw	r24, r30
     892:	08 95       	ret

00000894 <schedule>:
     894:	cf 93       	push	r28
     896:	df 93       	push	r29
     898:	e0 91 54 01 	lds	r30, 0x0154	; 0x800154 <activeStack>
     89c:	f0 91 55 01 	lds	r31, 0x0155	; 0x800155 <activeStack+0x1>
     8a0:	c2 81       	ldd	r28, Z+2	; 0x02
     8a2:	d3 81       	ldd	r29, Z+3	; 0x03
     8a4:	e0 91 66 01 	lds	r30, 0x0166	; 0x800166 <msgQ>
     8a8:	f0 91 67 01 	lds	r31, 0x0167	; 0x800167 <msgQ+0x1>
     8ac:	30 97       	sbiw	r30, 0x00	; 0
     8ae:	19 f1       	breq	.+70     	; 0x8f6 <schedule+0x62>
     8b0:	80 91 56 01 	lds	r24, 0x0156	; 0x800156 <threadPool>
     8b4:	90 91 57 01 	lds	r25, 0x0157	; 0x800157 <threadPool+0x1>
     8b8:	89 2b       	or	r24, r25
     8ba:	e9 f0       	breq	.+58     	; 0x8f6 <schedule+0x62>
     8bc:	20 97       	sbiw	r28, 0x00	; 0
     8be:	69 f0       	breq	.+26     	; 0x8da <schedule+0x46>
     8c0:	86 81       	ldd	r24, Z+6	; 0x06
     8c2:	97 81       	ldd	r25, Z+7	; 0x07
     8c4:	a0 85       	ldd	r26, Z+8	; 0x08
     8c6:	b1 85       	ldd	r27, Z+9	; 0x09
     8c8:	4e 81       	ldd	r20, Y+6	; 0x06
     8ca:	5f 81       	ldd	r21, Y+7	; 0x07
     8cc:	68 85       	ldd	r22, Y+8	; 0x08
     8ce:	79 85       	ldd	r23, Y+9	; 0x09
     8d0:	84 1b       	sub	r24, r20
     8d2:	95 0b       	sbc	r25, r21
     8d4:	a6 0b       	sbc	r26, r22
     8d6:	b7 0b       	sbc	r27, r23
     8d8:	72 f4       	brpl	.+28     	; 0x8f6 <schedule+0x62>
     8da:	86 e5       	ldi	r24, 0x56	; 86
     8dc:	91 e0       	ldi	r25, 0x01	; 1
     8de:	0e 94 40 04 	call	0x880	; 0x880 <pop>
     8e2:	64 e5       	ldi	r22, 0x54	; 84
     8e4:	71 e0       	ldi	r23, 0x01	; 1
     8e6:	0e 94 36 04 	call	0x86c	; 0x86c <push>
     8ea:	80 91 54 01 	lds	r24, 0x0154	; 0x800154 <activeStack>
     8ee:	90 91 55 01 	lds	r25, 0x0155	; 0x800155 <activeStack+0x1>
     8f2:	0e 94 93 03 	call	0x726	; 0x726 <dispatch>
     8f6:	df 91       	pop	r29
     8f8:	cf 91       	pop	r28
     8fa:	08 95       	ret

000008fc <__vector_1>:
     8fc:	1f 92       	push	r1
     8fe:	0f 92       	push	r0
     900:	0f b6       	in	r0, 0x3f	; 63
     902:	0f 92       	push	r0
     904:	11 24       	eor	r1, r1
     906:	0f 93       	push	r16
     908:	1f 93       	push	r17
     90a:	2f 93       	push	r18
     90c:	3f 93       	push	r19
     90e:	4f 93       	push	r20
     910:	5f 93       	push	r21
     912:	6f 93       	push	r22
     914:	7f 93       	push	r23
     916:	8f 93       	push	r24
     918:	9f 93       	push	r25
     91a:	af 93       	push	r26
     91c:	bf 93       	push	r27
     91e:	ef 93       	push	r30
     920:	ff 93       	push	r31
     922:	80 91 5e 01 	lds	r24, 0x015E	; 0x80015e <overflows>
     926:	90 91 5f 01 	lds	r25, 0x015F	; 0x80015f <overflows+0x1>
     92a:	ac 01       	movw	r20, r24
     92c:	09 2e       	mov	r0, r25
     92e:	00 0c       	add	r0, r0
     930:	66 0b       	sbc	r22, r22
     932:	77 0b       	sbc	r23, r23
     934:	9a 01       	movw	r18, r20
     936:	11 27       	eor	r17, r17
     938:	00 27       	eor	r16, r16
     93a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     93e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     942:	60 e0       	ldi	r22, 0x00	; 0
     944:	70 e0       	ldi	r23, 0x00	; 0
     946:	40 2b       	or	r20, r16
     948:	51 2b       	or	r21, r17
     94a:	62 2b       	or	r22, r18
     94c:	73 2b       	or	r23, r19
     94e:	40 93 60 01 	sts	0x0160, r20	; 0x800160 <timestamp>
     952:	50 93 61 01 	sts	0x0161, r21	; 0x800161 <timestamp+0x1>
     956:	60 93 62 01 	sts	0x0162, r22	; 0x800162 <timestamp+0x2>
     95a:	70 93 63 01 	sts	0x0163, r23	; 0x800163 <timestamp+0x3>
     95e:	b0 9b       	sbis	0x16, 0	; 22
     960:	1a c0       	rjmp	.+52     	; 0x996 <__vector_1+0x9a>
     962:	01 96       	adiw	r24, 0x01	; 1
     964:	09 2e       	mov	r0, r25
     966:	00 0c       	add	r0, r0
     968:	aa 0b       	sbc	r26, r26
     96a:	bb 0b       	sbc	r27, r27
     96c:	bc 01       	movw	r22, r24
     96e:	55 27       	eor	r21, r21
     970:	44 27       	eor	r20, r20
     972:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     976:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     97a:	a0 e0       	ldi	r26, 0x00	; 0
     97c:	b0 e0       	ldi	r27, 0x00	; 0
     97e:	84 2b       	or	r24, r20
     980:	95 2b       	or	r25, r21
     982:	a6 2b       	or	r26, r22
     984:	b7 2b       	or	r27, r23
     986:	80 93 60 01 	sts	0x0160, r24	; 0x800160 <timestamp>
     98a:	90 93 61 01 	sts	0x0161, r25	; 0x800161 <timestamp+0x1>
     98e:	a0 93 62 01 	sts	0x0162, r26	; 0x800162 <timestamp+0x2>
     992:	b0 93 63 01 	sts	0x0163, r27	; 0x800163 <timestamp+0x3>
     996:	e0 91 00 02 	lds	r30, 0x0200	; 0x800200 <mtable>
     99a:	f0 91 01 02 	lds	r31, 0x0201	; 0x800201 <mtable+0x1>
     99e:	30 97       	sbiw	r30, 0x00	; 0
     9a0:	39 f0       	breq	.+14     	; 0x9b0 <__vector_1+0xb4>
     9a2:	60 e0       	ldi	r22, 0x00	; 0
     9a4:	70 e0       	ldi	r23, 0x00	; 0
     9a6:	80 91 68 01 	lds	r24, 0x0168	; 0x800168 <otable>
     9aa:	90 91 69 01 	lds	r25, 0x0169	; 0x800169 <otable+0x1>
     9ae:	09 95       	icall
     9b0:	0e 94 4a 04 	call	0x894	; 0x894 <schedule>
     9b4:	ff 91       	pop	r31
     9b6:	ef 91       	pop	r30
     9b8:	bf 91       	pop	r27
     9ba:	af 91       	pop	r26
     9bc:	9f 91       	pop	r25
     9be:	8f 91       	pop	r24
     9c0:	7f 91       	pop	r23
     9c2:	6f 91       	pop	r22
     9c4:	5f 91       	pop	r21
     9c6:	4f 91       	pop	r20
     9c8:	3f 91       	pop	r19
     9ca:	2f 91       	pop	r18
     9cc:	1f 91       	pop	r17
     9ce:	0f 91       	pop	r16
     9d0:	0f 90       	pop	r0
     9d2:	0f be       	out	0x3f, r0	; 63
     9d4:	0f 90       	pop	r0
     9d6:	1f 90       	pop	r1
     9d8:	18 95       	reti

000009da <__vector_2>:
     9da:	1f 92       	push	r1
     9dc:	0f 92       	push	r0
     9de:	0f b6       	in	r0, 0x3f	; 63
     9e0:	0f 92       	push	r0
     9e2:	11 24       	eor	r1, r1
     9e4:	0f 93       	push	r16
     9e6:	1f 93       	push	r17
     9e8:	2f 93       	push	r18
     9ea:	3f 93       	push	r19
     9ec:	4f 93       	push	r20
     9ee:	5f 93       	push	r21
     9f0:	6f 93       	push	r22
     9f2:	7f 93       	push	r23
     9f4:	8f 93       	push	r24
     9f6:	9f 93       	push	r25
     9f8:	af 93       	push	r26
     9fa:	bf 93       	push	r27
     9fc:	ef 93       	push	r30
     9fe:	ff 93       	push	r31
     a00:	80 91 5e 01 	lds	r24, 0x015E	; 0x80015e <overflows>
     a04:	90 91 5f 01 	lds	r25, 0x015F	; 0x80015f <overflows+0x1>
     a08:	ac 01       	movw	r20, r24
     a0a:	09 2e       	mov	r0, r25
     a0c:	00 0c       	add	r0, r0
     a0e:	66 0b       	sbc	r22, r22
     a10:	77 0b       	sbc	r23, r23
     a12:	9a 01       	movw	r18, r20
     a14:	11 27       	eor	r17, r17
     a16:	00 27       	eor	r16, r16
     a18:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     a1c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     a20:	60 e0       	ldi	r22, 0x00	; 0
     a22:	70 e0       	ldi	r23, 0x00	; 0
     a24:	40 2b       	or	r20, r16
     a26:	51 2b       	or	r21, r17
     a28:	62 2b       	or	r22, r18
     a2a:	73 2b       	or	r23, r19
     a2c:	40 93 60 01 	sts	0x0160, r20	; 0x800160 <timestamp>
     a30:	50 93 61 01 	sts	0x0161, r21	; 0x800161 <timestamp+0x1>
     a34:	60 93 62 01 	sts	0x0162, r22	; 0x800162 <timestamp+0x2>
     a38:	70 93 63 01 	sts	0x0163, r23	; 0x800163 <timestamp+0x3>
     a3c:	b0 9b       	sbis	0x16, 0	; 22
     a3e:	1a c0       	rjmp	.+52     	; 0xa74 <__vector_2+0x9a>
     a40:	01 96       	adiw	r24, 0x01	; 1
     a42:	09 2e       	mov	r0, r25
     a44:	00 0c       	add	r0, r0
     a46:	aa 0b       	sbc	r26, r26
     a48:	bb 0b       	sbc	r27, r27
     a4a:	bc 01       	movw	r22, r24
     a4c:	55 27       	eor	r21, r21
     a4e:	44 27       	eor	r20, r20
     a50:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     a54:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     a58:	a0 e0       	ldi	r26, 0x00	; 0
     a5a:	b0 e0       	ldi	r27, 0x00	; 0
     a5c:	84 2b       	or	r24, r20
     a5e:	95 2b       	or	r25, r21
     a60:	a6 2b       	or	r26, r22
     a62:	b7 2b       	or	r27, r23
     a64:	80 93 60 01 	sts	0x0160, r24	; 0x800160 <timestamp>
     a68:	90 93 61 01 	sts	0x0161, r25	; 0x800161 <timestamp+0x1>
     a6c:	a0 93 62 01 	sts	0x0162, r26	; 0x800162 <timestamp+0x2>
     a70:	b0 93 63 01 	sts	0x0163, r27	; 0x800163 <timestamp+0x3>
     a74:	e0 91 02 02 	lds	r30, 0x0202	; 0x800202 <mtable+0x2>
     a78:	f0 91 03 02 	lds	r31, 0x0203	; 0x800203 <mtable+0x3>
     a7c:	30 97       	sbiw	r30, 0x00	; 0
     a7e:	39 f0       	breq	.+14     	; 0xa8e <__vector_2+0xb4>
     a80:	61 e0       	ldi	r22, 0x01	; 1
     a82:	70 e0       	ldi	r23, 0x00	; 0
     a84:	80 91 6a 01 	lds	r24, 0x016A	; 0x80016a <otable+0x2>
     a88:	90 91 6b 01 	lds	r25, 0x016B	; 0x80016b <otable+0x3>
     a8c:	09 95       	icall
     a8e:	0e 94 4a 04 	call	0x894	; 0x894 <schedule>
     a92:	ff 91       	pop	r31
     a94:	ef 91       	pop	r30
     a96:	bf 91       	pop	r27
     a98:	af 91       	pop	r26
     a9a:	9f 91       	pop	r25
     a9c:	8f 91       	pop	r24
     a9e:	7f 91       	pop	r23
     aa0:	6f 91       	pop	r22
     aa2:	5f 91       	pop	r21
     aa4:	4f 91       	pop	r20
     aa6:	3f 91       	pop	r19
     aa8:	2f 91       	pop	r18
     aaa:	1f 91       	pop	r17
     aac:	0f 91       	pop	r16
     aae:	0f 90       	pop	r0
     ab0:	0f be       	out	0x3f, r0	; 63
     ab2:	0f 90       	pop	r0
     ab4:	1f 90       	pop	r1
     ab6:	18 95       	reti

00000ab8 <__vector_3>:
     ab8:	1f 92       	push	r1
     aba:	0f 92       	push	r0
     abc:	0f b6       	in	r0, 0x3f	; 63
     abe:	0f 92       	push	r0
     ac0:	11 24       	eor	r1, r1
     ac2:	0f 93       	push	r16
     ac4:	1f 93       	push	r17
     ac6:	2f 93       	push	r18
     ac8:	3f 93       	push	r19
     aca:	4f 93       	push	r20
     acc:	5f 93       	push	r21
     ace:	6f 93       	push	r22
     ad0:	7f 93       	push	r23
     ad2:	8f 93       	push	r24
     ad4:	9f 93       	push	r25
     ad6:	af 93       	push	r26
     ad8:	bf 93       	push	r27
     ada:	ef 93       	push	r30
     adc:	ff 93       	push	r31
     ade:	80 91 5e 01 	lds	r24, 0x015E	; 0x80015e <overflows>
     ae2:	90 91 5f 01 	lds	r25, 0x015F	; 0x80015f <overflows+0x1>
     ae6:	ac 01       	movw	r20, r24
     ae8:	09 2e       	mov	r0, r25
     aea:	00 0c       	add	r0, r0
     aec:	66 0b       	sbc	r22, r22
     aee:	77 0b       	sbc	r23, r23
     af0:	9a 01       	movw	r18, r20
     af2:	11 27       	eor	r17, r17
     af4:	00 27       	eor	r16, r16
     af6:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     afa:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     afe:	60 e0       	ldi	r22, 0x00	; 0
     b00:	70 e0       	ldi	r23, 0x00	; 0
     b02:	40 2b       	or	r20, r16
     b04:	51 2b       	or	r21, r17
     b06:	62 2b       	or	r22, r18
     b08:	73 2b       	or	r23, r19
     b0a:	40 93 60 01 	sts	0x0160, r20	; 0x800160 <timestamp>
     b0e:	50 93 61 01 	sts	0x0161, r21	; 0x800161 <timestamp+0x1>
     b12:	60 93 62 01 	sts	0x0162, r22	; 0x800162 <timestamp+0x2>
     b16:	70 93 63 01 	sts	0x0163, r23	; 0x800163 <timestamp+0x3>
     b1a:	b0 9b       	sbis	0x16, 0	; 22
     b1c:	1a c0       	rjmp	.+52     	; 0xb52 <__vector_3+0x9a>
     b1e:	01 96       	adiw	r24, 0x01	; 1
     b20:	09 2e       	mov	r0, r25
     b22:	00 0c       	add	r0, r0
     b24:	aa 0b       	sbc	r26, r26
     b26:	bb 0b       	sbc	r27, r27
     b28:	bc 01       	movw	r22, r24
     b2a:	55 27       	eor	r21, r21
     b2c:	44 27       	eor	r20, r20
     b2e:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     b32:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     b36:	a0 e0       	ldi	r26, 0x00	; 0
     b38:	b0 e0       	ldi	r27, 0x00	; 0
     b3a:	84 2b       	or	r24, r20
     b3c:	95 2b       	or	r25, r21
     b3e:	a6 2b       	or	r26, r22
     b40:	b7 2b       	or	r27, r23
     b42:	80 93 60 01 	sts	0x0160, r24	; 0x800160 <timestamp>
     b46:	90 93 61 01 	sts	0x0161, r25	; 0x800161 <timestamp+0x1>
     b4a:	a0 93 62 01 	sts	0x0162, r26	; 0x800162 <timestamp+0x2>
     b4e:	b0 93 63 01 	sts	0x0163, r27	; 0x800163 <timestamp+0x3>
     b52:	e0 91 04 02 	lds	r30, 0x0204	; 0x800204 <mtable+0x4>
     b56:	f0 91 05 02 	lds	r31, 0x0205	; 0x800205 <mtable+0x5>
     b5a:	30 97       	sbiw	r30, 0x00	; 0
     b5c:	39 f0       	breq	.+14     	; 0xb6c <__vector_3+0xb4>
     b5e:	62 e0       	ldi	r22, 0x02	; 2
     b60:	70 e0       	ldi	r23, 0x00	; 0
     b62:	80 91 6c 01 	lds	r24, 0x016C	; 0x80016c <otable+0x4>
     b66:	90 91 6d 01 	lds	r25, 0x016D	; 0x80016d <otable+0x5>
     b6a:	09 95       	icall
     b6c:	0e 94 4a 04 	call	0x894	; 0x894 <schedule>
     b70:	ff 91       	pop	r31
     b72:	ef 91       	pop	r30
     b74:	bf 91       	pop	r27
     b76:	af 91       	pop	r26
     b78:	9f 91       	pop	r25
     b7a:	8f 91       	pop	r24
     b7c:	7f 91       	pop	r23
     b7e:	6f 91       	pop	r22
     b80:	5f 91       	pop	r21
     b82:	4f 91       	pop	r20
     b84:	3f 91       	pop	r19
     b86:	2f 91       	pop	r18
     b88:	1f 91       	pop	r17
     b8a:	0f 91       	pop	r16
     b8c:	0f 90       	pop	r0
     b8e:	0f be       	out	0x3f, r0	; 63
     b90:	0f 90       	pop	r0
     b92:	1f 90       	pop	r1
     b94:	18 95       	reti

00000b96 <__vector_4>:
     b96:	1f 92       	push	r1
     b98:	0f 92       	push	r0
     b9a:	0f b6       	in	r0, 0x3f	; 63
     b9c:	0f 92       	push	r0
     b9e:	11 24       	eor	r1, r1
     ba0:	0f 93       	push	r16
     ba2:	1f 93       	push	r17
     ba4:	2f 93       	push	r18
     ba6:	3f 93       	push	r19
     ba8:	4f 93       	push	r20
     baa:	5f 93       	push	r21
     bac:	6f 93       	push	r22
     bae:	7f 93       	push	r23
     bb0:	8f 93       	push	r24
     bb2:	9f 93       	push	r25
     bb4:	af 93       	push	r26
     bb6:	bf 93       	push	r27
     bb8:	ef 93       	push	r30
     bba:	ff 93       	push	r31
     bbc:	80 91 5e 01 	lds	r24, 0x015E	; 0x80015e <overflows>
     bc0:	90 91 5f 01 	lds	r25, 0x015F	; 0x80015f <overflows+0x1>
     bc4:	ac 01       	movw	r20, r24
     bc6:	09 2e       	mov	r0, r25
     bc8:	00 0c       	add	r0, r0
     bca:	66 0b       	sbc	r22, r22
     bcc:	77 0b       	sbc	r23, r23
     bce:	9a 01       	movw	r18, r20
     bd0:	11 27       	eor	r17, r17
     bd2:	00 27       	eor	r16, r16
     bd4:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     bd8:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     bdc:	60 e0       	ldi	r22, 0x00	; 0
     bde:	70 e0       	ldi	r23, 0x00	; 0
     be0:	40 2b       	or	r20, r16
     be2:	51 2b       	or	r21, r17
     be4:	62 2b       	or	r22, r18
     be6:	73 2b       	or	r23, r19
     be8:	40 93 60 01 	sts	0x0160, r20	; 0x800160 <timestamp>
     bec:	50 93 61 01 	sts	0x0161, r21	; 0x800161 <timestamp+0x1>
     bf0:	60 93 62 01 	sts	0x0162, r22	; 0x800162 <timestamp+0x2>
     bf4:	70 93 63 01 	sts	0x0163, r23	; 0x800163 <timestamp+0x3>
     bf8:	b0 9b       	sbis	0x16, 0	; 22
     bfa:	1a c0       	rjmp	.+52     	; 0xc30 <__vector_4+0x9a>
     bfc:	01 96       	adiw	r24, 0x01	; 1
     bfe:	09 2e       	mov	r0, r25
     c00:	00 0c       	add	r0, r0
     c02:	aa 0b       	sbc	r26, r26
     c04:	bb 0b       	sbc	r27, r27
     c06:	bc 01       	movw	r22, r24
     c08:	55 27       	eor	r21, r21
     c0a:	44 27       	eor	r20, r20
     c0c:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     c10:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     c14:	a0 e0       	ldi	r26, 0x00	; 0
     c16:	b0 e0       	ldi	r27, 0x00	; 0
     c18:	84 2b       	or	r24, r20
     c1a:	95 2b       	or	r25, r21
     c1c:	a6 2b       	or	r26, r22
     c1e:	b7 2b       	or	r27, r23
     c20:	80 93 60 01 	sts	0x0160, r24	; 0x800160 <timestamp>
     c24:	90 93 61 01 	sts	0x0161, r25	; 0x800161 <timestamp+0x1>
     c28:	a0 93 62 01 	sts	0x0162, r26	; 0x800162 <timestamp+0x2>
     c2c:	b0 93 63 01 	sts	0x0163, r27	; 0x800163 <timestamp+0x3>
     c30:	e0 91 06 02 	lds	r30, 0x0206	; 0x800206 <mtable+0x6>
     c34:	f0 91 07 02 	lds	r31, 0x0207	; 0x800207 <mtable+0x7>
     c38:	30 97       	sbiw	r30, 0x00	; 0
     c3a:	39 f0       	breq	.+14     	; 0xc4a <__vector_4+0xb4>
     c3c:	63 e0       	ldi	r22, 0x03	; 3
     c3e:	70 e0       	ldi	r23, 0x00	; 0
     c40:	80 91 6e 01 	lds	r24, 0x016E	; 0x80016e <otable+0x6>
     c44:	90 91 6f 01 	lds	r25, 0x016F	; 0x80016f <otable+0x7>
     c48:	09 95       	icall
     c4a:	0e 94 4a 04 	call	0x894	; 0x894 <schedule>
     c4e:	ff 91       	pop	r31
     c50:	ef 91       	pop	r30
     c52:	bf 91       	pop	r27
     c54:	af 91       	pop	r26
     c56:	9f 91       	pop	r25
     c58:	8f 91       	pop	r24
     c5a:	7f 91       	pop	r23
     c5c:	6f 91       	pop	r22
     c5e:	5f 91       	pop	r21
     c60:	4f 91       	pop	r20
     c62:	3f 91       	pop	r19
     c64:	2f 91       	pop	r18
     c66:	1f 91       	pop	r17
     c68:	0f 91       	pop	r16
     c6a:	0f 90       	pop	r0
     c6c:	0f be       	out	0x3f, r0	; 63
     c6e:	0f 90       	pop	r0
     c70:	1f 90       	pop	r1
     c72:	18 95       	reti

00000c74 <__vector_5>:
     c74:	1f 92       	push	r1
     c76:	0f 92       	push	r0
     c78:	0f b6       	in	r0, 0x3f	; 63
     c7a:	0f 92       	push	r0
     c7c:	11 24       	eor	r1, r1
     c7e:	0f 93       	push	r16
     c80:	1f 93       	push	r17
     c82:	2f 93       	push	r18
     c84:	3f 93       	push	r19
     c86:	4f 93       	push	r20
     c88:	5f 93       	push	r21
     c8a:	6f 93       	push	r22
     c8c:	7f 93       	push	r23
     c8e:	8f 93       	push	r24
     c90:	9f 93       	push	r25
     c92:	af 93       	push	r26
     c94:	bf 93       	push	r27
     c96:	ef 93       	push	r30
     c98:	ff 93       	push	r31
     c9a:	80 91 5e 01 	lds	r24, 0x015E	; 0x80015e <overflows>
     c9e:	90 91 5f 01 	lds	r25, 0x015F	; 0x80015f <overflows+0x1>
     ca2:	ac 01       	movw	r20, r24
     ca4:	09 2e       	mov	r0, r25
     ca6:	00 0c       	add	r0, r0
     ca8:	66 0b       	sbc	r22, r22
     caa:	77 0b       	sbc	r23, r23
     cac:	9a 01       	movw	r18, r20
     cae:	11 27       	eor	r17, r17
     cb0:	00 27       	eor	r16, r16
     cb2:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     cb6:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     cba:	60 e0       	ldi	r22, 0x00	; 0
     cbc:	70 e0       	ldi	r23, 0x00	; 0
     cbe:	40 2b       	or	r20, r16
     cc0:	51 2b       	or	r21, r17
     cc2:	62 2b       	or	r22, r18
     cc4:	73 2b       	or	r23, r19
     cc6:	40 93 60 01 	sts	0x0160, r20	; 0x800160 <timestamp>
     cca:	50 93 61 01 	sts	0x0161, r21	; 0x800161 <timestamp+0x1>
     cce:	60 93 62 01 	sts	0x0162, r22	; 0x800162 <timestamp+0x2>
     cd2:	70 93 63 01 	sts	0x0163, r23	; 0x800163 <timestamp+0x3>
     cd6:	b0 9b       	sbis	0x16, 0	; 22
     cd8:	1a c0       	rjmp	.+52     	; 0xd0e <__vector_5+0x9a>
     cda:	01 96       	adiw	r24, 0x01	; 1
     cdc:	09 2e       	mov	r0, r25
     cde:	00 0c       	add	r0, r0
     ce0:	aa 0b       	sbc	r26, r26
     ce2:	bb 0b       	sbc	r27, r27
     ce4:	bc 01       	movw	r22, r24
     ce6:	55 27       	eor	r21, r21
     ce8:	44 27       	eor	r20, r20
     cea:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     cee:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     cf2:	a0 e0       	ldi	r26, 0x00	; 0
     cf4:	b0 e0       	ldi	r27, 0x00	; 0
     cf6:	84 2b       	or	r24, r20
     cf8:	95 2b       	or	r25, r21
     cfa:	a6 2b       	or	r26, r22
     cfc:	b7 2b       	or	r27, r23
     cfe:	80 93 60 01 	sts	0x0160, r24	; 0x800160 <timestamp>
     d02:	90 93 61 01 	sts	0x0161, r25	; 0x800161 <timestamp+0x1>
     d06:	a0 93 62 01 	sts	0x0162, r26	; 0x800162 <timestamp+0x2>
     d0a:	b0 93 63 01 	sts	0x0163, r27	; 0x800163 <timestamp+0x3>
     d0e:	e0 91 08 02 	lds	r30, 0x0208	; 0x800208 <mtable+0x8>
     d12:	f0 91 09 02 	lds	r31, 0x0209	; 0x800209 <mtable+0x9>
     d16:	30 97       	sbiw	r30, 0x00	; 0
     d18:	39 f0       	breq	.+14     	; 0xd28 <__vector_5+0xb4>
     d1a:	64 e0       	ldi	r22, 0x04	; 4
     d1c:	70 e0       	ldi	r23, 0x00	; 0
     d1e:	80 91 70 01 	lds	r24, 0x0170	; 0x800170 <otable+0x8>
     d22:	90 91 71 01 	lds	r25, 0x0171	; 0x800171 <otable+0x9>
     d26:	09 95       	icall
     d28:	0e 94 4a 04 	call	0x894	; 0x894 <schedule>
     d2c:	ff 91       	pop	r31
     d2e:	ef 91       	pop	r30
     d30:	bf 91       	pop	r27
     d32:	af 91       	pop	r26
     d34:	9f 91       	pop	r25
     d36:	8f 91       	pop	r24
     d38:	7f 91       	pop	r23
     d3a:	6f 91       	pop	r22
     d3c:	5f 91       	pop	r21
     d3e:	4f 91       	pop	r20
     d40:	3f 91       	pop	r19
     d42:	2f 91       	pop	r18
     d44:	1f 91       	pop	r17
     d46:	0f 91       	pop	r16
     d48:	0f 90       	pop	r0
     d4a:	0f be       	out	0x3f, r0	; 63
     d4c:	0f 90       	pop	r0
     d4e:	1f 90       	pop	r1
     d50:	18 95       	reti

00000d52 <__vector_10>:
     d52:	1f 92       	push	r1
     d54:	0f 92       	push	r0
     d56:	0f b6       	in	r0, 0x3f	; 63
     d58:	0f 92       	push	r0
     d5a:	11 24       	eor	r1, r1
     d5c:	0f 93       	push	r16
     d5e:	1f 93       	push	r17
     d60:	2f 93       	push	r18
     d62:	3f 93       	push	r19
     d64:	4f 93       	push	r20
     d66:	5f 93       	push	r21
     d68:	6f 93       	push	r22
     d6a:	7f 93       	push	r23
     d6c:	8f 93       	push	r24
     d6e:	9f 93       	push	r25
     d70:	af 93       	push	r26
     d72:	bf 93       	push	r27
     d74:	ef 93       	push	r30
     d76:	ff 93       	push	r31
     d78:	80 91 5e 01 	lds	r24, 0x015E	; 0x80015e <overflows>
     d7c:	90 91 5f 01 	lds	r25, 0x015F	; 0x80015f <overflows+0x1>
     d80:	ac 01       	movw	r20, r24
     d82:	09 2e       	mov	r0, r25
     d84:	00 0c       	add	r0, r0
     d86:	66 0b       	sbc	r22, r22
     d88:	77 0b       	sbc	r23, r23
     d8a:	9a 01       	movw	r18, r20
     d8c:	11 27       	eor	r17, r17
     d8e:	00 27       	eor	r16, r16
     d90:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     d94:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     d98:	60 e0       	ldi	r22, 0x00	; 0
     d9a:	70 e0       	ldi	r23, 0x00	; 0
     d9c:	40 2b       	or	r20, r16
     d9e:	51 2b       	or	r21, r17
     da0:	62 2b       	or	r22, r18
     da2:	73 2b       	or	r23, r19
     da4:	40 93 60 01 	sts	0x0160, r20	; 0x800160 <timestamp>
     da8:	50 93 61 01 	sts	0x0161, r21	; 0x800161 <timestamp+0x1>
     dac:	60 93 62 01 	sts	0x0162, r22	; 0x800162 <timestamp+0x2>
     db0:	70 93 63 01 	sts	0x0163, r23	; 0x800163 <timestamp+0x3>
     db4:	b0 9b       	sbis	0x16, 0	; 22
     db6:	1a c0       	rjmp	.+52     	; 0xdec <__vector_10+0x9a>
     db8:	01 96       	adiw	r24, 0x01	; 1
     dba:	09 2e       	mov	r0, r25
     dbc:	00 0c       	add	r0, r0
     dbe:	aa 0b       	sbc	r26, r26
     dc0:	bb 0b       	sbc	r27, r27
     dc2:	bc 01       	movw	r22, r24
     dc4:	55 27       	eor	r21, r21
     dc6:	44 27       	eor	r20, r20
     dc8:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     dcc:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     dd0:	a0 e0       	ldi	r26, 0x00	; 0
     dd2:	b0 e0       	ldi	r27, 0x00	; 0
     dd4:	84 2b       	or	r24, r20
     dd6:	95 2b       	or	r25, r21
     dd8:	a6 2b       	or	r26, r22
     dda:	b7 2b       	or	r27, r23
     ddc:	80 93 60 01 	sts	0x0160, r24	; 0x800160 <timestamp>
     de0:	90 93 61 01 	sts	0x0161, r25	; 0x800161 <timestamp+0x1>
     de4:	a0 93 62 01 	sts	0x0162, r26	; 0x800162 <timestamp+0x2>
     de8:	b0 93 63 01 	sts	0x0163, r27	; 0x800163 <timestamp+0x3>
     dec:	e0 91 0a 02 	lds	r30, 0x020A	; 0x80020a <mtable+0xa>
     df0:	f0 91 0b 02 	lds	r31, 0x020B	; 0x80020b <mtable+0xb>
     df4:	30 97       	sbiw	r30, 0x00	; 0
     df6:	39 f0       	breq	.+14     	; 0xe06 <__vector_10+0xb4>
     df8:	65 e0       	ldi	r22, 0x05	; 5
     dfa:	70 e0       	ldi	r23, 0x00	; 0
     dfc:	80 91 72 01 	lds	r24, 0x0172	; 0x800172 <otable+0xa>
     e00:	90 91 73 01 	lds	r25, 0x0173	; 0x800173 <otable+0xb>
     e04:	09 95       	icall
     e06:	0e 94 4a 04 	call	0x894	; 0x894 <schedule>
     e0a:	ff 91       	pop	r31
     e0c:	ef 91       	pop	r30
     e0e:	bf 91       	pop	r27
     e10:	af 91       	pop	r26
     e12:	9f 91       	pop	r25
     e14:	8f 91       	pop	r24
     e16:	7f 91       	pop	r23
     e18:	6f 91       	pop	r22
     e1a:	5f 91       	pop	r21
     e1c:	4f 91       	pop	r20
     e1e:	3f 91       	pop	r19
     e20:	2f 91       	pop	r18
     e22:	1f 91       	pop	r17
     e24:	0f 91       	pop	r16
     e26:	0f 90       	pop	r0
     e28:	0f be       	out	0x3f, r0	; 63
     e2a:	0f 90       	pop	r0
     e2c:	1f 90       	pop	r1
     e2e:	18 95       	reti

00000e30 <__vector_11>:
     e30:	1f 92       	push	r1
     e32:	0f 92       	push	r0
     e34:	0f b6       	in	r0, 0x3f	; 63
     e36:	0f 92       	push	r0
     e38:	11 24       	eor	r1, r1
     e3a:	0f 93       	push	r16
     e3c:	1f 93       	push	r17
     e3e:	2f 93       	push	r18
     e40:	3f 93       	push	r19
     e42:	4f 93       	push	r20
     e44:	5f 93       	push	r21
     e46:	6f 93       	push	r22
     e48:	7f 93       	push	r23
     e4a:	8f 93       	push	r24
     e4c:	9f 93       	push	r25
     e4e:	af 93       	push	r26
     e50:	bf 93       	push	r27
     e52:	ef 93       	push	r30
     e54:	ff 93       	push	r31
     e56:	80 91 5e 01 	lds	r24, 0x015E	; 0x80015e <overflows>
     e5a:	90 91 5f 01 	lds	r25, 0x015F	; 0x80015f <overflows+0x1>
     e5e:	ac 01       	movw	r20, r24
     e60:	09 2e       	mov	r0, r25
     e62:	00 0c       	add	r0, r0
     e64:	66 0b       	sbc	r22, r22
     e66:	77 0b       	sbc	r23, r23
     e68:	9a 01       	movw	r18, r20
     e6a:	11 27       	eor	r17, r17
     e6c:	00 27       	eor	r16, r16
     e6e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     e72:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     e76:	60 e0       	ldi	r22, 0x00	; 0
     e78:	70 e0       	ldi	r23, 0x00	; 0
     e7a:	40 2b       	or	r20, r16
     e7c:	51 2b       	or	r21, r17
     e7e:	62 2b       	or	r22, r18
     e80:	73 2b       	or	r23, r19
     e82:	40 93 60 01 	sts	0x0160, r20	; 0x800160 <timestamp>
     e86:	50 93 61 01 	sts	0x0161, r21	; 0x800161 <timestamp+0x1>
     e8a:	60 93 62 01 	sts	0x0162, r22	; 0x800162 <timestamp+0x2>
     e8e:	70 93 63 01 	sts	0x0163, r23	; 0x800163 <timestamp+0x3>
     e92:	b0 9b       	sbis	0x16, 0	; 22
     e94:	1a c0       	rjmp	.+52     	; 0xeca <__vector_11+0x9a>
     e96:	01 96       	adiw	r24, 0x01	; 1
     e98:	09 2e       	mov	r0, r25
     e9a:	00 0c       	add	r0, r0
     e9c:	aa 0b       	sbc	r26, r26
     e9e:	bb 0b       	sbc	r27, r27
     ea0:	bc 01       	movw	r22, r24
     ea2:	55 27       	eor	r21, r21
     ea4:	44 27       	eor	r20, r20
     ea6:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     eaa:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     eae:	a0 e0       	ldi	r26, 0x00	; 0
     eb0:	b0 e0       	ldi	r27, 0x00	; 0
     eb2:	84 2b       	or	r24, r20
     eb4:	95 2b       	or	r25, r21
     eb6:	a6 2b       	or	r26, r22
     eb8:	b7 2b       	or	r27, r23
     eba:	80 93 60 01 	sts	0x0160, r24	; 0x800160 <timestamp>
     ebe:	90 93 61 01 	sts	0x0161, r25	; 0x800161 <timestamp+0x1>
     ec2:	a0 93 62 01 	sts	0x0162, r26	; 0x800162 <timestamp+0x2>
     ec6:	b0 93 63 01 	sts	0x0163, r27	; 0x800163 <timestamp+0x3>
     eca:	e0 91 0c 02 	lds	r30, 0x020C	; 0x80020c <mtable+0xc>
     ece:	f0 91 0d 02 	lds	r31, 0x020D	; 0x80020d <mtable+0xd>
     ed2:	30 97       	sbiw	r30, 0x00	; 0
     ed4:	39 f0       	breq	.+14     	; 0xee4 <__vector_11+0xb4>
     ed6:	66 e0       	ldi	r22, 0x06	; 6
     ed8:	70 e0       	ldi	r23, 0x00	; 0
     eda:	80 91 74 01 	lds	r24, 0x0174	; 0x800174 <otable+0xc>
     ede:	90 91 75 01 	lds	r25, 0x0175	; 0x800175 <otable+0xd>
     ee2:	09 95       	icall
     ee4:	0e 94 4a 04 	call	0x894	; 0x894 <schedule>
     ee8:	ff 91       	pop	r31
     eea:	ef 91       	pop	r30
     eec:	bf 91       	pop	r27
     eee:	af 91       	pop	r26
     ef0:	9f 91       	pop	r25
     ef2:	8f 91       	pop	r24
     ef4:	7f 91       	pop	r23
     ef6:	6f 91       	pop	r22
     ef8:	5f 91       	pop	r21
     efa:	4f 91       	pop	r20
     efc:	3f 91       	pop	r19
     efe:	2f 91       	pop	r18
     f00:	1f 91       	pop	r17
     f02:	0f 91       	pop	r16
     f04:	0f 90       	pop	r0
     f06:	0f be       	out	0x3f, r0	; 63
     f08:	0f 90       	pop	r0
     f0a:	1f 90       	pop	r1
     f0c:	18 95       	reti

00000f0e <__vector_12>:
     f0e:	1f 92       	push	r1
     f10:	0f 92       	push	r0
     f12:	0f b6       	in	r0, 0x3f	; 63
     f14:	0f 92       	push	r0
     f16:	11 24       	eor	r1, r1
     f18:	0f 93       	push	r16
     f1a:	1f 93       	push	r17
     f1c:	2f 93       	push	r18
     f1e:	3f 93       	push	r19
     f20:	4f 93       	push	r20
     f22:	5f 93       	push	r21
     f24:	6f 93       	push	r22
     f26:	7f 93       	push	r23
     f28:	8f 93       	push	r24
     f2a:	9f 93       	push	r25
     f2c:	af 93       	push	r26
     f2e:	bf 93       	push	r27
     f30:	ef 93       	push	r30
     f32:	ff 93       	push	r31
     f34:	80 91 5e 01 	lds	r24, 0x015E	; 0x80015e <overflows>
     f38:	90 91 5f 01 	lds	r25, 0x015F	; 0x80015f <overflows+0x1>
     f3c:	ac 01       	movw	r20, r24
     f3e:	09 2e       	mov	r0, r25
     f40:	00 0c       	add	r0, r0
     f42:	66 0b       	sbc	r22, r22
     f44:	77 0b       	sbc	r23, r23
     f46:	9a 01       	movw	r18, r20
     f48:	11 27       	eor	r17, r17
     f4a:	00 27       	eor	r16, r16
     f4c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     f50:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     f54:	60 e0       	ldi	r22, 0x00	; 0
     f56:	70 e0       	ldi	r23, 0x00	; 0
     f58:	40 2b       	or	r20, r16
     f5a:	51 2b       	or	r21, r17
     f5c:	62 2b       	or	r22, r18
     f5e:	73 2b       	or	r23, r19
     f60:	40 93 60 01 	sts	0x0160, r20	; 0x800160 <timestamp>
     f64:	50 93 61 01 	sts	0x0161, r21	; 0x800161 <timestamp+0x1>
     f68:	60 93 62 01 	sts	0x0162, r22	; 0x800162 <timestamp+0x2>
     f6c:	70 93 63 01 	sts	0x0163, r23	; 0x800163 <timestamp+0x3>
     f70:	b0 9b       	sbis	0x16, 0	; 22
     f72:	1a c0       	rjmp	.+52     	; 0xfa8 <__vector_12+0x9a>
     f74:	01 96       	adiw	r24, 0x01	; 1
     f76:	09 2e       	mov	r0, r25
     f78:	00 0c       	add	r0, r0
     f7a:	aa 0b       	sbc	r26, r26
     f7c:	bb 0b       	sbc	r27, r27
     f7e:	bc 01       	movw	r22, r24
     f80:	55 27       	eor	r21, r21
     f82:	44 27       	eor	r20, r20
     f84:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     f88:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     f8c:	a0 e0       	ldi	r26, 0x00	; 0
     f8e:	b0 e0       	ldi	r27, 0x00	; 0
     f90:	84 2b       	or	r24, r20
     f92:	95 2b       	or	r25, r21
     f94:	a6 2b       	or	r26, r22
     f96:	b7 2b       	or	r27, r23
     f98:	80 93 60 01 	sts	0x0160, r24	; 0x800160 <timestamp>
     f9c:	90 93 61 01 	sts	0x0161, r25	; 0x800161 <timestamp+0x1>
     fa0:	a0 93 62 01 	sts	0x0162, r26	; 0x800162 <timestamp+0x2>
     fa4:	b0 93 63 01 	sts	0x0163, r27	; 0x800163 <timestamp+0x3>
     fa8:	e0 91 0e 02 	lds	r30, 0x020E	; 0x80020e <mtable+0xe>
     fac:	f0 91 0f 02 	lds	r31, 0x020F	; 0x80020f <mtable+0xf>
     fb0:	30 97       	sbiw	r30, 0x00	; 0
     fb2:	39 f0       	breq	.+14     	; 0xfc2 <__vector_12+0xb4>
     fb4:	67 e0       	ldi	r22, 0x07	; 7
     fb6:	70 e0       	ldi	r23, 0x00	; 0
     fb8:	80 91 76 01 	lds	r24, 0x0176	; 0x800176 <otable+0xe>
     fbc:	90 91 77 01 	lds	r25, 0x0177	; 0x800177 <otable+0xf>
     fc0:	09 95       	icall
     fc2:	0e 94 4a 04 	call	0x894	; 0x894 <schedule>
     fc6:	ff 91       	pop	r31
     fc8:	ef 91       	pop	r30
     fca:	bf 91       	pop	r27
     fcc:	af 91       	pop	r26
     fce:	9f 91       	pop	r25
     fd0:	8f 91       	pop	r24
     fd2:	7f 91       	pop	r23
     fd4:	6f 91       	pop	r22
     fd6:	5f 91       	pop	r21
     fd8:	4f 91       	pop	r20
     fda:	3f 91       	pop	r19
     fdc:	2f 91       	pop	r18
     fde:	1f 91       	pop	r17
     fe0:	0f 91       	pop	r16
     fe2:	0f 90       	pop	r0
     fe4:	0f be       	out	0x3f, r0	; 63
     fe6:	0f 90       	pop	r0
     fe8:	1f 90       	pop	r1
     fea:	18 95       	reti

00000fec <__vector_13>:
     fec:	1f 92       	push	r1
     fee:	0f 92       	push	r0
     ff0:	0f b6       	in	r0, 0x3f	; 63
     ff2:	0f 92       	push	r0
     ff4:	11 24       	eor	r1, r1
     ff6:	0f 93       	push	r16
     ff8:	1f 93       	push	r17
     ffa:	2f 93       	push	r18
     ffc:	3f 93       	push	r19
     ffe:	4f 93       	push	r20
    1000:	5f 93       	push	r21
    1002:	6f 93       	push	r22
    1004:	7f 93       	push	r23
    1006:	8f 93       	push	r24
    1008:	9f 93       	push	r25
    100a:	af 93       	push	r26
    100c:	bf 93       	push	r27
    100e:	ef 93       	push	r30
    1010:	ff 93       	push	r31
    1012:	80 91 5e 01 	lds	r24, 0x015E	; 0x80015e <overflows>
    1016:	90 91 5f 01 	lds	r25, 0x015F	; 0x80015f <overflows+0x1>
    101a:	ac 01       	movw	r20, r24
    101c:	09 2e       	mov	r0, r25
    101e:	00 0c       	add	r0, r0
    1020:	66 0b       	sbc	r22, r22
    1022:	77 0b       	sbc	r23, r23
    1024:	9a 01       	movw	r18, r20
    1026:	11 27       	eor	r17, r17
    1028:	00 27       	eor	r16, r16
    102a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    102e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1032:	60 e0       	ldi	r22, 0x00	; 0
    1034:	70 e0       	ldi	r23, 0x00	; 0
    1036:	40 2b       	or	r20, r16
    1038:	51 2b       	or	r21, r17
    103a:	62 2b       	or	r22, r18
    103c:	73 2b       	or	r23, r19
    103e:	40 93 60 01 	sts	0x0160, r20	; 0x800160 <timestamp>
    1042:	50 93 61 01 	sts	0x0161, r21	; 0x800161 <timestamp+0x1>
    1046:	60 93 62 01 	sts	0x0162, r22	; 0x800162 <timestamp+0x2>
    104a:	70 93 63 01 	sts	0x0163, r23	; 0x800163 <timestamp+0x3>
    104e:	b0 9b       	sbis	0x16, 0	; 22
    1050:	1a c0       	rjmp	.+52     	; 0x1086 <__vector_13+0x9a>
    1052:	01 96       	adiw	r24, 0x01	; 1
    1054:	09 2e       	mov	r0, r25
    1056:	00 0c       	add	r0, r0
    1058:	aa 0b       	sbc	r26, r26
    105a:	bb 0b       	sbc	r27, r27
    105c:	bc 01       	movw	r22, r24
    105e:	55 27       	eor	r21, r21
    1060:	44 27       	eor	r20, r20
    1062:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1066:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    106a:	a0 e0       	ldi	r26, 0x00	; 0
    106c:	b0 e0       	ldi	r27, 0x00	; 0
    106e:	84 2b       	or	r24, r20
    1070:	95 2b       	or	r25, r21
    1072:	a6 2b       	or	r26, r22
    1074:	b7 2b       	or	r27, r23
    1076:	80 93 60 01 	sts	0x0160, r24	; 0x800160 <timestamp>
    107a:	90 93 61 01 	sts	0x0161, r25	; 0x800161 <timestamp+0x1>
    107e:	a0 93 62 01 	sts	0x0162, r26	; 0x800162 <timestamp+0x2>
    1082:	b0 93 63 01 	sts	0x0163, r27	; 0x800163 <timestamp+0x3>
    1086:	e0 91 10 02 	lds	r30, 0x0210	; 0x800210 <mtable+0x10>
    108a:	f0 91 11 02 	lds	r31, 0x0211	; 0x800211 <mtable+0x11>
    108e:	30 97       	sbiw	r30, 0x00	; 0
    1090:	39 f0       	breq	.+14     	; 0x10a0 <__vector_13+0xb4>
    1092:	68 e0       	ldi	r22, 0x08	; 8
    1094:	70 e0       	ldi	r23, 0x00	; 0
    1096:	80 91 78 01 	lds	r24, 0x0178	; 0x800178 <otable+0x10>
    109a:	90 91 79 01 	lds	r25, 0x0179	; 0x800179 <otable+0x11>
    109e:	09 95       	icall
    10a0:	0e 94 4a 04 	call	0x894	; 0x894 <schedule>
    10a4:	ff 91       	pop	r31
    10a6:	ef 91       	pop	r30
    10a8:	bf 91       	pop	r27
    10aa:	af 91       	pop	r26
    10ac:	9f 91       	pop	r25
    10ae:	8f 91       	pop	r24
    10b0:	7f 91       	pop	r23
    10b2:	6f 91       	pop	r22
    10b4:	5f 91       	pop	r21
    10b6:	4f 91       	pop	r20
    10b8:	3f 91       	pop	r19
    10ba:	2f 91       	pop	r18
    10bc:	1f 91       	pop	r17
    10be:	0f 91       	pop	r16
    10c0:	0f 90       	pop	r0
    10c2:	0f be       	out	0x3f, r0	; 63
    10c4:	0f 90       	pop	r0
    10c6:	1f 90       	pop	r1
    10c8:	18 95       	reti

000010ca <__vector_14>:
    10ca:	1f 92       	push	r1
    10cc:	0f 92       	push	r0
    10ce:	0f b6       	in	r0, 0x3f	; 63
    10d0:	0f 92       	push	r0
    10d2:	11 24       	eor	r1, r1
    10d4:	0f 93       	push	r16
    10d6:	1f 93       	push	r17
    10d8:	2f 93       	push	r18
    10da:	3f 93       	push	r19
    10dc:	4f 93       	push	r20
    10de:	5f 93       	push	r21
    10e0:	6f 93       	push	r22
    10e2:	7f 93       	push	r23
    10e4:	8f 93       	push	r24
    10e6:	9f 93       	push	r25
    10e8:	af 93       	push	r26
    10ea:	bf 93       	push	r27
    10ec:	ef 93       	push	r30
    10ee:	ff 93       	push	r31
    10f0:	80 91 5e 01 	lds	r24, 0x015E	; 0x80015e <overflows>
    10f4:	90 91 5f 01 	lds	r25, 0x015F	; 0x80015f <overflows+0x1>
    10f8:	ac 01       	movw	r20, r24
    10fa:	09 2e       	mov	r0, r25
    10fc:	00 0c       	add	r0, r0
    10fe:	66 0b       	sbc	r22, r22
    1100:	77 0b       	sbc	r23, r23
    1102:	9a 01       	movw	r18, r20
    1104:	11 27       	eor	r17, r17
    1106:	00 27       	eor	r16, r16
    1108:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    110c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1110:	60 e0       	ldi	r22, 0x00	; 0
    1112:	70 e0       	ldi	r23, 0x00	; 0
    1114:	40 2b       	or	r20, r16
    1116:	51 2b       	or	r21, r17
    1118:	62 2b       	or	r22, r18
    111a:	73 2b       	or	r23, r19
    111c:	40 93 60 01 	sts	0x0160, r20	; 0x800160 <timestamp>
    1120:	50 93 61 01 	sts	0x0161, r21	; 0x800161 <timestamp+0x1>
    1124:	60 93 62 01 	sts	0x0162, r22	; 0x800162 <timestamp+0x2>
    1128:	70 93 63 01 	sts	0x0163, r23	; 0x800163 <timestamp+0x3>
    112c:	b0 9b       	sbis	0x16, 0	; 22
    112e:	1a c0       	rjmp	.+52     	; 0x1164 <__vector_14+0x9a>
    1130:	01 96       	adiw	r24, 0x01	; 1
    1132:	09 2e       	mov	r0, r25
    1134:	00 0c       	add	r0, r0
    1136:	aa 0b       	sbc	r26, r26
    1138:	bb 0b       	sbc	r27, r27
    113a:	bc 01       	movw	r22, r24
    113c:	55 27       	eor	r21, r21
    113e:	44 27       	eor	r20, r20
    1140:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1144:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1148:	a0 e0       	ldi	r26, 0x00	; 0
    114a:	b0 e0       	ldi	r27, 0x00	; 0
    114c:	84 2b       	or	r24, r20
    114e:	95 2b       	or	r25, r21
    1150:	a6 2b       	or	r26, r22
    1152:	b7 2b       	or	r27, r23
    1154:	80 93 60 01 	sts	0x0160, r24	; 0x800160 <timestamp>
    1158:	90 93 61 01 	sts	0x0161, r25	; 0x800161 <timestamp+0x1>
    115c:	a0 93 62 01 	sts	0x0162, r26	; 0x800162 <timestamp+0x2>
    1160:	b0 93 63 01 	sts	0x0163, r27	; 0x800163 <timestamp+0x3>
    1164:	e0 91 12 02 	lds	r30, 0x0212	; 0x800212 <mtable+0x12>
    1168:	f0 91 13 02 	lds	r31, 0x0213	; 0x800213 <mtable+0x13>
    116c:	30 97       	sbiw	r30, 0x00	; 0
    116e:	39 f0       	breq	.+14     	; 0x117e <__vector_14+0xb4>
    1170:	69 e0       	ldi	r22, 0x09	; 9
    1172:	70 e0       	ldi	r23, 0x00	; 0
    1174:	80 91 7a 01 	lds	r24, 0x017A	; 0x80017a <otable+0x12>
    1178:	90 91 7b 01 	lds	r25, 0x017B	; 0x80017b <otable+0x13>
    117c:	09 95       	icall
    117e:	0e 94 4a 04 	call	0x894	; 0x894 <schedule>
    1182:	ff 91       	pop	r31
    1184:	ef 91       	pop	r30
    1186:	bf 91       	pop	r27
    1188:	af 91       	pop	r26
    118a:	9f 91       	pop	r25
    118c:	8f 91       	pop	r24
    118e:	7f 91       	pop	r23
    1190:	6f 91       	pop	r22
    1192:	5f 91       	pop	r21
    1194:	4f 91       	pop	r20
    1196:	3f 91       	pop	r19
    1198:	2f 91       	pop	r18
    119a:	1f 91       	pop	r17
    119c:	0f 91       	pop	r16
    119e:	0f 90       	pop	r0
    11a0:	0f be       	out	0x3f, r0	; 63
    11a2:	0f 90       	pop	r0
    11a4:	1f 90       	pop	r1
    11a6:	18 95       	reti

000011a8 <__vector_15>:
    11a8:	1f 92       	push	r1
    11aa:	0f 92       	push	r0
    11ac:	0f b6       	in	r0, 0x3f	; 63
    11ae:	0f 92       	push	r0
    11b0:	11 24       	eor	r1, r1
    11b2:	0f 93       	push	r16
    11b4:	1f 93       	push	r17
    11b6:	2f 93       	push	r18
    11b8:	3f 93       	push	r19
    11ba:	4f 93       	push	r20
    11bc:	5f 93       	push	r21
    11be:	6f 93       	push	r22
    11c0:	7f 93       	push	r23
    11c2:	8f 93       	push	r24
    11c4:	9f 93       	push	r25
    11c6:	af 93       	push	r26
    11c8:	bf 93       	push	r27
    11ca:	ef 93       	push	r30
    11cc:	ff 93       	push	r31
    11ce:	80 91 5e 01 	lds	r24, 0x015E	; 0x80015e <overflows>
    11d2:	90 91 5f 01 	lds	r25, 0x015F	; 0x80015f <overflows+0x1>
    11d6:	ac 01       	movw	r20, r24
    11d8:	09 2e       	mov	r0, r25
    11da:	00 0c       	add	r0, r0
    11dc:	66 0b       	sbc	r22, r22
    11de:	77 0b       	sbc	r23, r23
    11e0:	9a 01       	movw	r18, r20
    11e2:	11 27       	eor	r17, r17
    11e4:	00 27       	eor	r16, r16
    11e6:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    11ea:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    11ee:	60 e0       	ldi	r22, 0x00	; 0
    11f0:	70 e0       	ldi	r23, 0x00	; 0
    11f2:	40 2b       	or	r20, r16
    11f4:	51 2b       	or	r21, r17
    11f6:	62 2b       	or	r22, r18
    11f8:	73 2b       	or	r23, r19
    11fa:	40 93 60 01 	sts	0x0160, r20	; 0x800160 <timestamp>
    11fe:	50 93 61 01 	sts	0x0161, r21	; 0x800161 <timestamp+0x1>
    1202:	60 93 62 01 	sts	0x0162, r22	; 0x800162 <timestamp+0x2>
    1206:	70 93 63 01 	sts	0x0163, r23	; 0x800163 <timestamp+0x3>
    120a:	b0 9b       	sbis	0x16, 0	; 22
    120c:	1a c0       	rjmp	.+52     	; 0x1242 <__vector_15+0x9a>
    120e:	01 96       	adiw	r24, 0x01	; 1
    1210:	09 2e       	mov	r0, r25
    1212:	00 0c       	add	r0, r0
    1214:	aa 0b       	sbc	r26, r26
    1216:	bb 0b       	sbc	r27, r27
    1218:	bc 01       	movw	r22, r24
    121a:	55 27       	eor	r21, r21
    121c:	44 27       	eor	r20, r20
    121e:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1222:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1226:	a0 e0       	ldi	r26, 0x00	; 0
    1228:	b0 e0       	ldi	r27, 0x00	; 0
    122a:	84 2b       	or	r24, r20
    122c:	95 2b       	or	r25, r21
    122e:	a6 2b       	or	r26, r22
    1230:	b7 2b       	or	r27, r23
    1232:	80 93 60 01 	sts	0x0160, r24	; 0x800160 <timestamp>
    1236:	90 93 61 01 	sts	0x0161, r25	; 0x800161 <timestamp+0x1>
    123a:	a0 93 62 01 	sts	0x0162, r26	; 0x800162 <timestamp+0x2>
    123e:	b0 93 63 01 	sts	0x0163, r27	; 0x800163 <timestamp+0x3>
    1242:	e0 91 14 02 	lds	r30, 0x0214	; 0x800214 <mtable+0x14>
    1246:	f0 91 15 02 	lds	r31, 0x0215	; 0x800215 <mtable+0x15>
    124a:	30 97       	sbiw	r30, 0x00	; 0
    124c:	39 f0       	breq	.+14     	; 0x125c <__vector_15+0xb4>
    124e:	6a e0       	ldi	r22, 0x0A	; 10
    1250:	70 e0       	ldi	r23, 0x00	; 0
    1252:	80 91 7c 01 	lds	r24, 0x017C	; 0x80017c <otable+0x14>
    1256:	90 91 7d 01 	lds	r25, 0x017D	; 0x80017d <otable+0x15>
    125a:	09 95       	icall
    125c:	0e 94 4a 04 	call	0x894	; 0x894 <schedule>
    1260:	ff 91       	pop	r31
    1262:	ef 91       	pop	r30
    1264:	bf 91       	pop	r27
    1266:	af 91       	pop	r26
    1268:	9f 91       	pop	r25
    126a:	8f 91       	pop	r24
    126c:	7f 91       	pop	r23
    126e:	6f 91       	pop	r22
    1270:	5f 91       	pop	r21
    1272:	4f 91       	pop	r20
    1274:	3f 91       	pop	r19
    1276:	2f 91       	pop	r18
    1278:	1f 91       	pop	r17
    127a:	0f 91       	pop	r16
    127c:	0f 90       	pop	r0
    127e:	0f be       	out	0x3f, r0	; 63
    1280:	0f 90       	pop	r0
    1282:	1f 90       	pop	r1
    1284:	18 95       	reti

00001286 <__vector_16>:
    1286:	1f 92       	push	r1
    1288:	0f 92       	push	r0
    128a:	0f b6       	in	r0, 0x3f	; 63
    128c:	0f 92       	push	r0
    128e:	11 24       	eor	r1, r1
    1290:	0f 93       	push	r16
    1292:	1f 93       	push	r17
    1294:	2f 93       	push	r18
    1296:	3f 93       	push	r19
    1298:	4f 93       	push	r20
    129a:	5f 93       	push	r21
    129c:	6f 93       	push	r22
    129e:	7f 93       	push	r23
    12a0:	8f 93       	push	r24
    12a2:	9f 93       	push	r25
    12a4:	af 93       	push	r26
    12a6:	bf 93       	push	r27
    12a8:	ef 93       	push	r30
    12aa:	ff 93       	push	r31
    12ac:	80 91 5e 01 	lds	r24, 0x015E	; 0x80015e <overflows>
    12b0:	90 91 5f 01 	lds	r25, 0x015F	; 0x80015f <overflows+0x1>
    12b4:	ac 01       	movw	r20, r24
    12b6:	09 2e       	mov	r0, r25
    12b8:	00 0c       	add	r0, r0
    12ba:	66 0b       	sbc	r22, r22
    12bc:	77 0b       	sbc	r23, r23
    12be:	9a 01       	movw	r18, r20
    12c0:	11 27       	eor	r17, r17
    12c2:	00 27       	eor	r16, r16
    12c4:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    12c8:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    12cc:	60 e0       	ldi	r22, 0x00	; 0
    12ce:	70 e0       	ldi	r23, 0x00	; 0
    12d0:	40 2b       	or	r20, r16
    12d2:	51 2b       	or	r21, r17
    12d4:	62 2b       	or	r22, r18
    12d6:	73 2b       	or	r23, r19
    12d8:	40 93 60 01 	sts	0x0160, r20	; 0x800160 <timestamp>
    12dc:	50 93 61 01 	sts	0x0161, r21	; 0x800161 <timestamp+0x1>
    12e0:	60 93 62 01 	sts	0x0162, r22	; 0x800162 <timestamp+0x2>
    12e4:	70 93 63 01 	sts	0x0163, r23	; 0x800163 <timestamp+0x3>
    12e8:	b0 9b       	sbis	0x16, 0	; 22
    12ea:	1a c0       	rjmp	.+52     	; 0x1320 <__vector_16+0x9a>
    12ec:	01 96       	adiw	r24, 0x01	; 1
    12ee:	09 2e       	mov	r0, r25
    12f0:	00 0c       	add	r0, r0
    12f2:	aa 0b       	sbc	r26, r26
    12f4:	bb 0b       	sbc	r27, r27
    12f6:	bc 01       	movw	r22, r24
    12f8:	55 27       	eor	r21, r21
    12fa:	44 27       	eor	r20, r20
    12fc:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1300:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1304:	a0 e0       	ldi	r26, 0x00	; 0
    1306:	b0 e0       	ldi	r27, 0x00	; 0
    1308:	84 2b       	or	r24, r20
    130a:	95 2b       	or	r25, r21
    130c:	a6 2b       	or	r26, r22
    130e:	b7 2b       	or	r27, r23
    1310:	80 93 60 01 	sts	0x0160, r24	; 0x800160 <timestamp>
    1314:	90 93 61 01 	sts	0x0161, r25	; 0x800161 <timestamp+0x1>
    1318:	a0 93 62 01 	sts	0x0162, r26	; 0x800162 <timestamp+0x2>
    131c:	b0 93 63 01 	sts	0x0163, r27	; 0x800163 <timestamp+0x3>
    1320:	e0 91 16 02 	lds	r30, 0x0216	; 0x800216 <mtable+0x16>
    1324:	f0 91 17 02 	lds	r31, 0x0217	; 0x800217 <mtable+0x17>
    1328:	30 97       	sbiw	r30, 0x00	; 0
    132a:	39 f0       	breq	.+14     	; 0x133a <__vector_16+0xb4>
    132c:	6b e0       	ldi	r22, 0x0B	; 11
    132e:	70 e0       	ldi	r23, 0x00	; 0
    1330:	80 91 7e 01 	lds	r24, 0x017E	; 0x80017e <otable+0x16>
    1334:	90 91 7f 01 	lds	r25, 0x017F	; 0x80017f <otable+0x17>
    1338:	09 95       	icall
    133a:	0e 94 4a 04 	call	0x894	; 0x894 <schedule>
    133e:	ff 91       	pop	r31
    1340:	ef 91       	pop	r30
    1342:	bf 91       	pop	r27
    1344:	af 91       	pop	r26
    1346:	9f 91       	pop	r25
    1348:	8f 91       	pop	r24
    134a:	7f 91       	pop	r23
    134c:	6f 91       	pop	r22
    134e:	5f 91       	pop	r21
    1350:	4f 91       	pop	r20
    1352:	3f 91       	pop	r19
    1354:	2f 91       	pop	r18
    1356:	1f 91       	pop	r17
    1358:	0f 91       	pop	r16
    135a:	0f 90       	pop	r0
    135c:	0f be       	out	0x3f, r0	; 63
    135e:	0f 90       	pop	r0
    1360:	1f 90       	pop	r1
    1362:	18 95       	reti

00001364 <__vector_17>:
    1364:	1f 92       	push	r1
    1366:	0f 92       	push	r0
    1368:	0f b6       	in	r0, 0x3f	; 63
    136a:	0f 92       	push	r0
    136c:	11 24       	eor	r1, r1
    136e:	0f 93       	push	r16
    1370:	1f 93       	push	r17
    1372:	2f 93       	push	r18
    1374:	3f 93       	push	r19
    1376:	4f 93       	push	r20
    1378:	5f 93       	push	r21
    137a:	6f 93       	push	r22
    137c:	7f 93       	push	r23
    137e:	8f 93       	push	r24
    1380:	9f 93       	push	r25
    1382:	af 93       	push	r26
    1384:	bf 93       	push	r27
    1386:	ef 93       	push	r30
    1388:	ff 93       	push	r31
    138a:	80 91 5e 01 	lds	r24, 0x015E	; 0x80015e <overflows>
    138e:	90 91 5f 01 	lds	r25, 0x015F	; 0x80015f <overflows+0x1>
    1392:	ac 01       	movw	r20, r24
    1394:	09 2e       	mov	r0, r25
    1396:	00 0c       	add	r0, r0
    1398:	66 0b       	sbc	r22, r22
    139a:	77 0b       	sbc	r23, r23
    139c:	9a 01       	movw	r18, r20
    139e:	11 27       	eor	r17, r17
    13a0:	00 27       	eor	r16, r16
    13a2:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    13a6:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    13aa:	60 e0       	ldi	r22, 0x00	; 0
    13ac:	70 e0       	ldi	r23, 0x00	; 0
    13ae:	40 2b       	or	r20, r16
    13b0:	51 2b       	or	r21, r17
    13b2:	62 2b       	or	r22, r18
    13b4:	73 2b       	or	r23, r19
    13b6:	40 93 60 01 	sts	0x0160, r20	; 0x800160 <timestamp>
    13ba:	50 93 61 01 	sts	0x0161, r21	; 0x800161 <timestamp+0x1>
    13be:	60 93 62 01 	sts	0x0162, r22	; 0x800162 <timestamp+0x2>
    13c2:	70 93 63 01 	sts	0x0163, r23	; 0x800163 <timestamp+0x3>
    13c6:	b0 9b       	sbis	0x16, 0	; 22
    13c8:	1a c0       	rjmp	.+52     	; 0x13fe <__vector_17+0x9a>
    13ca:	01 96       	adiw	r24, 0x01	; 1
    13cc:	09 2e       	mov	r0, r25
    13ce:	00 0c       	add	r0, r0
    13d0:	aa 0b       	sbc	r26, r26
    13d2:	bb 0b       	sbc	r27, r27
    13d4:	bc 01       	movw	r22, r24
    13d6:	55 27       	eor	r21, r21
    13d8:	44 27       	eor	r20, r20
    13da:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    13de:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    13e2:	a0 e0       	ldi	r26, 0x00	; 0
    13e4:	b0 e0       	ldi	r27, 0x00	; 0
    13e6:	84 2b       	or	r24, r20
    13e8:	95 2b       	or	r25, r21
    13ea:	a6 2b       	or	r26, r22
    13ec:	b7 2b       	or	r27, r23
    13ee:	80 93 60 01 	sts	0x0160, r24	; 0x800160 <timestamp>
    13f2:	90 93 61 01 	sts	0x0161, r25	; 0x800161 <timestamp+0x1>
    13f6:	a0 93 62 01 	sts	0x0162, r26	; 0x800162 <timestamp+0x2>
    13fa:	b0 93 63 01 	sts	0x0163, r27	; 0x800163 <timestamp+0x3>
    13fe:	e0 91 18 02 	lds	r30, 0x0218	; 0x800218 <mtable+0x18>
    1402:	f0 91 19 02 	lds	r31, 0x0219	; 0x800219 <mtable+0x19>
    1406:	30 97       	sbiw	r30, 0x00	; 0
    1408:	39 f0       	breq	.+14     	; 0x1418 <__vector_17+0xb4>
    140a:	6c e0       	ldi	r22, 0x0C	; 12
    140c:	70 e0       	ldi	r23, 0x00	; 0
    140e:	80 91 80 01 	lds	r24, 0x0180	; 0x800180 <otable+0x18>
    1412:	90 91 81 01 	lds	r25, 0x0181	; 0x800181 <otable+0x19>
    1416:	09 95       	icall
    1418:	0e 94 4a 04 	call	0x894	; 0x894 <schedule>
    141c:	ff 91       	pop	r31
    141e:	ef 91       	pop	r30
    1420:	bf 91       	pop	r27
    1422:	af 91       	pop	r26
    1424:	9f 91       	pop	r25
    1426:	8f 91       	pop	r24
    1428:	7f 91       	pop	r23
    142a:	6f 91       	pop	r22
    142c:	5f 91       	pop	r21
    142e:	4f 91       	pop	r20
    1430:	3f 91       	pop	r19
    1432:	2f 91       	pop	r18
    1434:	1f 91       	pop	r17
    1436:	0f 91       	pop	r16
    1438:	0f 90       	pop	r0
    143a:	0f be       	out	0x3f, r0	; 63
    143c:	0f 90       	pop	r0
    143e:	1f 90       	pop	r1
    1440:	18 95       	reti

00001442 <__vector_18>:
    1442:	1f 92       	push	r1
    1444:	0f 92       	push	r0
    1446:	0f b6       	in	r0, 0x3f	; 63
    1448:	0f 92       	push	r0
    144a:	11 24       	eor	r1, r1
    144c:	0f 93       	push	r16
    144e:	1f 93       	push	r17
    1450:	2f 93       	push	r18
    1452:	3f 93       	push	r19
    1454:	4f 93       	push	r20
    1456:	5f 93       	push	r21
    1458:	6f 93       	push	r22
    145a:	7f 93       	push	r23
    145c:	8f 93       	push	r24
    145e:	9f 93       	push	r25
    1460:	af 93       	push	r26
    1462:	bf 93       	push	r27
    1464:	ef 93       	push	r30
    1466:	ff 93       	push	r31
    1468:	80 91 5e 01 	lds	r24, 0x015E	; 0x80015e <overflows>
    146c:	90 91 5f 01 	lds	r25, 0x015F	; 0x80015f <overflows+0x1>
    1470:	ac 01       	movw	r20, r24
    1472:	09 2e       	mov	r0, r25
    1474:	00 0c       	add	r0, r0
    1476:	66 0b       	sbc	r22, r22
    1478:	77 0b       	sbc	r23, r23
    147a:	9a 01       	movw	r18, r20
    147c:	11 27       	eor	r17, r17
    147e:	00 27       	eor	r16, r16
    1480:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1484:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1488:	60 e0       	ldi	r22, 0x00	; 0
    148a:	70 e0       	ldi	r23, 0x00	; 0
    148c:	40 2b       	or	r20, r16
    148e:	51 2b       	or	r21, r17
    1490:	62 2b       	or	r22, r18
    1492:	73 2b       	or	r23, r19
    1494:	40 93 60 01 	sts	0x0160, r20	; 0x800160 <timestamp>
    1498:	50 93 61 01 	sts	0x0161, r21	; 0x800161 <timestamp+0x1>
    149c:	60 93 62 01 	sts	0x0162, r22	; 0x800162 <timestamp+0x2>
    14a0:	70 93 63 01 	sts	0x0163, r23	; 0x800163 <timestamp+0x3>
    14a4:	b0 9b       	sbis	0x16, 0	; 22
    14a6:	1a c0       	rjmp	.+52     	; 0x14dc <__vector_18+0x9a>
    14a8:	01 96       	adiw	r24, 0x01	; 1
    14aa:	09 2e       	mov	r0, r25
    14ac:	00 0c       	add	r0, r0
    14ae:	aa 0b       	sbc	r26, r26
    14b0:	bb 0b       	sbc	r27, r27
    14b2:	bc 01       	movw	r22, r24
    14b4:	55 27       	eor	r21, r21
    14b6:	44 27       	eor	r20, r20
    14b8:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    14bc:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    14c0:	a0 e0       	ldi	r26, 0x00	; 0
    14c2:	b0 e0       	ldi	r27, 0x00	; 0
    14c4:	84 2b       	or	r24, r20
    14c6:	95 2b       	or	r25, r21
    14c8:	a6 2b       	or	r26, r22
    14ca:	b7 2b       	or	r27, r23
    14cc:	80 93 60 01 	sts	0x0160, r24	; 0x800160 <timestamp>
    14d0:	90 93 61 01 	sts	0x0161, r25	; 0x800161 <timestamp+0x1>
    14d4:	a0 93 62 01 	sts	0x0162, r26	; 0x800162 <timestamp+0x2>
    14d8:	b0 93 63 01 	sts	0x0163, r27	; 0x800163 <timestamp+0x3>
    14dc:	e0 91 1a 02 	lds	r30, 0x021A	; 0x80021a <mtable+0x1a>
    14e0:	f0 91 1b 02 	lds	r31, 0x021B	; 0x80021b <mtable+0x1b>
    14e4:	30 97       	sbiw	r30, 0x00	; 0
    14e6:	39 f0       	breq	.+14     	; 0x14f6 <__vector_18+0xb4>
    14e8:	6d e0       	ldi	r22, 0x0D	; 13
    14ea:	70 e0       	ldi	r23, 0x00	; 0
    14ec:	80 91 82 01 	lds	r24, 0x0182	; 0x800182 <otable+0x1a>
    14f0:	90 91 83 01 	lds	r25, 0x0183	; 0x800183 <otable+0x1b>
    14f4:	09 95       	icall
    14f6:	0e 94 4a 04 	call	0x894	; 0x894 <schedule>
    14fa:	ff 91       	pop	r31
    14fc:	ef 91       	pop	r30
    14fe:	bf 91       	pop	r27
    1500:	af 91       	pop	r26
    1502:	9f 91       	pop	r25
    1504:	8f 91       	pop	r24
    1506:	7f 91       	pop	r23
    1508:	6f 91       	pop	r22
    150a:	5f 91       	pop	r21
    150c:	4f 91       	pop	r20
    150e:	3f 91       	pop	r19
    1510:	2f 91       	pop	r18
    1512:	1f 91       	pop	r17
    1514:	0f 91       	pop	r16
    1516:	0f 90       	pop	r0
    1518:	0f be       	out	0x3f, r0	; 63
    151a:	0f 90       	pop	r0
    151c:	1f 90       	pop	r1
    151e:	18 95       	reti

00001520 <__vector_19>:
    1520:	1f 92       	push	r1
    1522:	0f 92       	push	r0
    1524:	0f b6       	in	r0, 0x3f	; 63
    1526:	0f 92       	push	r0
    1528:	11 24       	eor	r1, r1
    152a:	0f 93       	push	r16
    152c:	1f 93       	push	r17
    152e:	2f 93       	push	r18
    1530:	3f 93       	push	r19
    1532:	4f 93       	push	r20
    1534:	5f 93       	push	r21
    1536:	6f 93       	push	r22
    1538:	7f 93       	push	r23
    153a:	8f 93       	push	r24
    153c:	9f 93       	push	r25
    153e:	af 93       	push	r26
    1540:	bf 93       	push	r27
    1542:	ef 93       	push	r30
    1544:	ff 93       	push	r31
    1546:	80 91 5e 01 	lds	r24, 0x015E	; 0x80015e <overflows>
    154a:	90 91 5f 01 	lds	r25, 0x015F	; 0x80015f <overflows+0x1>
    154e:	ac 01       	movw	r20, r24
    1550:	09 2e       	mov	r0, r25
    1552:	00 0c       	add	r0, r0
    1554:	66 0b       	sbc	r22, r22
    1556:	77 0b       	sbc	r23, r23
    1558:	9a 01       	movw	r18, r20
    155a:	11 27       	eor	r17, r17
    155c:	00 27       	eor	r16, r16
    155e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1562:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1566:	60 e0       	ldi	r22, 0x00	; 0
    1568:	70 e0       	ldi	r23, 0x00	; 0
    156a:	40 2b       	or	r20, r16
    156c:	51 2b       	or	r21, r17
    156e:	62 2b       	or	r22, r18
    1570:	73 2b       	or	r23, r19
    1572:	40 93 60 01 	sts	0x0160, r20	; 0x800160 <timestamp>
    1576:	50 93 61 01 	sts	0x0161, r21	; 0x800161 <timestamp+0x1>
    157a:	60 93 62 01 	sts	0x0162, r22	; 0x800162 <timestamp+0x2>
    157e:	70 93 63 01 	sts	0x0163, r23	; 0x800163 <timestamp+0x3>
    1582:	b0 9b       	sbis	0x16, 0	; 22
    1584:	1a c0       	rjmp	.+52     	; 0x15ba <__vector_19+0x9a>
    1586:	01 96       	adiw	r24, 0x01	; 1
    1588:	09 2e       	mov	r0, r25
    158a:	00 0c       	add	r0, r0
    158c:	aa 0b       	sbc	r26, r26
    158e:	bb 0b       	sbc	r27, r27
    1590:	bc 01       	movw	r22, r24
    1592:	55 27       	eor	r21, r21
    1594:	44 27       	eor	r20, r20
    1596:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    159a:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    159e:	a0 e0       	ldi	r26, 0x00	; 0
    15a0:	b0 e0       	ldi	r27, 0x00	; 0
    15a2:	84 2b       	or	r24, r20
    15a4:	95 2b       	or	r25, r21
    15a6:	a6 2b       	or	r26, r22
    15a8:	b7 2b       	or	r27, r23
    15aa:	80 93 60 01 	sts	0x0160, r24	; 0x800160 <timestamp>
    15ae:	90 93 61 01 	sts	0x0161, r25	; 0x800161 <timestamp+0x1>
    15b2:	a0 93 62 01 	sts	0x0162, r26	; 0x800162 <timestamp+0x2>
    15b6:	b0 93 63 01 	sts	0x0163, r27	; 0x800163 <timestamp+0x3>
    15ba:	e0 91 1c 02 	lds	r30, 0x021C	; 0x80021c <mtable+0x1c>
    15be:	f0 91 1d 02 	lds	r31, 0x021D	; 0x80021d <mtable+0x1d>
    15c2:	30 97       	sbiw	r30, 0x00	; 0
    15c4:	39 f0       	breq	.+14     	; 0x15d4 <__vector_19+0xb4>
    15c6:	6e e0       	ldi	r22, 0x0E	; 14
    15c8:	70 e0       	ldi	r23, 0x00	; 0
    15ca:	80 91 84 01 	lds	r24, 0x0184	; 0x800184 <otable+0x1c>
    15ce:	90 91 85 01 	lds	r25, 0x0185	; 0x800185 <otable+0x1d>
    15d2:	09 95       	icall
    15d4:	0e 94 4a 04 	call	0x894	; 0x894 <schedule>
    15d8:	ff 91       	pop	r31
    15da:	ef 91       	pop	r30
    15dc:	bf 91       	pop	r27
    15de:	af 91       	pop	r26
    15e0:	9f 91       	pop	r25
    15e2:	8f 91       	pop	r24
    15e4:	7f 91       	pop	r23
    15e6:	6f 91       	pop	r22
    15e8:	5f 91       	pop	r21
    15ea:	4f 91       	pop	r20
    15ec:	3f 91       	pop	r19
    15ee:	2f 91       	pop	r18
    15f0:	1f 91       	pop	r17
    15f2:	0f 91       	pop	r16
    15f4:	0f 90       	pop	r0
    15f6:	0f be       	out	0x3f, r0	; 63
    15f8:	0f 90       	pop	r0
    15fa:	1f 90       	pop	r1
    15fc:	18 95       	reti

000015fe <__vector_20>:
    15fe:	1f 92       	push	r1
    1600:	0f 92       	push	r0
    1602:	0f b6       	in	r0, 0x3f	; 63
    1604:	0f 92       	push	r0
    1606:	11 24       	eor	r1, r1
    1608:	0f 93       	push	r16
    160a:	1f 93       	push	r17
    160c:	2f 93       	push	r18
    160e:	3f 93       	push	r19
    1610:	4f 93       	push	r20
    1612:	5f 93       	push	r21
    1614:	6f 93       	push	r22
    1616:	7f 93       	push	r23
    1618:	8f 93       	push	r24
    161a:	9f 93       	push	r25
    161c:	af 93       	push	r26
    161e:	bf 93       	push	r27
    1620:	ef 93       	push	r30
    1622:	ff 93       	push	r31
    1624:	80 91 5e 01 	lds	r24, 0x015E	; 0x80015e <overflows>
    1628:	90 91 5f 01 	lds	r25, 0x015F	; 0x80015f <overflows+0x1>
    162c:	ac 01       	movw	r20, r24
    162e:	09 2e       	mov	r0, r25
    1630:	00 0c       	add	r0, r0
    1632:	66 0b       	sbc	r22, r22
    1634:	77 0b       	sbc	r23, r23
    1636:	9a 01       	movw	r18, r20
    1638:	11 27       	eor	r17, r17
    163a:	00 27       	eor	r16, r16
    163c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1640:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1644:	60 e0       	ldi	r22, 0x00	; 0
    1646:	70 e0       	ldi	r23, 0x00	; 0
    1648:	40 2b       	or	r20, r16
    164a:	51 2b       	or	r21, r17
    164c:	62 2b       	or	r22, r18
    164e:	73 2b       	or	r23, r19
    1650:	40 93 60 01 	sts	0x0160, r20	; 0x800160 <timestamp>
    1654:	50 93 61 01 	sts	0x0161, r21	; 0x800161 <timestamp+0x1>
    1658:	60 93 62 01 	sts	0x0162, r22	; 0x800162 <timestamp+0x2>
    165c:	70 93 63 01 	sts	0x0163, r23	; 0x800163 <timestamp+0x3>
    1660:	b0 9b       	sbis	0x16, 0	; 22
    1662:	1a c0       	rjmp	.+52     	; 0x1698 <__vector_20+0x9a>
    1664:	01 96       	adiw	r24, 0x01	; 1
    1666:	09 2e       	mov	r0, r25
    1668:	00 0c       	add	r0, r0
    166a:	aa 0b       	sbc	r26, r26
    166c:	bb 0b       	sbc	r27, r27
    166e:	bc 01       	movw	r22, r24
    1670:	55 27       	eor	r21, r21
    1672:	44 27       	eor	r20, r20
    1674:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1678:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    167c:	a0 e0       	ldi	r26, 0x00	; 0
    167e:	b0 e0       	ldi	r27, 0x00	; 0
    1680:	84 2b       	or	r24, r20
    1682:	95 2b       	or	r25, r21
    1684:	a6 2b       	or	r26, r22
    1686:	b7 2b       	or	r27, r23
    1688:	80 93 60 01 	sts	0x0160, r24	; 0x800160 <timestamp>
    168c:	90 93 61 01 	sts	0x0161, r25	; 0x800161 <timestamp+0x1>
    1690:	a0 93 62 01 	sts	0x0162, r26	; 0x800162 <timestamp+0x2>
    1694:	b0 93 63 01 	sts	0x0163, r27	; 0x800163 <timestamp+0x3>
    1698:	e0 91 1e 02 	lds	r30, 0x021E	; 0x80021e <mtable+0x1e>
    169c:	f0 91 1f 02 	lds	r31, 0x021F	; 0x80021f <mtable+0x1f>
    16a0:	30 97       	sbiw	r30, 0x00	; 0
    16a2:	39 f0       	breq	.+14     	; 0x16b2 <__vector_20+0xb4>
    16a4:	6f e0       	ldi	r22, 0x0F	; 15
    16a6:	70 e0       	ldi	r23, 0x00	; 0
    16a8:	80 91 86 01 	lds	r24, 0x0186	; 0x800186 <otable+0x1e>
    16ac:	90 91 87 01 	lds	r25, 0x0187	; 0x800187 <otable+0x1f>
    16b0:	09 95       	icall
    16b2:	0e 94 4a 04 	call	0x894	; 0x894 <schedule>
    16b6:	ff 91       	pop	r31
    16b8:	ef 91       	pop	r30
    16ba:	bf 91       	pop	r27
    16bc:	af 91       	pop	r26
    16be:	9f 91       	pop	r25
    16c0:	8f 91       	pop	r24
    16c2:	7f 91       	pop	r23
    16c4:	6f 91       	pop	r22
    16c6:	5f 91       	pop	r21
    16c8:	4f 91       	pop	r20
    16ca:	3f 91       	pop	r19
    16cc:	2f 91       	pop	r18
    16ce:	1f 91       	pop	r17
    16d0:	0f 91       	pop	r16
    16d2:	0f 90       	pop	r0
    16d4:	0f be       	out	0x3f, r0	; 63
    16d6:	0f 90       	pop	r0
    16d8:	1f 90       	pop	r1
    16da:	18 95       	reti

000016dc <__vector_21>:
    16dc:	1f 92       	push	r1
    16de:	0f 92       	push	r0
    16e0:	0f b6       	in	r0, 0x3f	; 63
    16e2:	0f 92       	push	r0
    16e4:	11 24       	eor	r1, r1
    16e6:	0f 93       	push	r16
    16e8:	1f 93       	push	r17
    16ea:	2f 93       	push	r18
    16ec:	3f 93       	push	r19
    16ee:	4f 93       	push	r20
    16f0:	5f 93       	push	r21
    16f2:	6f 93       	push	r22
    16f4:	7f 93       	push	r23
    16f6:	8f 93       	push	r24
    16f8:	9f 93       	push	r25
    16fa:	af 93       	push	r26
    16fc:	bf 93       	push	r27
    16fe:	ef 93       	push	r30
    1700:	ff 93       	push	r31
    1702:	80 91 5e 01 	lds	r24, 0x015E	; 0x80015e <overflows>
    1706:	90 91 5f 01 	lds	r25, 0x015F	; 0x80015f <overflows+0x1>
    170a:	ac 01       	movw	r20, r24
    170c:	09 2e       	mov	r0, r25
    170e:	00 0c       	add	r0, r0
    1710:	66 0b       	sbc	r22, r22
    1712:	77 0b       	sbc	r23, r23
    1714:	9a 01       	movw	r18, r20
    1716:	11 27       	eor	r17, r17
    1718:	00 27       	eor	r16, r16
    171a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    171e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1722:	60 e0       	ldi	r22, 0x00	; 0
    1724:	70 e0       	ldi	r23, 0x00	; 0
    1726:	40 2b       	or	r20, r16
    1728:	51 2b       	or	r21, r17
    172a:	62 2b       	or	r22, r18
    172c:	73 2b       	or	r23, r19
    172e:	40 93 60 01 	sts	0x0160, r20	; 0x800160 <timestamp>
    1732:	50 93 61 01 	sts	0x0161, r21	; 0x800161 <timestamp+0x1>
    1736:	60 93 62 01 	sts	0x0162, r22	; 0x800162 <timestamp+0x2>
    173a:	70 93 63 01 	sts	0x0163, r23	; 0x800163 <timestamp+0x3>
    173e:	b0 9b       	sbis	0x16, 0	; 22
    1740:	1a c0       	rjmp	.+52     	; 0x1776 <__vector_21+0x9a>
    1742:	01 96       	adiw	r24, 0x01	; 1
    1744:	09 2e       	mov	r0, r25
    1746:	00 0c       	add	r0, r0
    1748:	aa 0b       	sbc	r26, r26
    174a:	bb 0b       	sbc	r27, r27
    174c:	bc 01       	movw	r22, r24
    174e:	55 27       	eor	r21, r21
    1750:	44 27       	eor	r20, r20
    1752:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1756:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    175a:	a0 e0       	ldi	r26, 0x00	; 0
    175c:	b0 e0       	ldi	r27, 0x00	; 0
    175e:	84 2b       	or	r24, r20
    1760:	95 2b       	or	r25, r21
    1762:	a6 2b       	or	r26, r22
    1764:	b7 2b       	or	r27, r23
    1766:	80 93 60 01 	sts	0x0160, r24	; 0x800160 <timestamp>
    176a:	90 93 61 01 	sts	0x0161, r25	; 0x800161 <timestamp+0x1>
    176e:	a0 93 62 01 	sts	0x0162, r26	; 0x800162 <timestamp+0x2>
    1772:	b0 93 63 01 	sts	0x0163, r27	; 0x800163 <timestamp+0x3>
    1776:	e0 91 20 02 	lds	r30, 0x0220	; 0x800220 <mtable+0x20>
    177a:	f0 91 21 02 	lds	r31, 0x0221	; 0x800221 <mtable+0x21>
    177e:	30 97       	sbiw	r30, 0x00	; 0
    1780:	39 f0       	breq	.+14     	; 0x1790 <__vector_21+0xb4>
    1782:	60 e1       	ldi	r22, 0x10	; 16
    1784:	70 e0       	ldi	r23, 0x00	; 0
    1786:	80 91 88 01 	lds	r24, 0x0188	; 0x800188 <otable+0x20>
    178a:	90 91 89 01 	lds	r25, 0x0189	; 0x800189 <otable+0x21>
    178e:	09 95       	icall
    1790:	0e 94 4a 04 	call	0x894	; 0x894 <schedule>
    1794:	ff 91       	pop	r31
    1796:	ef 91       	pop	r30
    1798:	bf 91       	pop	r27
    179a:	af 91       	pop	r26
    179c:	9f 91       	pop	r25
    179e:	8f 91       	pop	r24
    17a0:	7f 91       	pop	r23
    17a2:	6f 91       	pop	r22
    17a4:	5f 91       	pop	r21
    17a6:	4f 91       	pop	r20
    17a8:	3f 91       	pop	r19
    17aa:	2f 91       	pop	r18
    17ac:	1f 91       	pop	r17
    17ae:	0f 91       	pop	r16
    17b0:	0f 90       	pop	r0
    17b2:	0f be       	out	0x3f, r0	; 63
    17b4:	0f 90       	pop	r0
    17b6:	1f 90       	pop	r1
    17b8:	18 95       	reti

000017ba <__vector_22>:
    17ba:	1f 92       	push	r1
    17bc:	0f 92       	push	r0
    17be:	0f b6       	in	r0, 0x3f	; 63
    17c0:	0f 92       	push	r0
    17c2:	11 24       	eor	r1, r1
    17c4:	0f 93       	push	r16
    17c6:	1f 93       	push	r17
    17c8:	2f 93       	push	r18
    17ca:	3f 93       	push	r19
    17cc:	4f 93       	push	r20
    17ce:	5f 93       	push	r21
    17d0:	6f 93       	push	r22
    17d2:	7f 93       	push	r23
    17d4:	8f 93       	push	r24
    17d6:	9f 93       	push	r25
    17d8:	af 93       	push	r26
    17da:	bf 93       	push	r27
    17dc:	ef 93       	push	r30
    17de:	ff 93       	push	r31
    17e0:	80 91 5e 01 	lds	r24, 0x015E	; 0x80015e <overflows>
    17e4:	90 91 5f 01 	lds	r25, 0x015F	; 0x80015f <overflows+0x1>
    17e8:	ac 01       	movw	r20, r24
    17ea:	09 2e       	mov	r0, r25
    17ec:	00 0c       	add	r0, r0
    17ee:	66 0b       	sbc	r22, r22
    17f0:	77 0b       	sbc	r23, r23
    17f2:	9a 01       	movw	r18, r20
    17f4:	11 27       	eor	r17, r17
    17f6:	00 27       	eor	r16, r16
    17f8:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    17fc:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1800:	60 e0       	ldi	r22, 0x00	; 0
    1802:	70 e0       	ldi	r23, 0x00	; 0
    1804:	40 2b       	or	r20, r16
    1806:	51 2b       	or	r21, r17
    1808:	62 2b       	or	r22, r18
    180a:	73 2b       	or	r23, r19
    180c:	40 93 60 01 	sts	0x0160, r20	; 0x800160 <timestamp>
    1810:	50 93 61 01 	sts	0x0161, r21	; 0x800161 <timestamp+0x1>
    1814:	60 93 62 01 	sts	0x0162, r22	; 0x800162 <timestamp+0x2>
    1818:	70 93 63 01 	sts	0x0163, r23	; 0x800163 <timestamp+0x3>
    181c:	b0 9b       	sbis	0x16, 0	; 22
    181e:	1a c0       	rjmp	.+52     	; 0x1854 <__vector_22+0x9a>
    1820:	01 96       	adiw	r24, 0x01	; 1
    1822:	09 2e       	mov	r0, r25
    1824:	00 0c       	add	r0, r0
    1826:	aa 0b       	sbc	r26, r26
    1828:	bb 0b       	sbc	r27, r27
    182a:	bc 01       	movw	r22, r24
    182c:	55 27       	eor	r21, r21
    182e:	44 27       	eor	r20, r20
    1830:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1834:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1838:	a0 e0       	ldi	r26, 0x00	; 0
    183a:	b0 e0       	ldi	r27, 0x00	; 0
    183c:	84 2b       	or	r24, r20
    183e:	95 2b       	or	r25, r21
    1840:	a6 2b       	or	r26, r22
    1842:	b7 2b       	or	r27, r23
    1844:	80 93 60 01 	sts	0x0160, r24	; 0x800160 <timestamp>
    1848:	90 93 61 01 	sts	0x0161, r25	; 0x800161 <timestamp+0x1>
    184c:	a0 93 62 01 	sts	0x0162, r26	; 0x800162 <timestamp+0x2>
    1850:	b0 93 63 01 	sts	0x0163, r27	; 0x800163 <timestamp+0x3>
    1854:	e0 91 22 02 	lds	r30, 0x0222	; 0x800222 <mtable+0x22>
    1858:	f0 91 23 02 	lds	r31, 0x0223	; 0x800223 <mtable+0x23>
    185c:	30 97       	sbiw	r30, 0x00	; 0
    185e:	39 f0       	breq	.+14     	; 0x186e <__vector_22+0xb4>
    1860:	61 e1       	ldi	r22, 0x11	; 17
    1862:	70 e0       	ldi	r23, 0x00	; 0
    1864:	80 91 8a 01 	lds	r24, 0x018A	; 0x80018a <otable+0x22>
    1868:	90 91 8b 01 	lds	r25, 0x018B	; 0x80018b <otable+0x23>
    186c:	09 95       	icall
    186e:	0e 94 4a 04 	call	0x894	; 0x894 <schedule>
    1872:	ff 91       	pop	r31
    1874:	ef 91       	pop	r30
    1876:	bf 91       	pop	r27
    1878:	af 91       	pop	r26
    187a:	9f 91       	pop	r25
    187c:	8f 91       	pop	r24
    187e:	7f 91       	pop	r23
    1880:	6f 91       	pop	r22
    1882:	5f 91       	pop	r21
    1884:	4f 91       	pop	r20
    1886:	3f 91       	pop	r19
    1888:	2f 91       	pop	r18
    188a:	1f 91       	pop	r17
    188c:	0f 91       	pop	r16
    188e:	0f 90       	pop	r0
    1890:	0f be       	out	0x3f, r0	; 63
    1892:	0f 90       	pop	r0
    1894:	1f 90       	pop	r1
    1896:	18 95       	reti

00001898 <idle>:
    1898:	0e 94 4a 04 	call	0x894	; 0x894 <schedule>
    189c:	78 94       	sei
    189e:	81 e0       	ldi	r24, 0x01	; 1
    18a0:	83 bf       	out	0x33, r24	; 51
    18a2:	88 95       	sleep
    18a4:	fc cf       	rjmp	.-8      	; 0x189e <idle+0x6>

000018a6 <__vector_9>:
    18a6:	1f 92       	push	r1
    18a8:	0f 92       	push	r0
    18aa:	0f b6       	in	r0, 0x3f	; 63
    18ac:	0f 92       	push	r0
    18ae:	11 24       	eor	r1, r1
    18b0:	2f 93       	push	r18
    18b2:	3f 93       	push	r19
    18b4:	4f 93       	push	r20
    18b6:	5f 93       	push	r21
    18b8:	6f 93       	push	r22
    18ba:	7f 93       	push	r23
    18bc:	8f 93       	push	r24
    18be:	9f 93       	push	r25
    18c0:	ef 93       	push	r30
    18c2:	ff 93       	push	r31
    18c4:	80 91 5e 01 	lds	r24, 0x015E	; 0x80015e <overflows>
    18c8:	90 91 5f 01 	lds	r25, 0x015F	; 0x80015f <overflows+0x1>
    18cc:	01 96       	adiw	r24, 0x01	; 1
    18ce:	90 93 5f 01 	sts	0x015F, r25	; 0x80015f <overflows+0x1>
    18d2:	80 93 5e 01 	sts	0x015E, r24	; 0x80015e <overflows>
    18d6:	e0 91 64 01 	lds	r30, 0x0164	; 0x800164 <timerQ>
    18da:	f0 91 65 01 	lds	r31, 0x0165	; 0x800165 <timerQ+0x1>
    18de:	30 97       	sbiw	r30, 0x00	; 0
    18e0:	01 f1       	breq	.+64     	; 0x1922 <__vector_9+0x7c>
    18e2:	42 81       	ldd	r20, Z+2	; 0x02
    18e4:	53 81       	ldd	r21, Z+3	; 0x03
    18e6:	64 81       	ldd	r22, Z+4	; 0x04
    18e8:	75 81       	ldd	r23, Z+5	; 0x05
    18ea:	86 17       	cp	r24, r22
    18ec:	97 07       	cpc	r25, r23
    18ee:	c9 f4       	brne	.+50     	; 0x1922 <__vector_9+0x7c>
    18f0:	ca 01       	movw	r24, r20
    18f2:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    18f6:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    18fa:	42 1b       	sub	r20, r18
    18fc:	53 0b       	sbc	r21, r19
    18fe:	41 30       	cpi	r20, 0x01	; 1
    1900:	51 05       	cpc	r21, r1
    1902:	29 f4       	brne	.+10     	; 0x190e <__vector_9+0x68>
    1904:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1908:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    190c:	01 96       	adiw	r24, 0x01	; 1
    190e:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    1912:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    1916:	ef e6       	ldi	r30, 0x6F	; 111
    1918:	f0 e0       	ldi	r31, 0x00	; 0
    191a:	80 81       	ld	r24, Z
    191c:	82 60       	ori	r24, 0x02	; 2
    191e:	80 83       	st	Z, r24
    1920:	05 c0       	rjmp	.+10     	; 0x192c <__vector_9+0x86>
    1922:	ef e6       	ldi	r30, 0x6F	; 111
    1924:	f0 e0       	ldi	r31, 0x00	; 0
    1926:	80 81       	ld	r24, Z
    1928:	8d 7f       	andi	r24, 0xFD	; 253
    192a:	80 83       	st	Z, r24
    192c:	ff 91       	pop	r31
    192e:	ef 91       	pop	r30
    1930:	9f 91       	pop	r25
    1932:	8f 91       	pop	r24
    1934:	7f 91       	pop	r23
    1936:	6f 91       	pop	r22
    1938:	5f 91       	pop	r21
    193a:	4f 91       	pop	r20
    193c:	3f 91       	pop	r19
    193e:	2f 91       	pop	r18
    1940:	0f 90       	pop	r0
    1942:	0f be       	out	0x3f, r0	; 63
    1944:	0f 90       	pop	r0
    1946:	1f 90       	pop	r1
    1948:	18 95       	reti

0000194a <__vector_7>:
    194a:	1f 92       	push	r1
    194c:	0f 92       	push	r0
    194e:	0f b6       	in	r0, 0x3f	; 63
    1950:	0f 92       	push	r0
    1952:	11 24       	eor	r1, r1
    1954:	cf 92       	push	r12
    1956:	df 92       	push	r13
    1958:	ef 92       	push	r14
    195a:	ff 92       	push	r15
    195c:	2f 93       	push	r18
    195e:	3f 93       	push	r19
    1960:	4f 93       	push	r20
    1962:	5f 93       	push	r21
    1964:	6f 93       	push	r22
    1966:	7f 93       	push	r23
    1968:	8f 93       	push	r24
    196a:	9f 93       	push	r25
    196c:	af 93       	push	r26
    196e:	bf 93       	push	r27
    1970:	ef 93       	push	r30
    1972:	ff 93       	push	r31
    1974:	80 91 5e 01 	lds	r24, 0x015E	; 0x80015e <overflows>
    1978:	90 91 5f 01 	lds	r25, 0x015F	; 0x80015f <overflows+0x1>
    197c:	6c 01       	movw	r12, r24
    197e:	09 2e       	mov	r0, r25
    1980:	00 0c       	add	r0, r0
    1982:	ee 08       	sbc	r14, r14
    1984:	ff 08       	sbc	r15, r15
    1986:	76 01       	movw	r14, r12
    1988:	dd 24       	eor	r13, r13
    198a:	cc 24       	eor	r12, r12
    198c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1990:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1994:	60 e0       	ldi	r22, 0x00	; 0
    1996:	70 e0       	ldi	r23, 0x00	; 0
    1998:	c4 2a       	or	r12, r20
    199a:	d5 2a       	or	r13, r21
    199c:	e6 2a       	or	r14, r22
    199e:	f7 2a       	or	r15, r23
    19a0:	b0 9b       	sbis	0x16, 0	; 22
    19a2:	1e c0       	rjmp	.+60     	; 0x19e0 <__vector_7+0x96>
    19a4:	6c 01       	movw	r12, r24
    19a6:	2f ef       	ldi	r18, 0xFF	; 255
    19a8:	c2 1a       	sub	r12, r18
    19aa:	d2 0a       	sbc	r13, r18
    19ac:	0d 2c       	mov	r0, r13
    19ae:	00 0c       	add	r0, r0
    19b0:	ee 08       	sbc	r14, r14
    19b2:	ff 08       	sbc	r15, r15
    19b4:	d6 01       	movw	r26, r12
    19b6:	99 27       	eor	r25, r25
    19b8:	88 27       	eor	r24, r24
    19ba:	c0 90 84 00 	lds	r12, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    19be:	d0 90 85 00 	lds	r13, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    19c2:	e1 2c       	mov	r14, r1
    19c4:	f1 2c       	mov	r15, r1
    19c6:	c8 2a       	or	r12, r24
    19c8:	d9 2a       	or	r13, r25
    19ca:	ea 2a       	or	r14, r26
    19cc:	fb 2a       	or	r15, r27
    19ce:	08 c0       	rjmp	.+16     	; 0x19e0 <__vector_7+0x96>
    19d0:	84 e6       	ldi	r24, 0x64	; 100
    19d2:	91 e0       	ldi	r25, 0x01	; 1
    19d4:	0e 94 15 04 	call	0x82a	; 0x82a <dequeue>
    19d8:	66 e6       	ldi	r22, 0x66	; 102
    19da:	71 e0       	ldi	r23, 0x01	; 1
    19dc:	0e 94 b3 03 	call	0x766	; 0x766 <enqueueByDeadline>
    19e0:	e0 91 64 01 	lds	r30, 0x0164	; 0x800164 <timerQ>
    19e4:	f0 91 65 01 	lds	r31, 0x0165	; 0x800165 <timerQ+0x1>
    19e8:	30 97       	sbiw	r30, 0x00	; 0
    19ea:	69 f0       	breq	.+26     	; 0x1a06 <__vector_7+0xbc>
    19ec:	82 81       	ldd	r24, Z+2	; 0x02
    19ee:	93 81       	ldd	r25, Z+3	; 0x03
    19f0:	a4 81       	ldd	r26, Z+4	; 0x04
    19f2:	b5 81       	ldd	r27, Z+5	; 0x05
    19f4:	8c 19       	sub	r24, r12
    19f6:	9d 09       	sbc	r25, r13
    19f8:	ae 09       	sbc	r26, r14
    19fa:	bf 09       	sbc	r27, r15
    19fc:	18 16       	cp	r1, r24
    19fe:	19 06       	cpc	r1, r25
    1a00:	1a 06       	cpc	r1, r26
    1a02:	1b 06       	cpc	r1, r27
    1a04:	2c f7       	brge	.-54     	; 0x19d0 <__vector_7+0x86>
    1a06:	30 97       	sbiw	r30, 0x00	; 0
    1a08:	21 f1       	breq	.+72     	; 0x1a52 <__vector_7+0x108>
    1a0a:	82 81       	ldd	r24, Z+2	; 0x02
    1a0c:	93 81       	ldd	r25, Z+3	; 0x03
    1a0e:	a4 81       	ldd	r26, Z+4	; 0x04
    1a10:	b5 81       	ldd	r27, Z+5	; 0x05
    1a12:	20 91 5e 01 	lds	r18, 0x015E	; 0x80015e <overflows>
    1a16:	30 91 5f 01 	lds	r19, 0x015F	; 0x80015f <overflows+0x1>
    1a1a:	2a 17       	cp	r18, r26
    1a1c:	3b 07       	cpc	r19, r27
    1a1e:	c9 f4       	brne	.+50     	; 0x1a52 <__vector_7+0x108>
    1a20:	9c 01       	movw	r18, r24
    1a22:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1a26:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1a2a:	84 1b       	sub	r24, r20
    1a2c:	95 0b       	sbc	r25, r21
    1a2e:	01 97       	sbiw	r24, 0x01	; 1
    1a30:	31 f4       	brne	.+12     	; 0x1a3e <__vector_7+0xf4>
    1a32:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1a36:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1a3a:	2f 5f       	subi	r18, 0xFF	; 255
    1a3c:	3f 4f       	sbci	r19, 0xFF	; 255
    1a3e:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    1a42:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    1a46:	ef e6       	ldi	r30, 0x6F	; 111
    1a48:	f0 e0       	ldi	r31, 0x00	; 0
    1a4a:	80 81       	ld	r24, Z
    1a4c:	82 60       	ori	r24, 0x02	; 2
    1a4e:	80 83       	st	Z, r24
    1a50:	05 c0       	rjmp	.+10     	; 0x1a5c <__vector_7+0x112>
    1a52:	ef e6       	ldi	r30, 0x6F	; 111
    1a54:	f0 e0       	ldi	r31, 0x00	; 0
    1a56:	80 81       	ld	r24, Z
    1a58:	8d 7f       	andi	r24, 0xFD	; 253
    1a5a:	80 83       	st	Z, r24
    1a5c:	0e 94 4a 04 	call	0x894	; 0x894 <schedule>
    1a60:	ff 91       	pop	r31
    1a62:	ef 91       	pop	r30
    1a64:	bf 91       	pop	r27
    1a66:	af 91       	pop	r26
    1a68:	9f 91       	pop	r25
    1a6a:	8f 91       	pop	r24
    1a6c:	7f 91       	pop	r23
    1a6e:	6f 91       	pop	r22
    1a70:	5f 91       	pop	r21
    1a72:	4f 91       	pop	r20
    1a74:	3f 91       	pop	r19
    1a76:	2f 91       	pop	r18
    1a78:	ff 90       	pop	r15
    1a7a:	ef 90       	pop	r14
    1a7c:	df 90       	pop	r13
    1a7e:	cf 90       	pop	r12
    1a80:	0f 90       	pop	r0
    1a82:	0f be       	out	0x3f, r0	; 63
    1a84:	0f 90       	pop	r0
    1a86:	1f 90       	pop	r1
    1a88:	18 95       	reti

00001a8a <async>:
    1a8a:	3f 92       	push	r3
    1a8c:	4f 92       	push	r4
    1a8e:	5f 92       	push	r5
    1a90:	6f 92       	push	r6
    1a92:	7f 92       	push	r7
    1a94:	8f 92       	push	r8
    1a96:	9f 92       	push	r9
    1a98:	af 92       	push	r10
    1a9a:	bf 92       	push	r11
    1a9c:	cf 92       	push	r12
    1a9e:	df 92       	push	r13
    1aa0:	ef 92       	push	r14
    1aa2:	ff 92       	push	r15
    1aa4:	0f 93       	push	r16
    1aa6:	1f 93       	push	r17
    1aa8:	cf 93       	push	r28
    1aaa:	df 93       	push	r29
    1aac:	2b 01       	movw	r4, r22
    1aae:	3c 01       	movw	r6, r24
    1ab0:	49 01       	movw	r8, r18
    1ab2:	5a 01       	movw	r10, r20
    1ab4:	8f b7       	in	r24, 0x3f	; 63
    1ab6:	80 78       	andi	r24, 0x80	; 128
    1ab8:	38 2e       	mov	r3, r24
    1aba:	f8 94       	cli
    1abc:	88 e5       	ldi	r24, 0x58	; 88
    1abe:	91 e0       	ldi	r25, 0x01	; 1
    1ac0:	0e 94 15 04 	call	0x82a	; 0x82a <dequeue>
    1ac4:	ec 01       	movw	r28, r24
    1ac6:	1b 87       	std	Y+11, r17	; 0x0b
    1ac8:	0a 87       	std	Y+10, r16	; 0x0a
    1aca:	fd 86       	std	Y+13, r15	; 0x0d
    1acc:	ec 86       	std	Y+12, r14	; 0x0c
    1ace:	df 86       	std	Y+15, r13	; 0x0f
    1ad0:	ce 86       	std	Y+14, r12	; 0x0e
    1ad2:	33 20       	and	r3, r3
    1ad4:	61 f0       	breq	.+24     	; 0x1aee <async+0x64>
    1ad6:	e0 91 52 01 	lds	r30, 0x0152	; 0x800152 <current>
    1ada:	f0 91 53 01 	lds	r31, 0x0153	; 0x800153 <current+0x1>
    1ade:	02 80       	ldd	r0, Z+2	; 0x02
    1ae0:	f3 81       	ldd	r31, Z+3	; 0x03
    1ae2:	e0 2d       	mov	r30, r0
    1ae4:	82 81       	ldd	r24, Z+2	; 0x02
    1ae6:	93 81       	ldd	r25, Z+3	; 0x03
    1ae8:	a4 81       	ldd	r26, Z+4	; 0x04
    1aea:	b5 81       	ldd	r27, Z+5	; 0x05
    1aec:	08 c0       	rjmp	.+16     	; 0x1afe <async+0x74>
    1aee:	80 91 60 01 	lds	r24, 0x0160	; 0x800160 <timestamp>
    1af2:	90 91 61 01 	lds	r25, 0x0161	; 0x800161 <timestamp+0x1>
    1af6:	a0 91 62 01 	lds	r26, 0x0162	; 0x800162 <timestamp+0x2>
    1afa:	b0 91 63 01 	lds	r27, 0x0163	; 0x800163 <timestamp+0x3>
    1afe:	48 0e       	add	r4, r24
    1b00:	59 1e       	adc	r5, r25
    1b02:	6a 1e       	adc	r6, r26
    1b04:	7b 1e       	adc	r7, r27
    1b06:	4a 82       	std	Y+2, r4	; 0x02
    1b08:	5b 82       	std	Y+3, r5	; 0x03
    1b0a:	6c 82       	std	Y+4, r6	; 0x04
    1b0c:	7d 82       	std	Y+5, r7	; 0x05
    1b0e:	18 14       	cp	r1, r8
    1b10:	19 04       	cpc	r1, r9
    1b12:	1a 04       	cpc	r1, r10
    1b14:	1b 04       	cpc	r1, r11
    1b16:	44 f0       	brlt	.+16     	; 0x1b28 <async+0x9e>
    1b18:	0f 2e       	mov	r0, r31
    1b1a:	88 24       	eor	r8, r8
    1b1c:	8a 94       	dec	r8
    1b1e:	98 2c       	mov	r9, r8
    1b20:	a8 2c       	mov	r10, r8
    1b22:	ff e7       	ldi	r31, 0x7F	; 127
    1b24:	bf 2e       	mov	r11, r31
    1b26:	f0 2d       	mov	r31, r0
    1b28:	84 0c       	add	r8, r4
    1b2a:	95 1c       	adc	r9, r5
    1b2c:	a6 1c       	adc	r10, r6
    1b2e:	b7 1c       	adc	r11, r7
    1b30:	8e 82       	std	Y+6, r8	; 0x06
    1b32:	9f 82       	std	Y+7, r9	; 0x07
    1b34:	a8 86       	std	Y+8, r10	; 0x08
    1b36:	b9 86       	std	Y+9, r11	; 0x09
    1b38:	20 91 5e 01 	lds	r18, 0x015E	; 0x80015e <overflows>
    1b3c:	30 91 5f 01 	lds	r19, 0x015F	; 0x80015f <overflows+0x1>
    1b40:	c9 01       	movw	r24, r18
    1b42:	03 2e       	mov	r0, r19
    1b44:	00 0c       	add	r0, r0
    1b46:	aa 0b       	sbc	r26, r26
    1b48:	bb 0b       	sbc	r27, r27
    1b4a:	dc 01       	movw	r26, r24
    1b4c:	99 27       	eor	r25, r25
    1b4e:	88 27       	eor	r24, r24
    1b50:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1b54:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1b58:	60 e0       	ldi	r22, 0x00	; 0
    1b5a:	70 e0       	ldi	r23, 0x00	; 0
    1b5c:	84 2b       	or	r24, r20
    1b5e:	95 2b       	or	r25, r21
    1b60:	a6 2b       	or	r26, r22
    1b62:	b7 2b       	or	r27, r23
    1b64:	b0 9b       	sbis	0x16, 0	; 22
    1b66:	13 c0       	rjmp	.+38     	; 0x1b8e <async+0x104>
    1b68:	c9 01       	movw	r24, r18
    1b6a:	01 96       	adiw	r24, 0x01	; 1
    1b6c:	09 2e       	mov	r0, r25
    1b6e:	00 0c       	add	r0, r0
    1b70:	aa 0b       	sbc	r26, r26
    1b72:	bb 0b       	sbc	r27, r27
    1b74:	dc 01       	movw	r26, r24
    1b76:	99 27       	eor	r25, r25
    1b78:	88 27       	eor	r24, r24
    1b7a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1b7e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1b82:	60 e0       	ldi	r22, 0x00	; 0
    1b84:	70 e0       	ldi	r23, 0x00	; 0
    1b86:	84 2b       	or	r24, r20
    1b88:	95 2b       	or	r25, r21
    1b8a:	a6 2b       	or	r26, r22
    1b8c:	b7 2b       	or	r27, r23
    1b8e:	48 1a       	sub	r4, r24
    1b90:	59 0a       	sbc	r5, r25
    1b92:	6a 0a       	sbc	r6, r26
    1b94:	7b 0a       	sbc	r7, r27
    1b96:	14 14       	cp	r1, r4
    1b98:	15 04       	cpc	r1, r5
    1b9a:	16 04       	cpc	r1, r6
    1b9c:	17 04       	cpc	r1, r7
    1b9e:	ac f5       	brge	.+106    	; 0x1c0a <async+0x180>
    1ba0:	64 e6       	ldi	r22, 0x64	; 100
    1ba2:	71 e0       	ldi	r23, 0x01	; 1
    1ba4:	ce 01       	movw	r24, r28
    1ba6:	0e 94 e4 03 	call	0x7c8	; 0x7c8 <enqueueByBaseline>
    1baa:	e0 91 64 01 	lds	r30, 0x0164	; 0x800164 <timerQ>
    1bae:	f0 91 65 01 	lds	r31, 0x0165	; 0x800165 <timerQ+0x1>
    1bb2:	30 97       	sbiw	r30, 0x00	; 0
    1bb4:	21 f1       	breq	.+72     	; 0x1bfe <async+0x174>
    1bb6:	82 81       	ldd	r24, Z+2	; 0x02
    1bb8:	93 81       	ldd	r25, Z+3	; 0x03
    1bba:	a4 81       	ldd	r26, Z+4	; 0x04
    1bbc:	b5 81       	ldd	r27, Z+5	; 0x05
    1bbe:	20 91 5e 01 	lds	r18, 0x015E	; 0x80015e <overflows>
    1bc2:	30 91 5f 01 	lds	r19, 0x015F	; 0x80015f <overflows+0x1>
    1bc6:	2a 17       	cp	r18, r26
    1bc8:	3b 07       	cpc	r19, r27
    1bca:	c9 f4       	brne	.+50     	; 0x1bfe <async+0x174>
    1bcc:	9c 01       	movw	r18, r24
    1bce:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1bd2:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1bd6:	84 1b       	sub	r24, r20
    1bd8:	95 0b       	sbc	r25, r21
    1bda:	01 97       	sbiw	r24, 0x01	; 1
    1bdc:	31 f4       	brne	.+12     	; 0x1bea <async+0x160>
    1bde:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1be2:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1be6:	2f 5f       	subi	r18, 0xFF	; 255
    1be8:	3f 4f       	sbci	r19, 0xFF	; 255
    1bea:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    1bee:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    1bf2:	ef e6       	ldi	r30, 0x6F	; 111
    1bf4:	f0 e0       	ldi	r31, 0x00	; 0
    1bf6:	80 81       	ld	r24, Z
    1bf8:	82 60       	ori	r24, 0x02	; 2
    1bfa:	80 83       	st	Z, r24
    1bfc:	39 c0       	rjmp	.+114    	; 0x1c70 <async+0x1e6>
    1bfe:	ef e6       	ldi	r30, 0x6F	; 111
    1c00:	f0 e0       	ldi	r31, 0x00	; 0
    1c02:	80 81       	ld	r24, Z
    1c04:	8d 7f       	andi	r24, 0xFD	; 253
    1c06:	80 83       	st	Z, r24
    1c08:	33 c0       	rjmp	.+102    	; 0x1c70 <async+0x1e6>
    1c0a:	66 e6       	ldi	r22, 0x66	; 102
    1c0c:	71 e0       	ldi	r23, 0x01	; 1
    1c0e:	ce 01       	movw	r24, r28
    1c10:	0e 94 b3 03 	call	0x766	; 0x766 <enqueueByDeadline>
    1c14:	33 20       	and	r3, r3
    1c16:	61 f1       	breq	.+88     	; 0x1c70 <async+0x1e6>
    1c18:	80 91 56 01 	lds	r24, 0x0156	; 0x800156 <threadPool>
    1c1c:	90 91 57 01 	lds	r25, 0x0157	; 0x800157 <threadPool+0x1>
    1c20:	89 2b       	or	r24, r25
    1c22:	31 f1       	breq	.+76     	; 0x1c70 <async+0x1e6>
    1c24:	e0 91 66 01 	lds	r30, 0x0166	; 0x800166 <msgQ>
    1c28:	f0 91 67 01 	lds	r31, 0x0167	; 0x800167 <msgQ+0x1>
    1c2c:	86 81       	ldd	r24, Z+6	; 0x06
    1c2e:	97 81       	ldd	r25, Z+7	; 0x07
    1c30:	a0 85       	ldd	r26, Z+8	; 0x08
    1c32:	b1 85       	ldd	r27, Z+9	; 0x09
    1c34:	e0 91 54 01 	lds	r30, 0x0154	; 0x800154 <activeStack>
    1c38:	f0 91 55 01 	lds	r31, 0x0155	; 0x800155 <activeStack+0x1>
    1c3c:	02 80       	ldd	r0, Z+2	; 0x02
    1c3e:	f3 81       	ldd	r31, Z+3	; 0x03
    1c40:	e0 2d       	mov	r30, r0
    1c42:	46 81       	ldd	r20, Z+6	; 0x06
    1c44:	57 81       	ldd	r21, Z+7	; 0x07
    1c46:	60 85       	ldd	r22, Z+8	; 0x08
    1c48:	71 85       	ldd	r23, Z+9	; 0x09
    1c4a:	84 1b       	sub	r24, r20
    1c4c:	95 0b       	sbc	r25, r21
    1c4e:	a6 0b       	sbc	r26, r22
    1c50:	b7 0b       	sbc	r27, r23
    1c52:	72 f4       	brpl	.+28     	; 0x1c70 <async+0x1e6>
    1c54:	86 e5       	ldi	r24, 0x56	; 86
    1c56:	91 e0       	ldi	r25, 0x01	; 1
    1c58:	0e 94 40 04 	call	0x880	; 0x880 <pop>
    1c5c:	64 e5       	ldi	r22, 0x54	; 84
    1c5e:	71 e0       	ldi	r23, 0x01	; 1
    1c60:	0e 94 36 04 	call	0x86c	; 0x86c <push>
    1c64:	80 91 54 01 	lds	r24, 0x0154	; 0x800154 <activeStack>
    1c68:	90 91 55 01 	lds	r25, 0x0155	; 0x800155 <activeStack+0x1>
    1c6c:	0e 94 93 03 	call	0x726	; 0x726 <dispatch>
    1c70:	33 20       	and	r3, r3
    1c72:	09 f0       	breq	.+2      	; 0x1c76 <async+0x1ec>
    1c74:	78 94       	sei
    1c76:	ce 01       	movw	r24, r28
    1c78:	df 91       	pop	r29
    1c7a:	cf 91       	pop	r28
    1c7c:	1f 91       	pop	r17
    1c7e:	0f 91       	pop	r16
    1c80:	ff 90       	pop	r15
    1c82:	ef 90       	pop	r14
    1c84:	df 90       	pop	r13
    1c86:	cf 90       	pop	r12
    1c88:	bf 90       	pop	r11
    1c8a:	af 90       	pop	r10
    1c8c:	9f 90       	pop	r9
    1c8e:	8f 90       	pop	r8
    1c90:	7f 90       	pop	r7
    1c92:	6f 90       	pop	r6
    1c94:	5f 90       	pop	r5
    1c96:	4f 90       	pop	r4
    1c98:	3f 90       	pop	r3
    1c9a:	08 95       	ret

00001c9c <sync>:
    1c9c:	cf 92       	push	r12
    1c9e:	df 92       	push	r13
    1ca0:	ef 92       	push	r14
    1ca2:	ff 92       	push	r15
    1ca4:	0f 93       	push	r16
    1ca6:	1f 93       	push	r17
    1ca8:	cf 93       	push	r28
    1caa:	df 93       	push	r29
    1cac:	ec 01       	movw	r28, r24
    1cae:	7b 01       	movw	r14, r22
    1cb0:	6a 01       	movw	r12, r20
    1cb2:	1f b7       	in	r17, 0x3f	; 63
    1cb4:	10 78       	andi	r17, 0x80	; 128
    1cb6:	f8 94       	cli
    1cb8:	a8 81       	ld	r26, Y
    1cba:	b9 81       	ldd	r27, Y+1	; 0x01
    1cbc:	10 97       	sbiw	r26, 0x00	; 0
    1cbe:	19 f4       	brne	.+6      	; 0x1cc6 <sync+0x2a>
    1cc0:	35 c0       	rjmp	.+106    	; 0x1d2c <sync+0x90>
    1cc2:	a0 81       	ld	r26, Z
    1cc4:	b1 81       	ldd	r27, Z+1	; 0x01
    1cc6:	14 96       	adiw	r26, 0x04	; 4
    1cc8:	ed 91       	ld	r30, X+
    1cca:	fc 91       	ld	r31, X
    1ccc:	15 97       	sbiw	r26, 0x05	; 5
    1cce:	30 97       	sbiw	r30, 0x00	; 0
    1cd0:	c1 f7       	brne	.-16     	; 0x1cc2 <sync+0x26>
    1cd2:	20 91 52 01 	lds	r18, 0x0152	; 0x800152 <current>
    1cd6:	30 91 53 01 	lds	r19, 0x0153	; 0x800153 <current+0x1>
    1cda:	a2 17       	cp	r26, r18
    1cdc:	b3 07       	cpc	r27, r19
    1cde:	11 f0       	breq	.+4      	; 0x1ce4 <sync+0x48>
    1ce0:	11 11       	cpse	r17, r1
    1ce2:	07 c0       	rjmp	.+14     	; 0x1cf2 <sync+0x56>
    1ce4:	11 23       	and	r17, r17
    1ce6:	09 f4       	brne	.+2      	; 0x1cea <sync+0x4e>
    1ce8:	4a c0       	rjmp	.+148    	; 0x1d7e <sync+0xe2>
    1cea:	78 94       	sei
    1cec:	8f ef       	ldi	r24, 0xFF	; 255
    1cee:	9f ef       	ldi	r25, 0xFF	; 255
    1cf0:	4e c0       	rjmp	.+156    	; 0x1d8e <sync+0xf2>
    1cf2:	8a 81       	ldd	r24, Y+2	; 0x02
    1cf4:	9b 81       	ldd	r25, Y+3	; 0x03
    1cf6:	00 97       	sbiw	r24, 0x00	; 0
    1cf8:	19 f0       	breq	.+6      	; 0x1d00 <sync+0x64>
    1cfa:	fc 01       	movw	r30, r24
    1cfc:	15 82       	std	Z+5, r1	; 0x05
    1cfe:	14 82       	std	Z+4, r1	; 0x04
    1d00:	3b 83       	std	Y+3, r19	; 0x03
    1d02:	2a 83       	std	Y+2, r18	; 0x02
    1d04:	f9 01       	movw	r30, r18
    1d06:	d5 83       	std	Z+5, r29	; 0x05
    1d08:	c4 83       	std	Z+4, r28	; 0x04
    1d0a:	cd 01       	movw	r24, r26
    1d0c:	0e 94 93 03 	call	0x726	; 0x726 <dispatch>
    1d10:	e0 91 52 01 	lds	r30, 0x0152	; 0x800152 <current>
    1d14:	f0 91 53 01 	lds	r31, 0x0153	; 0x800153 <current+0x1>
    1d18:	82 81       	ldd	r24, Z+2	; 0x02
    1d1a:	93 81       	ldd	r25, Z+3	; 0x03
    1d1c:	89 2b       	or	r24, r25
    1d1e:	31 f4       	brne	.+12     	; 0x1d2c <sync+0x90>
    1d20:	11 23       	and	r17, r17
    1d22:	81 f1       	breq	.+96     	; 0x1d84 <sync+0xe8>
    1d24:	78 94       	sei
    1d26:	80 e0       	ldi	r24, 0x00	; 0
    1d28:	90 e0       	ldi	r25, 0x00	; 0
    1d2a:	31 c0       	rjmp	.+98     	; 0x1d8e <sync+0xf2>
    1d2c:	80 91 52 01 	lds	r24, 0x0152	; 0x800152 <current>
    1d30:	90 91 53 01 	lds	r25, 0x0153	; 0x800153 <current+0x1>
    1d34:	99 83       	std	Y+1, r25	; 0x01
    1d36:	88 83       	st	Y, r24
    1d38:	11 23       	and	r17, r17
    1d3a:	29 f0       	breq	.+10     	; 0x1d46 <sync+0xaa>
    1d3c:	8a 81       	ldd	r24, Y+2	; 0x02
    1d3e:	9b 81       	ldd	r25, Y+3	; 0x03
    1d40:	01 97       	sbiw	r24, 0x01	; 1
    1d42:	09 f0       	breq	.+2      	; 0x1d46 <sync+0xaa>
    1d44:	78 94       	sei
    1d46:	b6 01       	movw	r22, r12
    1d48:	ce 01       	movw	r24, r28
    1d4a:	f7 01       	movw	r30, r14
    1d4c:	09 95       	icall
    1d4e:	f8 2e       	mov	r15, r24
    1d50:	09 2f       	mov	r16, r25
    1d52:	8f b7       	in	r24, 0x3f	; 63
    1d54:	f8 94       	cli
    1d56:	19 82       	std	Y+1, r1	; 0x01
    1d58:	18 82       	st	Y, r1
    1d5a:	8a 81       	ldd	r24, Y+2	; 0x02
    1d5c:	9b 81       	ldd	r25, Y+3	; 0x03
    1d5e:	82 30       	cpi	r24, 0x02	; 2
    1d60:	91 05       	cpc	r25, r1
    1d62:	38 f0       	brcs	.+14     	; 0x1d72 <sync+0xd6>
    1d64:	1b 82       	std	Y+3, r1	; 0x03
    1d66:	1a 82       	std	Y+2, r1	; 0x02
    1d68:	fc 01       	movw	r30, r24
    1d6a:	15 82       	std	Z+5, r1	; 0x05
    1d6c:	14 82       	std	Z+4, r1	; 0x04
    1d6e:	0e 94 93 03 	call	0x726	; 0x726 <dispatch>
    1d72:	11 23       	and	r17, r17
    1d74:	51 f0       	breq	.+20     	; 0x1d8a <sync+0xee>
    1d76:	78 94       	sei
    1d78:	8f 2d       	mov	r24, r15
    1d7a:	90 2f       	mov	r25, r16
    1d7c:	08 c0       	rjmp	.+16     	; 0x1d8e <sync+0xf2>
    1d7e:	8f ef       	ldi	r24, 0xFF	; 255
    1d80:	9f ef       	ldi	r25, 0xFF	; 255
    1d82:	05 c0       	rjmp	.+10     	; 0x1d8e <sync+0xf2>
    1d84:	80 e0       	ldi	r24, 0x00	; 0
    1d86:	90 e0       	ldi	r25, 0x00	; 0
    1d88:	02 c0       	rjmp	.+4      	; 0x1d8e <sync+0xf2>
    1d8a:	8f 2d       	mov	r24, r15
    1d8c:	90 2f       	mov	r25, r16
    1d8e:	df 91       	pop	r29
    1d90:	cf 91       	pop	r28
    1d92:	1f 91       	pop	r17
    1d94:	0f 91       	pop	r16
    1d96:	ff 90       	pop	r15
    1d98:	ef 90       	pop	r14
    1d9a:	df 90       	pop	r13
    1d9c:	cf 90       	pop	r12
    1d9e:	08 95       	ret

00001da0 <run>:
    1da0:	00 91 52 01 	lds	r16, 0x0152	; 0x800152 <current>
    1da4:	10 91 53 01 	lds	r17, 0x0153	; 0x800153 <current+0x1>
    1da8:	86 e6       	ldi	r24, 0x66	; 102
    1daa:	91 e0       	ldi	r25, 0x01	; 1
    1dac:	0e 94 15 04 	call	0x82a	; 0x82a <dequeue>
    1db0:	ec 01       	movw	r28, r24
    1db2:	f8 01       	movw	r30, r16
    1db4:	93 83       	std	Z+3, r25	; 0x03
    1db6:	82 83       	std	Z+2, r24	; 0x02
    1db8:	78 94       	sei
    1dba:	6c 85       	ldd	r22, Y+12	; 0x0c
    1dbc:	7d 85       	ldd	r23, Y+13	; 0x0d
    1dbe:	4e 85       	ldd	r20, Y+14	; 0x0e
    1dc0:	5f 85       	ldd	r21, Y+15	; 0x0f
    1dc2:	8a 85       	ldd	r24, Y+10	; 0x0a
    1dc4:	9b 85       	ldd	r25, Y+11	; 0x0b
    1dc6:	0e 94 4e 0e 	call	0x1c9c	; 0x1c9c <sync>
    1dca:	8f b7       	in	r24, 0x3f	; 63
    1dcc:	f8 94       	cli
    1dce:	68 e5       	ldi	r22, 0x58	; 88
    1dd0:	71 e0       	ldi	r23, 0x01	; 1
    1dd2:	ce 01       	movw	r24, r28
    1dd4:	0e 94 2c 04 	call	0x858	; 0x858 <insert>
    1dd8:	e0 91 54 01 	lds	r30, 0x0154	; 0x800154 <activeStack>
    1ddc:	f0 91 55 01 	lds	r31, 0x0155	; 0x800155 <activeStack+0x1>
    1de0:	01 90       	ld	r0, Z+
    1de2:	f0 81       	ld	r31, Z
    1de4:	e0 2d       	mov	r30, r0
    1de6:	c2 81       	ldd	r28, Z+2	; 0x02
    1de8:	d3 81       	ldd	r29, Z+3	; 0x03
    1dea:	e0 91 66 01 	lds	r30, 0x0166	; 0x800166 <msgQ>
    1dee:	f0 91 67 01 	lds	r31, 0x0167	; 0x800167 <msgQ+0x1>
    1df2:	30 97       	sbiw	r30, 0x00	; 0
    1df4:	a1 f0       	breq	.+40     	; 0x1e1e <run+0x7e>
    1df6:	20 97       	sbiw	r28, 0x00	; 0
    1df8:	99 f2       	breq	.-90     	; 0x1da0 <run>
    1dfa:	86 81       	ldd	r24, Z+6	; 0x06
    1dfc:	97 81       	ldd	r25, Z+7	; 0x07
    1dfe:	a0 85       	ldd	r26, Z+8	; 0x08
    1e00:	b1 85       	ldd	r27, Z+9	; 0x09
    1e02:	4e 81       	ldd	r20, Y+6	; 0x06
    1e04:	5f 81       	ldd	r21, Y+7	; 0x07
    1e06:	68 85       	ldd	r22, Y+8	; 0x08
    1e08:	79 85       	ldd	r23, Y+9	; 0x09
    1e0a:	84 1b       	sub	r24, r20
    1e0c:	95 0b       	sbc	r25, r21
    1e0e:	a6 0b       	sbc	r26, r22
    1e10:	b7 0b       	sbc	r27, r23
    1e12:	18 16       	cp	r1, r24
    1e14:	19 06       	cpc	r1, r25
    1e16:	1a 06       	cpc	r1, r26
    1e18:	1b 06       	cpc	r1, r27
    1e1a:	0c f0       	brlt	.+2      	; 0x1e1e <run+0x7e>
    1e1c:	c1 cf       	rjmp	.-126    	; 0x1da0 <run>
    1e1e:	84 e5       	ldi	r24, 0x54	; 84
    1e20:	91 e0       	ldi	r25, 0x01	; 1
    1e22:	0e 94 40 04 	call	0x880	; 0x880 <pop>
    1e26:	66 e5       	ldi	r22, 0x56	; 86
    1e28:	71 e0       	ldi	r23, 0x01	; 1
    1e2a:	0e 94 36 04 	call	0x86c	; 0x86c <push>
    1e2e:	a0 91 54 01 	lds	r26, 0x0154	; 0x800154 <activeStack>
    1e32:	b0 91 55 01 	lds	r27, 0x0155	; 0x800155 <activeStack+0x1>
    1e36:	02 c0       	rjmp	.+4      	; 0x1e3c <run+0x9c>
    1e38:	a0 81       	ld	r26, Z
    1e3a:	b1 81       	ldd	r27, Z+1	; 0x01
    1e3c:	14 96       	adiw	r26, 0x04	; 4
    1e3e:	ed 91       	ld	r30, X+
    1e40:	fc 91       	ld	r31, X
    1e42:	15 97       	sbiw	r26, 0x05	; 5
    1e44:	30 97       	sbiw	r30, 0x00	; 0
    1e46:	c1 f7       	brne	.-16     	; 0x1e38 <run+0x98>
    1e48:	cd 01       	movw	r24, r26
    1e4a:	0e 94 93 03 	call	0x726	; 0x726 <dispatch>
    1e4e:	a8 cf       	rjmp	.-176    	; 0x1da0 <run>

00001e50 <ABORT>:
    1e50:	1f 93       	push	r17
    1e52:	cf 93       	push	r28
    1e54:	df 93       	push	r29
    1e56:	ec 01       	movw	r28, r24
    1e58:	1f b7       	in	r17, 0x3f	; 63
    1e5a:	10 78       	andi	r17, 0x80	; 128
    1e5c:	f8 94       	cli
    1e5e:	64 e6       	ldi	r22, 0x64	; 100
    1e60:	71 e0       	ldi	r23, 0x01	; 1
    1e62:	0e 94 cf 02 	call	0x59e	; 0x59e <remove>
    1e66:	89 2b       	or	r24, r25
    1e68:	39 f4       	brne	.+14     	; 0x1e78 <ABORT+0x28>
    1e6a:	66 e6       	ldi	r22, 0x66	; 102
    1e6c:	71 e0       	ldi	r23, 0x01	; 1
    1e6e:	ce 01       	movw	r24, r28
    1e70:	0e 94 cf 02 	call	0x59e	; 0x59e <remove>
    1e74:	89 2b       	or	r24, r25
    1e76:	31 f0       	breq	.+12     	; 0x1e84 <ABORT+0x34>
    1e78:	68 e5       	ldi	r22, 0x58	; 88
    1e7a:	71 e0       	ldi	r23, 0x01	; 1
    1e7c:	ce 01       	movw	r24, r28
    1e7e:	0e 94 2c 04 	call	0x858	; 0x858 <insert>
    1e82:	25 c0       	rjmp	.+74     	; 0x1ece <ABORT+0x7e>
    1e84:	e0 91 54 01 	lds	r30, 0x0154	; 0x800154 <activeStack>
    1e88:	f0 91 55 01 	lds	r31, 0x0155	; 0x800155 <activeStack+0x1>
    1e8c:	1e c0       	rjmp	.+60     	; 0x1eca <ABORT+0x7a>
    1e8e:	80 91 52 01 	lds	r24, 0x0152	; 0x800152 <current>
    1e92:	90 91 53 01 	lds	r25, 0x0153	; 0x800153 <current+0x1>
    1e96:	e8 17       	cp	r30, r24
    1e98:	f9 07       	cpc	r31, r25
    1e9a:	a1 f0       	breq	.+40     	; 0x1ec4 <ABORT+0x74>
    1e9c:	82 81       	ldd	r24, Z+2	; 0x02
    1e9e:	93 81       	ldd	r25, Z+3	; 0x03
    1ea0:	c8 17       	cp	r28, r24
    1ea2:	d9 07       	cpc	r29, r25
    1ea4:	79 f4       	brne	.+30     	; 0x1ec4 <ABORT+0x74>
    1ea6:	24 81       	ldd	r18, Z+4	; 0x04
    1ea8:	35 81       	ldd	r19, Z+5	; 0x05
    1eaa:	8a 85       	ldd	r24, Y+10	; 0x0a
    1eac:	9b 85       	ldd	r25, Y+11	; 0x0b
    1eae:	28 17       	cp	r18, r24
    1eb0:	39 07       	cpc	r19, r25
    1eb2:	41 f4       	brne	.+16     	; 0x1ec4 <ABORT+0x74>
    1eb4:	13 82       	std	Z+3, r1	; 0x03
    1eb6:	12 82       	std	Z+2, r1	; 0x02
    1eb8:	68 e5       	ldi	r22, 0x58	; 88
    1eba:	71 e0       	ldi	r23, 0x01	; 1
    1ebc:	ce 01       	movw	r24, r28
    1ebe:	0e 94 2c 04 	call	0x858	; 0x858 <insert>
    1ec2:	05 c0       	rjmp	.+10     	; 0x1ece <ABORT+0x7e>
    1ec4:	01 90       	ld	r0, Z+
    1ec6:	f0 81       	ld	r31, Z
    1ec8:	e0 2d       	mov	r30, r0
    1eca:	30 97       	sbiw	r30, 0x00	; 0
    1ecc:	01 f7       	brne	.-64     	; 0x1e8e <ABORT+0x3e>
    1ece:	11 23       	and	r17, r17
    1ed0:	09 f0       	breq	.+2      	; 0x1ed4 <ABORT+0x84>
    1ed2:	78 94       	sei
    1ed4:	df 91       	pop	r29
    1ed6:	cf 91       	pop	r28
    1ed8:	1f 91       	pop	r17
    1eda:	08 95       	ret

00001edc <install>:
    thread0.msg = NULL;
    
    TIMER_INIT();
}

void install(Object *obj, Method m, enum Vector i) {
    1edc:	fc 01       	movw	r30, r24
    if (i >= 0 && i < N_VECTORS) {
    1ede:	42 31       	cpi	r20, 0x12	; 18
    1ee0:	b8 f4       	brcc	.+46     	; 0x1f10 <install+0x34>
        char status;
        DISABLE(status);
    1ee2:	9f b7       	in	r25, 0x3f	; 63
    1ee4:	90 78       	andi	r25, 0x80	; 128
    1ee6:	f8 94       	cli
        otable[i] = obj;
    1ee8:	50 e0       	ldi	r21, 0x00	; 0
    1eea:	44 0f       	add	r20, r20
    1eec:	55 1f       	adc	r21, r21
    1eee:	da 01       	movw	r26, r20
    1ef0:	a8 59       	subi	r26, 0x98	; 152
    1ef2:	be 4f       	sbci	r27, 0xFE	; 254
    1ef4:	ed 93       	st	X+, r30
    1ef6:	fc 93       	st	X, r31
        mtable[i] = m;
    1ef8:	da 01       	movw	r26, r20
    1efa:	a0 50       	subi	r26, 0x00	; 0
    1efc:	be 4f       	sbci	r27, 0xFE	; 254
    1efe:	6d 93       	st	X+, r22
    1f00:	7c 93       	st	X, r23
        obj->wantedBy = INSTALLED_TAG;  // Mark object as subject to synchronization by interrupt disabling
    1f02:	21 e0       	ldi	r18, 0x01	; 1
    1f04:	30 e0       	ldi	r19, 0x00	; 0
    1f06:	33 83       	std	Z+3, r19	; 0x03
    1f08:	22 83       	std	Z+2, r18	; 0x02
        ENABLE(status);
    1f0a:	99 23       	and	r25, r25
    1f0c:	09 f0       	breq	.+2      	; 0x1f10 <install+0x34>
    1f0e:	78 94       	sei
    1f10:	08 95       	ret

00001f12 <tinytimber>:
    }
}

int tinytimber(Object *obj, Method m, int arg) {
    1f12:	8c 01       	movw	r16, r24
    1f14:	7b 01       	movw	r14, r22
    1f16:	6a 01       	movw	r12, r20
    char status;
    DISABLE(status);
    1f18:	8f b7       	in	r24, 0x3f	; 63
    1f1a:	f8 94       	cli
    initialize();
    1f1c:	0e 94 f4 02 	call	0x5e8	; 0x5e8 <initialize>
    ENABLE(1);
    1f20:	78 94       	sei
    if (m != NULL)
    1f22:	e1 14       	cp	r14, r1
    1f24:	f1 04       	cpc	r15, r1
    1f26:	41 f0       	breq	.+16     	; 0x1f38 <tinytimber+0x26>
        //m(obj, arg);
		ASYNC(obj,m,arg);
    1f28:	20 e0       	ldi	r18, 0x00	; 0
    1f2a:	30 e0       	ldi	r19, 0x00	; 0
    1f2c:	a9 01       	movw	r20, r18
    1f2e:	60 e0       	ldi	r22, 0x00	; 0
    1f30:	70 e0       	ldi	r23, 0x00	; 0
    1f32:	cb 01       	movw	r24, r22
    1f34:	0e 94 45 0d 	call	0x1a8a	; 0x1a8a <async>
    DISABLE(status);
    1f38:	8f b7       	in	r24, 0x3f	; 63
    1f3a:	f8 94       	cli
    idle();
    1f3c:	0e 94 4c 0c 	call	0x1898	; 0x1898 <idle>

00001f40 <update_display>:
		ABORT(current->message);
		ASYNC(current,set_pulse_low,0);
	}
	ASYNC(self,update_display,0);
}
void update_display(app_object * self, int arg){
    1f40:	cf 93       	push	r28
    1f42:	df 93       	push	r29
    1f44:	ec 01       	movw	r28, r24
		print_at((self->pulse_gens)->freq,0,2);
    1f46:	ec 81       	ldd	r30, Y+4	; 0x04
    1f48:	fd 81       	ldd	r31, Y+5	; 0x05
    1f4a:	42 e0       	ldi	r20, 0x02	; 2
    1f4c:	60 e0       	ldi	r22, 0x00	; 0
    1f4e:	84 81       	ldd	r24, Z+4	; 0x04
    1f50:	0e 94 da 01 	call	0x3b4	; 0x3b4 <print_at>
		print_at((self->pulse_gens+1)->freq,4,2);
    1f54:	ec 81       	ldd	r30, Y+4	; 0x04
    1f56:	fd 81       	ldd	r31, Y+5	; 0x05
    1f58:	42 e0       	ldi	r20, 0x02	; 2
    1f5a:	64 e0       	ldi	r22, 0x04	; 4
    1f5c:	86 85       	ldd	r24, Z+14	; 0x0e
    1f5e:	0e 94 da 01 	call	0x3b4	; 0x3b4 <print_at>
		if(self->current_pulsegen == 0)
    1f62:	8e 81       	ldd	r24, Y+6	; 0x06
    1f64:	81 11       	cpse	r24, r1
    1f66:	07 c0       	rjmp	.+14     	; 0x1f76 <update_display+0x36>
			LCDDR0 = LCDDR0^(1<<2);
    1f68:	ec ee       	ldi	r30, 0xEC	; 236
    1f6a:	f0 e0       	ldi	r31, 0x00	; 0
    1f6c:	90 81       	ld	r25, Z
    1f6e:	84 e0       	ldi	r24, 0x04	; 4
    1f70:	89 27       	eor	r24, r25
    1f72:	80 83       	st	Z, r24
    1f74:	06 c0       	rjmp	.+12     	; 0x1f82 <update_display+0x42>
		else{
			LCDDR2 = LCDDR2^(1<<2);
    1f76:	ee ee       	ldi	r30, 0xEE	; 238
    1f78:	f0 e0       	ldi	r31, 0x00	; 0
    1f7a:	90 81       	ld	r25, Z
    1f7c:	84 e0       	ldi	r24, 0x04	; 4
    1f7e:	89 27       	eor	r24, r25
    1f80:	80 83       	st	Z, r24
		}
}
    1f82:	df 91       	pop	r29
    1f84:	cf 91       	pop	r28
    1f86:	08 95       	ret

00001f88 <change_pulse_gen>:
 *
 * Created: 2022-02-22 16:35:29
 *  Author: ivarj
 */ 
#include "../include/app.h"
void change_pulse_gen(app_object * self,uint8_t new_index){
    1f88:	cf 92       	push	r12
    1f8a:	df 92       	push	r13
    1f8c:	ef 92       	push	r14
    1f8e:	ff 92       	push	r15
    1f90:	0f 93       	push	r16
    1f92:	1f 93       	push	r17
	// gets the next pulse gen
	self->current_pulsegen = new_index;
    1f94:	fc 01       	movw	r30, r24
    1f96:	66 83       	std	Z+6, r22	; 0x06
	ASYNC(self,update_display,0);
    1f98:	c1 2c       	mov	r12, r1
    1f9a:	d1 2c       	mov	r13, r1
    1f9c:	0f 2e       	mov	r0, r31
    1f9e:	f0 ea       	ldi	r31, 0xA0	; 160
    1fa0:	ef 2e       	mov	r14, r31
    1fa2:	ff e0       	ldi	r31, 0x0F	; 15
    1fa4:	ff 2e       	mov	r15, r31
    1fa6:	f0 2d       	mov	r31, r0
    1fa8:	8c 01       	movw	r16, r24
    1faa:	20 e0       	ldi	r18, 0x00	; 0
    1fac:	30 e0       	ldi	r19, 0x00	; 0
    1fae:	a9 01       	movw	r20, r18
    1fb0:	60 e0       	ldi	r22, 0x00	; 0
    1fb2:	70 e0       	ldi	r23, 0x00	; 0
    1fb4:	cb 01       	movw	r24, r22
    1fb6:	0e 94 45 0d 	call	0x1a8a	; 0x1a8a <async>
}
    1fba:	1f 91       	pop	r17
    1fbc:	0f 91       	pop	r16
    1fbe:	ff 90       	pop	r15
    1fc0:	ef 90       	pop	r14
    1fc2:	df 90       	pop	r13
    1fc4:	cf 90       	pop	r12
    1fc6:	08 95       	ret

00001fc8 <itterate_freq>:
void itterate_freq(app_object * self,int8_t increment){
    1fc8:	af 92       	push	r10
    1fca:	bf 92       	push	r11
    1fcc:	cf 92       	push	r12
    1fce:	df 92       	push	r13
    1fd0:	ef 92       	push	r14
    1fd2:	ff 92       	push	r15
    1fd4:	0f 93       	push	r16
    1fd6:	1f 93       	push	r17
    1fd8:	cf 93       	push	r28
    1fda:	df 93       	push	r29
    1fdc:	5c 01       	movw	r10, r24
	pulse_gen * current = self->pulse_gens+self->current_pulsegen;
    1fde:	fc 01       	movw	r30, r24
    1fe0:	84 81       	ldd	r24, Z+4	; 0x04
    1fe2:	95 81       	ldd	r25, Z+5	; 0x05
    1fe4:	26 81       	ldd	r18, Z+6	; 0x06
    1fe6:	30 e0       	ldi	r19, 0x00	; 0
    1fe8:	e9 01       	movw	r28, r18
    1fea:	cc 0f       	add	r28, r28
    1fec:	dd 1f       	adc	r29, r29
    1fee:	22 0f       	add	r18, r18
    1ff0:	33 1f       	adc	r19, r19
    1ff2:	22 0f       	add	r18, r18
    1ff4:	33 1f       	adc	r19, r19
    1ff6:	22 0f       	add	r18, r18
    1ff8:	33 1f       	adc	r19, r19
    1ffa:	2c 0f       	add	r18, r28
    1ffc:	3d 1f       	adc	r19, r29
    1ffe:	ec 01       	movw	r28, r24
    2000:	c2 0f       	add	r28, r18
    2002:	d3 1f       	adc	r29, r19
	current->freq=(current->freq+increment)%100;
    2004:	8c 81       	ldd	r24, Y+4	; 0x04
    2006:	26 2f       	mov	r18, r22
    2008:	66 0f       	add	r22, r22
    200a:	33 0b       	sbc	r19, r19
    200c:	a9 01       	movw	r20, r18
    200e:	48 0f       	add	r20, r24
    2010:	51 1d       	adc	r21, r1
    2012:	ca 01       	movw	r24, r20
    2014:	e4 e6       	ldi	r30, 0x64	; 100
    2016:	f0 e0       	ldi	r31, 0x00	; 0
    2018:	bf 01       	movw	r22, r30
    201a:	0e 94 0a 11 	call	0x2214	; 0x2214 <__divmodhi4>
    201e:	8c 83       	std	Y+4, r24	; 0x04
	if((current->freq+increment)%100 ==0){
    2020:	a9 01       	movw	r20, r18
    2022:	48 0f       	add	r20, r24
    2024:	51 1d       	adc	r21, r1
    2026:	ca 01       	movw	r24, r20
    2028:	bf 01       	movw	r22, r30
    202a:	0e 94 0a 11 	call	0x2214	; 0x2214 <__divmodhi4>
    202e:	89 2b       	or	r24, r25
    2030:	a9 f4       	brne	.+42     	; 0x205c <itterate_freq+0x94>
		ABORT(current->message);
    2032:	88 85       	ldd	r24, Y+8	; 0x08
    2034:	99 85       	ldd	r25, Y+9	; 0x09
    2036:	0e 94 28 0f 	call	0x1e50	; 0x1e50 <ABORT>
		ASYNC(current,set_pulse_low,0);
    203a:	c1 2c       	mov	r12, r1
    203c:	d1 2c       	mov	r13, r1
    203e:	0f 2e       	mov	r0, r31
    2040:	f5 ec       	ldi	r31, 0xC5	; 197
    2042:	ef 2e       	mov	r14, r31
    2044:	f2 e0       	ldi	r31, 0x02	; 2
    2046:	ff 2e       	mov	r15, r31
    2048:	f0 2d       	mov	r31, r0
    204a:	8e 01       	movw	r16, r28
    204c:	20 e0       	ldi	r18, 0x00	; 0
    204e:	30 e0       	ldi	r19, 0x00	; 0
    2050:	a9 01       	movw	r20, r18
    2052:	60 e0       	ldi	r22, 0x00	; 0
    2054:	70 e0       	ldi	r23, 0x00	; 0
    2056:	cb 01       	movw	r24, r22
    2058:	0e 94 45 0d 	call	0x1a8a	; 0x1a8a <async>
	}
	ASYNC(self,update_display,0);
    205c:	c1 2c       	mov	r12, r1
    205e:	d1 2c       	mov	r13, r1
    2060:	0f 2e       	mov	r0, r31
    2062:	f0 ea       	ldi	r31, 0xA0	; 160
    2064:	ef 2e       	mov	r14, r31
    2066:	ff e0       	ldi	r31, 0x0F	; 15
    2068:	ff 2e       	mov	r15, r31
    206a:	f0 2d       	mov	r31, r0
    206c:	85 01       	movw	r16, r10
    206e:	20 e0       	ldi	r18, 0x00	; 0
    2070:	30 e0       	ldi	r19, 0x00	; 0
    2072:	a9 01       	movw	r20, r18
    2074:	60 e0       	ldi	r22, 0x00	; 0
    2076:	70 e0       	ldi	r23, 0x00	; 0
    2078:	cb 01       	movw	r24, r22
    207a:	0e 94 45 0d 	call	0x1a8a	; 0x1a8a <async>
}
    207e:	df 91       	pop	r29
    2080:	cf 91       	pop	r28
    2082:	1f 91       	pop	r17
    2084:	0f 91       	pop	r16
    2086:	ff 90       	pop	r15
    2088:	ef 90       	pop	r14
    208a:	df 90       	pop	r13
    208c:	cf 90       	pop	r12
    208e:	bf 90       	pop	r11
    2090:	af 90       	pop	r10
    2092:	08 95       	ret

00002094 <save_freq>:
void save_freq(app_object * self,uint8_t arg){
    2094:	af 92       	push	r10
    2096:	bf 92       	push	r11
    2098:	cf 92       	push	r12
    209a:	df 92       	push	r13
    209c:	ef 92       	push	r14
    209e:	ff 92       	push	r15
    20a0:	0f 93       	push	r16
    20a2:	1f 93       	push	r17
    20a4:	cf 93       	push	r28
    20a6:	df 93       	push	r29
    20a8:	5c 01       	movw	r10, r24
	pulse_gen * current = self->pulse_gens+self->current_pulsegen;
    20aa:	fc 01       	movw	r30, r24
    20ac:	44 81       	ldd	r20, Z+4	; 0x04
    20ae:	55 81       	ldd	r21, Z+5	; 0x05
    20b0:	26 81       	ldd	r18, Z+6	; 0x06
    20b2:	82 2f       	mov	r24, r18
    20b4:	90 e0       	ldi	r25, 0x00	; 0
    20b6:	ec 01       	movw	r28, r24
    20b8:	cc 0f       	add	r28, r28
    20ba:	dd 1f       	adc	r29, r29
    20bc:	88 0f       	add	r24, r24
    20be:	99 1f       	adc	r25, r25
    20c0:	88 0f       	add	r24, r24
    20c2:	99 1f       	adc	r25, r25
    20c4:	88 0f       	add	r24, r24
    20c6:	99 1f       	adc	r25, r25
    20c8:	8c 0f       	add	r24, r28
    20ca:	9d 1f       	adc	r25, r29
    20cc:	ea 01       	movw	r28, r20
    20ce:	c8 0f       	add	r28, r24
    20d0:	d9 1f       	adc	r29, r25
	if(current->freq == 0){
    20d2:	8c 81       	ldd	r24, Y+4	; 0x04
    20d4:	81 11       	cpse	r24, r1
    20d6:	16 c0       	rjmp	.+44     	; 0x2104 <save_freq+0x70>
		current->freq = self->stored_freq[self->current_pulsegen];
    20d8:	e2 0f       	add	r30, r18
    20da:	f1 1d       	adc	r31, r1
    20dc:	80 85       	ldd	r24, Z+8	; 0x08
    20de:	8c 83       	std	Y+4, r24	; 0x04
		ASYNC(current,pulse,0);
    20e0:	c1 2c       	mov	r12, r1
    20e2:	d1 2c       	mov	r13, r1
    20e4:	0f 2e       	mov	r0, r31
    20e6:	fa e3       	ldi	r31, 0x3A	; 58
    20e8:	ef 2e       	mov	r14, r31
    20ea:	f2 e0       	ldi	r31, 0x02	; 2
    20ec:	ff 2e       	mov	r15, r31
    20ee:	f0 2d       	mov	r31, r0
    20f0:	8e 01       	movw	r16, r28
    20f2:	20 e0       	ldi	r18, 0x00	; 0
    20f4:	30 e0       	ldi	r19, 0x00	; 0
    20f6:	a9 01       	movw	r20, r18
    20f8:	60 e0       	ldi	r22, 0x00	; 0
    20fa:	70 e0       	ldi	r23, 0x00	; 0
    20fc:	cb 01       	movw	r24, r22
    20fe:	0e 94 45 0d 	call	0x1a8a	; 0x1a8a <async>
    2102:	1a c0       	rjmp	.+52     	; 0x2138 <save_freq+0xa4>
	}
	else{
		pulse_gen * current = self->pulse_gens+self->current_pulsegen;
		self->stored_freq[self->current_pulsegen] = current->freq;
    2104:	f5 01       	movw	r30, r10
    2106:	e2 0f       	add	r30, r18
    2108:	f1 1d       	adc	r31, r1
    210a:	80 87       	std	Z+8, r24	; 0x08
		current->freq=0; 
    210c:	1c 82       	std	Y+4, r1	; 0x04
		ABORT(current->message);
    210e:	88 85       	ldd	r24, Y+8	; 0x08
    2110:	99 85       	ldd	r25, Y+9	; 0x09
    2112:	0e 94 28 0f 	call	0x1e50	; 0x1e50 <ABORT>
		ASYNC(current,set_pulse_low,0);
    2116:	c1 2c       	mov	r12, r1
    2118:	d1 2c       	mov	r13, r1
    211a:	0f 2e       	mov	r0, r31
    211c:	f5 ec       	ldi	r31, 0xC5	; 197
    211e:	ef 2e       	mov	r14, r31
    2120:	f2 e0       	ldi	r31, 0x02	; 2
    2122:	ff 2e       	mov	r15, r31
    2124:	f0 2d       	mov	r31, r0
    2126:	8e 01       	movw	r16, r28
    2128:	20 e0       	ldi	r18, 0x00	; 0
    212a:	30 e0       	ldi	r19, 0x00	; 0
    212c:	a9 01       	movw	r20, r18
    212e:	60 e0       	ldi	r22, 0x00	; 0
    2130:	70 e0       	ldi	r23, 0x00	; 0
    2132:	cb 01       	movw	r24, r22
    2134:	0e 94 45 0d 	call	0x1a8a	; 0x1a8a <async>
	}
	ASYNC(self,update_display,0);
    2138:	c1 2c       	mov	r12, r1
    213a:	d1 2c       	mov	r13, r1
    213c:	0f 2e       	mov	r0, r31
    213e:	f0 ea       	ldi	r31, 0xA0	; 160
    2140:	ef 2e       	mov	r14, r31
    2142:	ff e0       	ldi	r31, 0x0F	; 15
    2144:	ff 2e       	mov	r15, r31
    2146:	f0 2d       	mov	r31, r0
    2148:	85 01       	movw	r16, r10
    214a:	20 e0       	ldi	r18, 0x00	; 0
    214c:	30 e0       	ldi	r19, 0x00	; 0
    214e:	a9 01       	movw	r20, r18
    2150:	60 e0       	ldi	r22, 0x00	; 0
    2152:	70 e0       	ldi	r23, 0x00	; 0
    2154:	cb 01       	movw	r24, r22
    2156:	0e 94 45 0d 	call	0x1a8a	; 0x1a8a <async>
}
    215a:	df 91       	pop	r29
    215c:	cf 91       	pop	r28
    215e:	1f 91       	pop	r17
    2160:	0f 91       	pop	r16
    2162:	ff 90       	pop	r15
    2164:	ef 90       	pop	r14
    2166:	df 90       	pop	r13
    2168:	cf 90       	pop	r12
    216a:	bf 90       	pop	r11
    216c:	af 90       	pop	r10
    216e:	08 95       	ret

00002170 <app_entry>:
			LCDDR0 = LCDDR0^(1<<2);
		else{
			LCDDR2 = LCDDR2^(1<<2);
		}
}
void app_entry(app_object *self,int arg){
    2170:	af 92       	push	r10
    2172:	bf 92       	push	r11
    2174:	cf 92       	push	r12
    2176:	df 92       	push	r13
    2178:	ef 92       	push	r14
    217a:	ff 92       	push	r15
    217c:	0f 93       	push	r16
    217e:	1f 93       	push	r17
    2180:	cf 93       	push	r28
    2182:	df 93       	push	r29
    2184:	5c 01       	movw	r10, r24
		for(int i = 0; i < self->number_of_pulsegens; i++)
    2186:	c0 e0       	ldi	r28, 0x00	; 0
    2188:	d0 e0       	ldi	r29, 0x00	; 0
    218a:	22 c0       	rjmp	.+68     	; 0x21d0 <app_entry+0x60>
			ASYNC((self->pulse_gens+i),pulse,0);
    218c:	f5 01       	movw	r30, r10
    218e:	24 81       	ldd	r18, Z+4	; 0x04
    2190:	35 81       	ldd	r19, Z+5	; 0x05
    2192:	8e 01       	movw	r16, r28
    2194:	00 0f       	add	r16, r16
    2196:	11 1f       	adc	r17, r17
    2198:	ce 01       	movw	r24, r28
    219a:	88 0f       	add	r24, r24
    219c:	99 1f       	adc	r25, r25
    219e:	88 0f       	add	r24, r24
    21a0:	99 1f       	adc	r25, r25
    21a2:	88 0f       	add	r24, r24
    21a4:	99 1f       	adc	r25, r25
    21a6:	08 0f       	add	r16, r24
    21a8:	19 1f       	adc	r17, r25
    21aa:	02 0f       	add	r16, r18
    21ac:	13 1f       	adc	r17, r19
    21ae:	c1 2c       	mov	r12, r1
    21b0:	d1 2c       	mov	r13, r1
    21b2:	0f 2e       	mov	r0, r31
    21b4:	fa e3       	ldi	r31, 0x3A	; 58
    21b6:	ef 2e       	mov	r14, r31
    21b8:	f2 e0       	ldi	r31, 0x02	; 2
    21ba:	ff 2e       	mov	r15, r31
    21bc:	f0 2d       	mov	r31, r0
    21be:	20 e0       	ldi	r18, 0x00	; 0
    21c0:	30 e0       	ldi	r19, 0x00	; 0
    21c2:	a9 01       	movw	r20, r18
    21c4:	60 e0       	ldi	r22, 0x00	; 0
    21c6:	70 e0       	ldi	r23, 0x00	; 0
    21c8:	cb 01       	movw	r24, r22
    21ca:	0e 94 45 0d 	call	0x1a8a	; 0x1a8a <async>
		else{
			LCDDR2 = LCDDR2^(1<<2);
		}
}
void app_entry(app_object *self,int arg){
		for(int i = 0; i < self->number_of_pulsegens; i++)
    21ce:	21 96       	adiw	r28, 0x01	; 1
    21d0:	f5 01       	movw	r30, r10
    21d2:	87 81       	ldd	r24, Z+7	; 0x07
    21d4:	90 e0       	ldi	r25, 0x00	; 0
    21d6:	c8 17       	cp	r28, r24
    21d8:	d9 07       	cpc	r29, r25
    21da:	c4 f2       	brlt	.-80     	; 0x218c <app_entry+0x1c>
			ASYNC((self->pulse_gens+i),pulse,0);
		ASYNC(self,update_display,0);
    21dc:	c1 2c       	mov	r12, r1
    21de:	d1 2c       	mov	r13, r1
    21e0:	0f 2e       	mov	r0, r31
    21e2:	f0 ea       	ldi	r31, 0xA0	; 160
    21e4:	ef 2e       	mov	r14, r31
    21e6:	ff e0       	ldi	r31, 0x0F	; 15
    21e8:	ff 2e       	mov	r15, r31
    21ea:	f0 2d       	mov	r31, r0
    21ec:	85 01       	movw	r16, r10
    21ee:	20 e0       	ldi	r18, 0x00	; 0
    21f0:	30 e0       	ldi	r19, 0x00	; 0
    21f2:	a9 01       	movw	r20, r18
    21f4:	60 e0       	ldi	r22, 0x00	; 0
    21f6:	70 e0       	ldi	r23, 0x00	; 0
    21f8:	cb 01       	movw	r24, r22
    21fa:	0e 94 45 0d 	call	0x1a8a	; 0x1a8a <async>
	
    21fe:	df 91       	pop	r29
    2200:	cf 91       	pop	r28
    2202:	1f 91       	pop	r17
    2204:	0f 91       	pop	r16
    2206:	ff 90       	pop	r15
    2208:	ef 90       	pop	r14
    220a:	df 90       	pop	r13
    220c:	cf 90       	pop	r12
    220e:	bf 90       	pop	r11
    2210:	af 90       	pop	r10
    2212:	08 95       	ret

00002214 <__divmodhi4>:
    2214:	97 fb       	bst	r25, 7
    2216:	07 2e       	mov	r0, r23
    2218:	16 f4       	brtc	.+4      	; 0x221e <__divmodhi4+0xa>
    221a:	00 94       	com	r0
    221c:	07 d0       	rcall	.+14     	; 0x222c <__divmodhi4_neg1>
    221e:	77 fd       	sbrc	r23, 7
    2220:	09 d0       	rcall	.+18     	; 0x2234 <__divmodhi4_neg2>
    2222:	0e 94 86 11 	call	0x230c	; 0x230c <__udivmodhi4>
    2226:	07 fc       	sbrc	r0, 7
    2228:	05 d0       	rcall	.+10     	; 0x2234 <__divmodhi4_neg2>
    222a:	3e f4       	brtc	.+14     	; 0x223a <__divmodhi4_exit>

0000222c <__divmodhi4_neg1>:
    222c:	90 95       	com	r25
    222e:	81 95       	neg	r24
    2230:	9f 4f       	sbci	r25, 0xFF	; 255
    2232:	08 95       	ret

00002234 <__divmodhi4_neg2>:
    2234:	70 95       	com	r23
    2236:	61 95       	neg	r22
    2238:	7f 4f       	sbci	r23, 0xFF	; 255

0000223a <__divmodhi4_exit>:
    223a:	08 95       	ret

0000223c <__divmodsi4>:
    223c:	05 2e       	mov	r0, r21
    223e:	97 fb       	bst	r25, 7
    2240:	1e f4       	brtc	.+6      	; 0x2248 <__divmodsi4+0xc>
    2242:	00 94       	com	r0
    2244:	0e 94 35 11 	call	0x226a	; 0x226a <__negsi2>
    2248:	57 fd       	sbrc	r21, 7
    224a:	07 d0       	rcall	.+14     	; 0x225a <__divmodsi4_neg2>
    224c:	0e 94 9a 11 	call	0x2334	; 0x2334 <__udivmodsi4>
    2250:	07 fc       	sbrc	r0, 7
    2252:	03 d0       	rcall	.+6      	; 0x225a <__divmodsi4_neg2>
    2254:	4e f4       	brtc	.+18     	; 0x2268 <__divmodsi4_exit>
    2256:	0c 94 35 11 	jmp	0x226a	; 0x226a <__negsi2>

0000225a <__divmodsi4_neg2>:
    225a:	50 95       	com	r21
    225c:	40 95       	com	r20
    225e:	30 95       	com	r19
    2260:	21 95       	neg	r18
    2262:	3f 4f       	sbci	r19, 0xFF	; 255
    2264:	4f 4f       	sbci	r20, 0xFF	; 255
    2266:	5f 4f       	sbci	r21, 0xFF	; 255

00002268 <__divmodsi4_exit>:
    2268:	08 95       	ret

0000226a <__negsi2>:
    226a:	90 95       	com	r25
    226c:	80 95       	com	r24
    226e:	70 95       	com	r23
    2270:	61 95       	neg	r22
    2272:	7f 4f       	sbci	r23, 0xFF	; 255
    2274:	8f 4f       	sbci	r24, 0xFF	; 255
    2276:	9f 4f       	sbci	r25, 0xFF	; 255
    2278:	08 95       	ret

0000227a <__ashldi3>:
    227a:	0f 93       	push	r16
    227c:	08 30       	cpi	r16, 0x08	; 8
    227e:	90 f0       	brcs	.+36     	; 0x22a4 <__ashldi3+0x2a>
    2280:	98 2f       	mov	r25, r24
    2282:	87 2f       	mov	r24, r23
    2284:	76 2f       	mov	r23, r22
    2286:	65 2f       	mov	r22, r21
    2288:	54 2f       	mov	r21, r20
    228a:	43 2f       	mov	r20, r19
    228c:	32 2f       	mov	r19, r18
    228e:	22 27       	eor	r18, r18
    2290:	08 50       	subi	r16, 0x08	; 8
    2292:	f4 cf       	rjmp	.-24     	; 0x227c <__ashldi3+0x2>
    2294:	22 0f       	add	r18, r18
    2296:	33 1f       	adc	r19, r19
    2298:	44 1f       	adc	r20, r20
    229a:	55 1f       	adc	r21, r21
    229c:	66 1f       	adc	r22, r22
    229e:	77 1f       	adc	r23, r23
    22a0:	88 1f       	adc	r24, r24
    22a2:	99 1f       	adc	r25, r25
    22a4:	0a 95       	dec	r16
    22a6:	b2 f7       	brpl	.-20     	; 0x2294 <__ashldi3+0x1a>
    22a8:	0f 91       	pop	r16
    22aa:	08 95       	ret

000022ac <__ashrdi3>:
    22ac:	97 fb       	bst	r25, 7
    22ae:	10 f8       	bld	r1, 0

000022b0 <__lshrdi3>:
    22b0:	16 94       	lsr	r1
    22b2:	00 08       	sbc	r0, r0
    22b4:	0f 93       	push	r16
    22b6:	08 30       	cpi	r16, 0x08	; 8
    22b8:	98 f0       	brcs	.+38     	; 0x22e0 <__lshrdi3+0x30>
    22ba:	08 50       	subi	r16, 0x08	; 8
    22bc:	23 2f       	mov	r18, r19
    22be:	34 2f       	mov	r19, r20
    22c0:	45 2f       	mov	r20, r21
    22c2:	56 2f       	mov	r21, r22
    22c4:	67 2f       	mov	r22, r23
    22c6:	78 2f       	mov	r23, r24
    22c8:	89 2f       	mov	r24, r25
    22ca:	90 2d       	mov	r25, r0
    22cc:	f4 cf       	rjmp	.-24     	; 0x22b6 <__lshrdi3+0x6>
    22ce:	05 94       	asr	r0
    22d0:	97 95       	ror	r25
    22d2:	87 95       	ror	r24
    22d4:	77 95       	ror	r23
    22d6:	67 95       	ror	r22
    22d8:	57 95       	ror	r21
    22da:	47 95       	ror	r20
    22dc:	37 95       	ror	r19
    22de:	27 95       	ror	r18
    22e0:	0a 95       	dec	r16
    22e2:	aa f7       	brpl	.-22     	; 0x22ce <__lshrdi3+0x1e>
    22e4:	0f 91       	pop	r16
    22e6:	08 95       	ret

000022e8 <__adddi3>:
    22e8:	2a 0d       	add	r18, r10
    22ea:	3b 1d       	adc	r19, r11
    22ec:	4c 1d       	adc	r20, r12
    22ee:	5d 1d       	adc	r21, r13
    22f0:	6e 1d       	adc	r22, r14
    22f2:	7f 1d       	adc	r23, r15
    22f4:	80 1f       	adc	r24, r16
    22f6:	91 1f       	adc	r25, r17
    22f8:	08 95       	ret

000022fa <__subdi3>:
    22fa:	2a 19       	sub	r18, r10
    22fc:	3b 09       	sbc	r19, r11
    22fe:	4c 09       	sbc	r20, r12
    2300:	5d 09       	sbc	r21, r13
    2302:	6e 09       	sbc	r22, r14
    2304:	7f 09       	sbc	r23, r15
    2306:	80 0b       	sbc	r24, r16
    2308:	91 0b       	sbc	r25, r17
    230a:	08 95       	ret

0000230c <__udivmodhi4>:
    230c:	aa 1b       	sub	r26, r26
    230e:	bb 1b       	sub	r27, r27
    2310:	51 e1       	ldi	r21, 0x11	; 17
    2312:	07 c0       	rjmp	.+14     	; 0x2322 <__udivmodhi4_ep>

00002314 <__udivmodhi4_loop>:
    2314:	aa 1f       	adc	r26, r26
    2316:	bb 1f       	adc	r27, r27
    2318:	a6 17       	cp	r26, r22
    231a:	b7 07       	cpc	r27, r23
    231c:	10 f0       	brcs	.+4      	; 0x2322 <__udivmodhi4_ep>
    231e:	a6 1b       	sub	r26, r22
    2320:	b7 0b       	sbc	r27, r23

00002322 <__udivmodhi4_ep>:
    2322:	88 1f       	adc	r24, r24
    2324:	99 1f       	adc	r25, r25
    2326:	5a 95       	dec	r21
    2328:	a9 f7       	brne	.-22     	; 0x2314 <__udivmodhi4_loop>
    232a:	80 95       	com	r24
    232c:	90 95       	com	r25
    232e:	bc 01       	movw	r22, r24
    2330:	cd 01       	movw	r24, r26
    2332:	08 95       	ret

00002334 <__udivmodsi4>:
    2334:	a1 e2       	ldi	r26, 0x21	; 33
    2336:	1a 2e       	mov	r1, r26
    2338:	aa 1b       	sub	r26, r26
    233a:	bb 1b       	sub	r27, r27
    233c:	fd 01       	movw	r30, r26
    233e:	0d c0       	rjmp	.+26     	; 0x235a <__udivmodsi4_ep>

00002340 <__udivmodsi4_loop>:
    2340:	aa 1f       	adc	r26, r26
    2342:	bb 1f       	adc	r27, r27
    2344:	ee 1f       	adc	r30, r30
    2346:	ff 1f       	adc	r31, r31
    2348:	a2 17       	cp	r26, r18
    234a:	b3 07       	cpc	r27, r19
    234c:	e4 07       	cpc	r30, r20
    234e:	f5 07       	cpc	r31, r21
    2350:	20 f0       	brcs	.+8      	; 0x235a <__udivmodsi4_ep>
    2352:	a2 1b       	sub	r26, r18
    2354:	b3 0b       	sbc	r27, r19
    2356:	e4 0b       	sbc	r30, r20
    2358:	f5 0b       	sbc	r31, r21

0000235a <__udivmodsi4_ep>:
    235a:	66 1f       	adc	r22, r22
    235c:	77 1f       	adc	r23, r23
    235e:	88 1f       	adc	r24, r24
    2360:	99 1f       	adc	r25, r25
    2362:	1a 94       	dec	r1
    2364:	69 f7       	brne	.-38     	; 0x2340 <__udivmodsi4_loop>
    2366:	60 95       	com	r22
    2368:	70 95       	com	r23
    236a:	80 95       	com	r24
    236c:	90 95       	com	r25
    236e:	9b 01       	movw	r18, r22
    2370:	ac 01       	movw	r20, r24
    2372:	bd 01       	movw	r22, r26
    2374:	cf 01       	movw	r24, r30
    2376:	08 95       	ret

00002378 <setjmp>:
    2378:	dc 01       	movw	r26, r24
    237a:	2d 92       	st	X+, r2
    237c:	3d 92       	st	X+, r3
    237e:	4d 92       	st	X+, r4
    2380:	5d 92       	st	X+, r5
    2382:	6d 92       	st	X+, r6
    2384:	7d 92       	st	X+, r7
    2386:	8d 92       	st	X+, r8
    2388:	9d 92       	st	X+, r9
    238a:	ad 92       	st	X+, r10
    238c:	bd 92       	st	X+, r11
    238e:	cd 92       	st	X+, r12
    2390:	dd 92       	st	X+, r13
    2392:	ed 92       	st	X+, r14
    2394:	fd 92       	st	X+, r15
    2396:	0d 93       	st	X+, r16
    2398:	1d 93       	st	X+, r17
    239a:	cd 93       	st	X+, r28
    239c:	dd 93       	st	X+, r29
    239e:	ff 91       	pop	r31
    23a0:	ef 91       	pop	r30
    23a2:	8d b7       	in	r24, 0x3d	; 61
    23a4:	8d 93       	st	X+, r24
    23a6:	8e b7       	in	r24, 0x3e	; 62
    23a8:	8d 93       	st	X+, r24
    23aa:	8f b7       	in	r24, 0x3f	; 63
    23ac:	8d 93       	st	X+, r24
    23ae:	ed 93       	st	X+, r30
    23b0:	fd 93       	st	X+, r31
    23b2:	88 27       	eor	r24, r24
    23b4:	99 27       	eor	r25, r25
    23b6:	09 94       	ijmp

000023b8 <longjmp>:
    23b8:	dc 01       	movw	r26, r24
    23ba:	cb 01       	movw	r24, r22
    23bc:	81 30       	cpi	r24, 0x01	; 1
    23be:	91 05       	cpc	r25, r1
    23c0:	81 1d       	adc	r24, r1
    23c2:	2d 90       	ld	r2, X+
    23c4:	3d 90       	ld	r3, X+
    23c6:	4d 90       	ld	r4, X+
    23c8:	5d 90       	ld	r5, X+
    23ca:	6d 90       	ld	r6, X+
    23cc:	7d 90       	ld	r7, X+
    23ce:	8d 90       	ld	r8, X+
    23d0:	9d 90       	ld	r9, X+
    23d2:	ad 90       	ld	r10, X+
    23d4:	bd 90       	ld	r11, X+
    23d6:	cd 90       	ld	r12, X+
    23d8:	dd 90       	ld	r13, X+
    23da:	ed 90       	ld	r14, X+
    23dc:	fd 90       	ld	r15, X+
    23de:	0d 91       	ld	r16, X+
    23e0:	1d 91       	ld	r17, X+
    23e2:	cd 91       	ld	r28, X+
    23e4:	dd 91       	ld	r29, X+
    23e6:	ed 91       	ld	r30, X+
    23e8:	fd 91       	ld	r31, X+
    23ea:	0d 90       	ld	r0, X+
    23ec:	f8 94       	cli
    23ee:	fe bf       	out	0x3e, r31	; 62
    23f0:	0f be       	out	0x3f, r0	; 63
    23f2:	ed bf       	out	0x3d, r30	; 61
    23f4:	ed 91       	ld	r30, X+
    23f6:	fd 91       	ld	r31, X+
    23f8:	09 94       	ijmp

000023fa <_exit>:
    23fa:	f8 94       	cli

000023fc <__stop_program>:
    23fc:	ff cf       	rjmp	.-2      	; 0x23fc <__stop_program>
