
lab4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000052  00800100  000020e2  00002176  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000020e2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000357  00800152  00800152  000021c8  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000021c8  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000021f8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000002b8  00000000  00000000  00002238  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00003a17  00000000  00000000  000024f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000138a  00000000  00000000  00005f07  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001a2b  00000000  00000000  00007291  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000d98  00000000  00000000  00008cbc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000ab8  00000000  00000000  00009a54  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000036bd  00000000  00000000  0000a50c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000248  00000000  00000000  0000dbc9  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2e 00 	jmp	0x5c	; 0x5c <__ctors_end>
       4:	0c 94 5a 04 	jmp	0x8b4	; 0x8b4 <__vector_1>
       8:	0c 94 c9 04 	jmp	0x992	; 0x992 <__vector_2>
       c:	0c 94 38 05 	jmp	0xa70	; 0xa70 <__vector_3>
      10:	0c 94 a7 05 	jmp	0xb4e	; 0xb4e <__vector_4>
      14:	0c 94 16 06 	jmp	0xc2c	; 0xc2c <__vector_5>
      18:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
      1c:	0c 94 81 0c 	jmp	0x1902	; 0x1902 <__vector_7>
      20:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
      24:	0c 94 2f 0c 	jmp	0x185e	; 0x185e <__vector_9>
      28:	0c 94 85 06 	jmp	0xd0a	; 0xd0a <__vector_10>
      2c:	0c 94 f4 06 	jmp	0xde8	; 0xde8 <__vector_11>
      30:	0c 94 63 07 	jmp	0xec6	; 0xec6 <__vector_12>
      34:	0c 94 d2 07 	jmp	0xfa4	; 0xfa4 <__vector_13>
      38:	0c 94 41 08 	jmp	0x1082	; 0x1082 <__vector_14>
      3c:	0c 94 b0 08 	jmp	0x1160	; 0x1160 <__vector_15>
      40:	0c 94 1f 09 	jmp	0x123e	; 0x123e <__vector_16>
      44:	0c 94 8e 09 	jmp	0x131c	; 0x131c <__vector_17>
      48:	0c 94 fd 09 	jmp	0x13fa	; 0x13fa <__vector_18>
      4c:	0c 94 6c 0a 	jmp	0x14d8	; 0x14d8 <__vector_19>
      50:	0c 94 db 0a 	jmp	0x15b6	; 0x15b6 <__vector_20>
      54:	0c 94 4a 0b 	jmp	0x1694	; 0x1694 <__vector_21>
      58:	0c 94 b9 0b 	jmp	0x1772	; 0x1772 <__vector_22>

0000005c <__ctors_end>:
      5c:	11 24       	eor	r1, r1
      5e:	1f be       	out	0x3f, r1	; 63
      60:	cf ef       	ldi	r28, 0xFF	; 255
      62:	d4 e0       	ldi	r29, 0x04	; 4
      64:	de bf       	out	0x3e, r29	; 62
      66:	cd bf       	out	0x3d, r28	; 61

00000068 <__do_copy_data>:
      68:	11 e0       	ldi	r17, 0x01	; 1
      6a:	a0 e0       	ldi	r26, 0x00	; 0
      6c:	b1 e0       	ldi	r27, 0x01	; 1
      6e:	e2 ee       	ldi	r30, 0xE2	; 226
      70:	f0 e2       	ldi	r31, 0x20	; 32
      72:	02 c0       	rjmp	.+4      	; 0x78 <__do_copy_data+0x10>
      74:	05 90       	lpm	r0, Z+
      76:	0d 92       	st	X+, r0
      78:	a2 35       	cpi	r26, 0x52	; 82
      7a:	b1 07       	cpc	r27, r17
      7c:	d9 f7       	brne	.-10     	; 0x74 <__do_copy_data+0xc>

0000007e <__do_clear_bss>:
      7e:	24 e0       	ldi	r18, 0x04	; 4
      80:	a2 e5       	ldi	r26, 0x52	; 82
      82:	b1 e0       	ldi	r27, 0x01	; 1
      84:	01 c0       	rjmp	.+2      	; 0x88 <.do_clear_bss_start>

00000086 <.do_clear_bss_loop>:
      86:	1d 92       	st	X+, r1

00000088 <.do_clear_bss_start>:
      88:	a9 3a       	cpi	r26, 0xA9	; 169
      8a:	b2 07       	cpc	r27, r18
      8c:	e1 f7       	brne	.-8      	; 0x86 <.do_clear_bss_loop>
      8e:	0e 94 3d 02 	call	0x47a	; 0x47a <main>
      92:	0c 94 6f 10 	jmp	0x20de	; 0x20de <_exit>

00000096 <__bad_interrupt>:
      96:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000009a <upp_down_press_handeler>:
		ASYNC(self->app,change_pulse_gen,0);
	}
	
	
}
void upp_down_press_handeler(button_object *self, int arg){
      9a:	8f 92       	push	r8
      9c:	9f 92       	push	r9
      9e:	af 92       	push	r10
      a0:	bf 92       	push	r11
      a2:	cf 92       	push	r12
      a4:	df 92       	push	r13
      a6:	ef 92       	push	r14
      a8:	ff 92       	push	r15
      aa:	0f 93       	push	r16
      ac:	1f 93       	push	r17
      ae:	cf 93       	push	r28
      b0:	df 93       	push	r29
      b2:	00 d0       	rcall	.+0      	; 0xb4 <upp_down_press_handeler+0x1a>
      b4:	1f 92       	push	r1
      b6:	cd b7       	in	r28, 0x3d	; 61
      b8:	de b7       	in	r29, 0x3e	; 62
      ba:	5c 01       	movw	r10, r24
      bc:	4b 01       	movw	r8, r22
	volatile uint8_t up,down,press;
	press = SYNC(self->io,read_bit_B,4);
      be:	44 e0       	ldi	r20, 0x04	; 4
      c0:	50 e0       	ldi	r21, 0x00	; 0
      c2:	6e e7       	ldi	r22, 0x7E	; 126
      c4:	71 e0       	ldi	r23, 0x01	; 1
      c6:	fc 01       	movw	r30, r24
      c8:	86 81       	ldd	r24, Z+6	; 0x06
      ca:	97 81       	ldd	r25, Z+7	; 0x07
      cc:	0e 94 2a 0e 	call	0x1c54	; 0x1c54 <sync>
      d0:	8b 83       	std	Y+3, r24	; 0x03
	down = SYNC(self->io, read_bit_B,7);
      d2:	47 e0       	ldi	r20, 0x07	; 7
      d4:	50 e0       	ldi	r21, 0x00	; 0
      d6:	6e e7       	ldi	r22, 0x7E	; 126
      d8:	71 e0       	ldi	r23, 0x01	; 1
      da:	f5 01       	movw	r30, r10
      dc:	86 81       	ldd	r24, Z+6	; 0x06
      de:	97 81       	ldd	r25, Z+7	; 0x07
      e0:	0e 94 2a 0e 	call	0x1c54	; 0x1c54 <sync>
      e4:	8a 83       	std	Y+2, r24	; 0x02
	up = SYNC(self->io, read_bit_B,6);
      e6:	46 e0       	ldi	r20, 0x06	; 6
      e8:	50 e0       	ldi	r21, 0x00	; 0
      ea:	6e e7       	ldi	r22, 0x7E	; 126
      ec:	71 e0       	ldi	r23, 0x01	; 1
      ee:	f5 01       	movw	r30, r10
      f0:	86 81       	ldd	r24, Z+6	; 0x06
      f2:	97 81       	ldd	r25, Z+7	; 0x07
      f4:	0e 94 2a 0e 	call	0x1c54	; 0x1c54 <sync>
      f8:	89 83       	std	Y+1, r24	; 0x01
	if(up+down+press != 2)
      fa:	29 81       	ldd	r18, Y+1	; 0x01
      fc:	8a 81       	ldd	r24, Y+2	; 0x02
      fe:	90 e0       	ldi	r25, 0x00	; 0
     100:	82 0f       	add	r24, r18
     102:	91 1d       	adc	r25, r1
     104:	2b 81       	ldd	r18, Y+3	; 0x03
     106:	82 0f       	add	r24, r18
     108:	91 1d       	adc	r25, r1
     10a:	02 97       	sbiw	r24, 0x02	; 2
     10c:	09 f0       	breq	.+2      	; 0x110 <upp_down_press_handeler+0x76>
     10e:	57 c0       	rjmp	.+174    	; 0x1be <upp_down_press_handeler+0x124>
		return;

	if(up == 0)
     110:	89 81       	ldd	r24, Y+1	; 0x01
     112:	81 11       	cpse	r24, r1
     114:	15 c0       	rjmp	.+42     	; 0x140 <upp_down_press_handeler+0xa6>
		ASYNC(self->app,itterate_freq,1);
     116:	f5 01       	movw	r30, r10
     118:	04 81       	ldd	r16, Z+4	; 0x04
     11a:	15 81       	ldd	r17, Z+5	; 0x05
     11c:	cc 24       	eor	r12, r12
     11e:	c3 94       	inc	r12
     120:	d1 2c       	mov	r13, r1
     122:	0f 2e       	mov	r0, r31
     124:	fb e7       	ldi	r31, 0x7B	; 123
     126:	ef 2e       	mov	r14, r31
     128:	ff e0       	ldi	r31, 0x0F	; 15
     12a:	ff 2e       	mov	r15, r31
     12c:	f0 2d       	mov	r31, r0
     12e:	20 e0       	ldi	r18, 0x00	; 0
     130:	30 e0       	ldi	r19, 0x00	; 0
     132:	a9 01       	movw	r20, r18
     134:	60 e0       	ldi	r22, 0x00	; 0
     136:	70 e0       	ldi	r23, 0x00	; 0
     138:	cb 01       	movw	r24, r22
     13a:	0e 94 21 0d 	call	0x1a42	; 0x1a42 <async>
     13e:	2e c0       	rjmp	.+92     	; 0x19c <upp_down_press_handeler+0x102>
	else if(down == 0)
     140:	8a 81       	ldd	r24, Y+2	; 0x02
     142:	81 11       	cpse	r24, r1
     144:	15 c0       	rjmp	.+42     	; 0x170 <upp_down_press_handeler+0xd6>
		ASYNC(self->app,itterate_freq,-1);
     146:	f5 01       	movw	r30, r10
     148:	04 81       	ldd	r16, Z+4	; 0x04
     14a:	15 81       	ldd	r17, Z+5	; 0x05
     14c:	cc 24       	eor	r12, r12
     14e:	ca 94       	dec	r12
     150:	dc 2c       	mov	r13, r12
     152:	0f 2e       	mov	r0, r31
     154:	fb e7       	ldi	r31, 0x7B	; 123
     156:	ef 2e       	mov	r14, r31
     158:	ff e0       	ldi	r31, 0x0F	; 15
     15a:	ff 2e       	mov	r15, r31
     15c:	f0 2d       	mov	r31, r0
     15e:	20 e0       	ldi	r18, 0x00	; 0
     160:	30 e0       	ldi	r19, 0x00	; 0
     162:	a9 01       	movw	r20, r18
     164:	60 e0       	ldi	r22, 0x00	; 0
     166:	70 e0       	ldi	r23, 0x00	; 0
     168:	cb 01       	movw	r24, r22
     16a:	0e 94 21 0d 	call	0x1a42	; 0x1a42 <async>
     16e:	16 c0       	rjmp	.+44     	; 0x19c <upp_down_press_handeler+0x102>
	else if(press == 0){
     170:	8b 81       	ldd	r24, Y+3	; 0x03
     172:	81 11       	cpse	r24, r1
     174:	24 c0       	rjmp	.+72     	; 0x1be <upp_down_press_handeler+0x124>
		ASYNC(self->app,save_freq,0);
     176:	f5 01       	movw	r30, r10
     178:	04 81       	ldd	r16, Z+4	; 0x04
     17a:	15 81       	ldd	r17, Z+5	; 0x05
     17c:	c1 2c       	mov	r12, r1
     17e:	d1 2c       	mov	r13, r1
     180:	0f 2e       	mov	r0, r31
     182:	fd e8       	ldi	r31, 0x8D	; 141
     184:	ef 2e       	mov	r14, r31
     186:	ff e0       	ldi	r31, 0x0F	; 15
     188:	ff 2e       	mov	r15, r31
     18a:	f0 2d       	mov	r31, r0
     18c:	20 e0       	ldi	r18, 0x00	; 0
     18e:	30 e0       	ldi	r19, 0x00	; 0
     190:	a9 01       	movw	r20, r18
     192:	60 e0       	ldi	r22, 0x00	; 0
     194:	70 e0       	ldi	r23, 0x00	; 0
     196:	cb 01       	movw	r24, r22
     198:	0e 94 21 0d 	call	0x1a42	; 0x1a42 <async>
	}
	else
		return;
	AFTER(MSEC(cool_delay),self,upp_down_press_handeler,arg);
     19c:	64 01       	movw	r12, r8
     19e:	0f 2e       	mov	r0, r31
     1a0:	fd e4       	ldi	r31, 0x4D	; 77
     1a2:	ef 2e       	mov	r14, r31
     1a4:	f0 e0       	ldi	r31, 0x00	; 0
     1a6:	ff 2e       	mov	r15, r31
     1a8:	f0 2d       	mov	r31, r0
     1aa:	85 01       	movw	r16, r10
     1ac:	20 e0       	ldi	r18, 0x00	; 0
     1ae:	30 e0       	ldi	r19, 0x00	; 0
     1b0:	a9 01       	movw	r20, r18
     1b2:	69 e0       	ldi	r22, 0x09	; 9
     1b4:	7d e3       	ldi	r23, 0x3D	; 61
     1b6:	80 e0       	ldi	r24, 0x00	; 0
     1b8:	90 e0       	ldi	r25, 0x00	; 0
     1ba:	0e 94 21 0d 	call	0x1a42	; 0x1a42 <async>
	
     1be:	0f 90       	pop	r0
     1c0:	0f 90       	pop	r0
     1c2:	0f 90       	pop	r0
     1c4:	df 91       	pop	r29
     1c6:	cf 91       	pop	r28
     1c8:	1f 91       	pop	r17
     1ca:	0f 91       	pop	r16
     1cc:	ff 90       	pop	r15
     1ce:	ef 90       	pop	r14
     1d0:	df 90       	pop	r13
     1d2:	cf 90       	pop	r12
     1d4:	bf 90       	pop	r11
     1d6:	af 90       	pop	r10
     1d8:	9f 90       	pop	r9
     1da:	8f 90       	pop	r8
     1dc:	08 95       	ret

000001de <left_right_handeler>:
 * Created: 2022-02-23 08:33:01
 *  Author: ivarj
 */ 
#include "../include/button.h"
#define cool_delay 500
void left_right_handeler(button_object *self,int arg){
     1de:	cf 92       	push	r12
     1e0:	df 92       	push	r13
     1e2:	ef 92       	push	r14
     1e4:	ff 92       	push	r15
     1e6:	0f 93       	push	r16
     1e8:	1f 93       	push	r17
     1ea:	cf 93       	push	r28
     1ec:	df 93       	push	r29
     1ee:	00 d0       	rcall	.+0      	; 0x1f0 <left_right_handeler+0x12>
     1f0:	cd b7       	in	r28, 0x3d	; 61
     1f2:	de b7       	in	r29, 0x3e	; 62
     1f4:	8c 01       	movw	r16, r24
	volatile uint8_t left,right;
	left = SYNC(self->io,read_bit_E,2);
     1f6:	42 e0       	ldi	r20, 0x02	; 2
     1f8:	50 e0       	ldi	r21, 0x00	; 0
     1fa:	6a e6       	ldi	r22, 0x6A	; 106
     1fc:	71 e0       	ldi	r23, 0x01	; 1
     1fe:	fc 01       	movw	r30, r24
     200:	86 81       	ldd	r24, Z+6	; 0x06
     202:	97 81       	ldd	r25, Z+7	; 0x07
     204:	0e 94 2a 0e 	call	0x1c54	; 0x1c54 <sync>
     208:	89 83       	std	Y+1, r24	; 0x01
	right = SYNC(self->io, read_bit_E,3);
     20a:	43 e0       	ldi	r20, 0x03	; 3
     20c:	50 e0       	ldi	r21, 0x00	; 0
     20e:	6a e6       	ldi	r22, 0x6A	; 106
     210:	71 e0       	ldi	r23, 0x01	; 1
     212:	f8 01       	movw	r30, r16
     214:	86 81       	ldd	r24, Z+6	; 0x06
     216:	97 81       	ldd	r25, Z+7	; 0x07
     218:	0e 94 2a 0e 	call	0x1c54	; 0x1c54 <sync>
     21c:	8a 83       	std	Y+2, r24	; 0x02
	if(right +left != 1)
     21e:	2a 81       	ldd	r18, Y+2	; 0x02
     220:	89 81       	ldd	r24, Y+1	; 0x01
     222:	90 e0       	ldi	r25, 0x00	; 0
     224:	82 0f       	add	r24, r18
     226:	91 1d       	adc	r25, r1
     228:	01 97       	sbiw	r24, 0x01	; 1
     22a:	71 f5       	brne	.+92     	; 0x288 <__EEPROM_REGION_LENGTH__+0x88>
		return;
	if(right == 0){
     22c:	8a 81       	ldd	r24, Y+2	; 0x02
     22e:	81 11       	cpse	r24, r1
     230:	15 c0       	rjmp	.+42     	; 0x25c <__EEPROM_REGION_LENGTH__+0x5c>
		ASYNC(self->app,change_pulse_gen,1);
     232:	f8 01       	movw	r30, r16
     234:	04 81       	ldd	r16, Z+4	; 0x04
     236:	15 81       	ldd	r17, Z+5	; 0x05
     238:	cc 24       	eor	r12, r12
     23a:	c3 94       	inc	r12
     23c:	d1 2c       	mov	r13, r1
     23e:	0f 2e       	mov	r0, r31
     240:	f8 e7       	ldi	r31, 0x78	; 120
     242:	ef 2e       	mov	r14, r31
     244:	ff e0       	ldi	r31, 0x0F	; 15
     246:	ff 2e       	mov	r15, r31
     248:	f0 2d       	mov	r31, r0
     24a:	20 e0       	ldi	r18, 0x00	; 0
     24c:	30 e0       	ldi	r19, 0x00	; 0
     24e:	a9 01       	movw	r20, r18
     250:	60 e0       	ldi	r22, 0x00	; 0
     252:	70 e0       	ldi	r23, 0x00	; 0
     254:	cb 01       	movw	r24, r22
     256:	0e 94 21 0d 	call	0x1a42	; 0x1a42 <async>
     25a:	16 c0       	rjmp	.+44     	; 0x288 <__EEPROM_REGION_LENGTH__+0x88>
	}
	else if(left == 0){
     25c:	89 81       	ldd	r24, Y+1	; 0x01
     25e:	81 11       	cpse	r24, r1
     260:	13 c0       	rjmp	.+38     	; 0x288 <__EEPROM_REGION_LENGTH__+0x88>
		ASYNC(self->app,change_pulse_gen,0);
     262:	f8 01       	movw	r30, r16
     264:	04 81       	ldd	r16, Z+4	; 0x04
     266:	15 81       	ldd	r17, Z+5	; 0x05
     268:	c1 2c       	mov	r12, r1
     26a:	d1 2c       	mov	r13, r1
     26c:	0f 2e       	mov	r0, r31
     26e:	f8 e7       	ldi	r31, 0x78	; 120
     270:	ef 2e       	mov	r14, r31
     272:	ff e0       	ldi	r31, 0x0F	; 15
     274:	ff 2e       	mov	r15, r31
     276:	f0 2d       	mov	r31, r0
     278:	20 e0       	ldi	r18, 0x00	; 0
     27a:	30 e0       	ldi	r19, 0x00	; 0
     27c:	a9 01       	movw	r20, r18
     27e:	60 e0       	ldi	r22, 0x00	; 0
     280:	70 e0       	ldi	r23, 0x00	; 0
     282:	cb 01       	movw	r24, r22
     284:	0e 94 21 0d 	call	0x1a42	; 0x1a42 <async>
	}
	
	
}
     288:	0f 90       	pop	r0
     28a:	0f 90       	pop	r0
     28c:	df 91       	pop	r29
     28e:	cf 91       	pop	r28
     290:	1f 91       	pop	r17
     292:	0f 91       	pop	r16
     294:	ff 90       	pop	r15
     296:	ef 90       	pop	r14
     298:	df 90       	pop	r13
     29a:	cf 90       	pop	r12
     29c:	08 95       	ret

0000029e <set_high>:
		return;
	uint8_t field = 1<<(offset);
	PINE = PINE ^ field;
}
volatile void set_high(io_object *self,uint8_t offset){
	if (offset >7)
     29e:	68 30       	cpi	r22, 0x08	; 8
     2a0:	50 f4       	brcc	.+20     	; 0x2b6 <set_high+0x18>
		return;
	uint8_t field = 1<<(offset);
     2a2:	81 e0       	ldi	r24, 0x01	; 1
     2a4:	90 e0       	ldi	r25, 0x00	; 0
     2a6:	02 c0       	rjmp	.+4      	; 0x2ac <set_high+0xe>
     2a8:	88 0f       	add	r24, r24
     2aa:	99 1f       	adc	r25, r25
     2ac:	6a 95       	dec	r22
     2ae:	e2 f7       	brpl	.-8      	; 0x2a8 <set_high+0xa>
	PINE = PINE|(field);
     2b0:	9c b1       	in	r25, 0x0c	; 12
     2b2:	89 2b       	or	r24, r25
     2b4:	8c b9       	out	0x0c, r24	; 12
     2b6:	08 95       	ret

000002b8 <set_low>:
	
}
volatile void set_low(io_object *self,uint8_t offset){
	if (offset >7)
     2b8:	68 30       	cpi	r22, 0x08	; 8
     2ba:	58 f4       	brcc	.+22     	; 0x2d2 <set_low+0x1a>
		return;
	uint8_t field = ~(1<<offset);
     2bc:	81 e0       	ldi	r24, 0x01	; 1
     2be:	90 e0       	ldi	r25, 0x00	; 0
     2c0:	02 c0       	rjmp	.+4      	; 0x2c6 <set_low+0xe>
     2c2:	88 0f       	add	r24, r24
     2c4:	99 1f       	adc	r25, r25
     2c6:	6a 95       	dec	r22
     2c8:	e2 f7       	brpl	.-8      	; 0x2c2 <set_low+0xa>
     2ca:	80 95       	com	r24
	PINE = PINE&field;
     2cc:	9c b1       	in	r25, 0x0c	; 12
     2ce:	89 23       	and	r24, r25
     2d0:	8c b9       	out	0x0c, r24	; 12
     2d2:	08 95       	ret

000002d4 <read_bit_E>:
	
}
volatile uint8_t read_bit_E(io_object *self,uint8_t offset){
	if (offset >7)
     2d4:	68 30       	cpi	r22, 0x08	; 8
     2d6:	88 f4       	brcc	.+34     	; 0x2fa <read_bit_E+0x26>
	return;
	uint8_t field_mask = 1<<offset;
     2d8:	81 e0       	ldi	r24, 0x01	; 1
     2da:	90 e0       	ldi	r25, 0x00	; 0
     2dc:	06 2e       	mov	r0, r22
     2de:	02 c0       	rjmp	.+4      	; 0x2e4 <read_bit_E+0x10>
     2e0:	88 0f       	add	r24, r24
     2e2:	99 1f       	adc	r25, r25
     2e4:	0a 94       	dec	r0
     2e6:	e2 f7       	brpl	.-8      	; 0x2e0 <read_bit_E+0xc>
	uint8_t reg_val = PINE;
     2e8:	9c b1       	in	r25, 0x0c	; 12
	uint8_t field_val = (reg_val&field_mask)>>offset;
     2ea:	89 23       	and	r24, r25
     2ec:	90 e0       	ldi	r25, 0x00	; 0
     2ee:	02 c0       	rjmp	.+4      	; 0x2f4 <read_bit_E+0x20>
     2f0:	95 95       	asr	r25
     2f2:	87 95       	ror	r24
     2f4:	6a 95       	dec	r22
     2f6:	e2 f7       	brpl	.-8      	; 0x2f0 <read_bit_E+0x1c>
	return field_val;
     2f8:	08 95       	ret
}
     2fa:	08 95       	ret

000002fc <read_bit_B>:
volatile uint8_t read_bit_B(io_object *self,uint8_t offset){
	if (offset >7)
     2fc:	68 30       	cpi	r22, 0x08	; 8
     2fe:	88 f4       	brcc	.+34     	; 0x322 <read_bit_B+0x26>
	return;
	uint8_t field_mask = 1<<offset;
     300:	81 e0       	ldi	r24, 0x01	; 1
     302:	90 e0       	ldi	r25, 0x00	; 0
     304:	06 2e       	mov	r0, r22
     306:	02 c0       	rjmp	.+4      	; 0x30c <read_bit_B+0x10>
     308:	88 0f       	add	r24, r24
     30a:	99 1f       	adc	r25, r25
     30c:	0a 94       	dec	r0
     30e:	e2 f7       	brpl	.-8      	; 0x308 <read_bit_B+0xc>
	uint8_t reg_val = PINB;
     310:	93 b1       	in	r25, 0x03	; 3
	uint8_t field_val = (reg_val&field_mask)>>offset;
     312:	89 23       	and	r24, r25
     314:	90 e0       	ldi	r25, 0x00	; 0
     316:	02 c0       	rjmp	.+4      	; 0x31c <read_bit_B+0x20>
     318:	95 95       	asr	r25
     31a:	87 95       	ror	r24
     31c:	6a 95       	dec	r22
     31e:	e2 f7       	brpl	.-8      	; 0x318 <read_bit_B+0x1c>
	return field_val;
     320:	08 95       	ret
     322:	08 95       	ret

00000324 <init_lcd>:
/************************************************************************/

void swap_segment(void){
	
	LCDDR13 = LCDDR13^1;
	LCDDR18 = LCDDR18^1;
     324:	e4 ee       	ldi	r30, 0xE4	; 228
     326:	f0 e0       	ldi	r31, 0x00	; 0
     328:	80 81       	ld	r24, Z
     32a:	80 6c       	ori	r24, 0xC0	; 192
     32c:	8e 7e       	andi	r24, 0xEE	; 238
     32e:	80 83       	st	Z, r24
     330:	e5 ee       	ldi	r30, 0xE5	; 229
     332:	f0 e0       	ldi	r31, 0x00	; 0
     334:	80 81       	ld	r24, Z
     336:	87 6b       	ori	r24, 0xB7	; 183
     338:	80 83       	st	Z, r24
     33a:	e6 ee       	ldi	r30, 0xE6	; 230
     33c:	f0 e0       	ldi	r31, 0x00	; 0
     33e:	80 81       	ld	r24, Z
     340:	88 78       	andi	r24, 0x88	; 136
     342:	87 60       	ori	r24, 0x07	; 7
     344:	80 83       	st	Z, r24
     346:	e7 ee       	ldi	r30, 0xE7	; 231
     348:	f0 e0       	ldi	r31, 0x00	; 0
     34a:	80 81       	ld	r24, Z
     34c:	80 71       	andi	r24, 0x10	; 16
     34e:	8f 60       	ori	r24, 0x0F	; 15
     350:	80 83       	st	Z, r24
     352:	08 95       	ret

00000354 <write_char>:
     354:	cf 93       	push	r28
     356:	c6 2f       	mov	r28, r22
     358:	66 30       	cpi	r22, 0x06	; 6
     35a:	71 05       	cpc	r23, r1
     35c:	c0 f5       	brcc	.+112    	; 0x3ce <write_char+0x7a>
     35e:	75 95       	asr	r23
     360:	67 95       	ror	r22
     362:	fb 01       	movw	r30, r22
     364:	e4 51       	subi	r30, 0x14	; 20
     366:	ff 4f       	sbci	r31, 0xFF	; 255
     368:	90 ed       	ldi	r25, 0xD0	; 208
     36a:	98 0f       	add	r25, r24
     36c:	9a 30       	cpi	r25, 0x0A	; 10
     36e:	60 f4       	brcc	.+24     	; 0x388 <write_char+0x34>
     370:	a8 2f       	mov	r26, r24
     372:	b0 e0       	ldi	r27, 0x00	; 0
     374:	d0 97       	sbiw	r26, 0x30	; 48
     376:	aa 0f       	add	r26, r26
     378:	bb 1f       	adc	r27, r27
     37a:	aa 0f       	add	r26, r26
     37c:	bb 1f       	adc	r27, r27
     37e:	a0 50       	subi	r26, 0x00	; 0
     380:	bf 4f       	sbci	r27, 0xFF	; 255
     382:	4d 91       	ld	r20, X+
     384:	5c 91       	ld	r21, X
     386:	02 c0       	rjmp	.+4      	; 0x38c <write_char+0x38>
     388:	40 e0       	ldi	r20, 0x00	; 0
     38a:	50 e0       	ldi	r21, 0x00	; 0
     38c:	20 e0       	ldi	r18, 0x00	; 0
     38e:	30 e0       	ldi	r19, 0x00	; 0
     390:	1b c0       	rjmp	.+54     	; 0x3c8 <write_char+0x74>
     392:	94 2f       	mov	r25, r20
     394:	9f 70       	andi	r25, 0x0F	; 15
     396:	52 95       	swap	r21
     398:	42 95       	swap	r20
     39a:	4f 70       	andi	r20, 0x0F	; 15
     39c:	45 27       	eor	r20, r21
     39e:	5f 70       	andi	r21, 0x0F	; 15
     3a0:	45 27       	eor	r20, r21
     3a2:	c0 fd       	sbrc	r28, 0
     3a4:	05 c0       	rjmp	.+10     	; 0x3b0 <write_char+0x5c>
     3a6:	80 81       	ld	r24, Z
     3a8:	80 7f       	andi	r24, 0xF0	; 240
     3aa:	89 2b       	or	r24, r25
     3ac:	80 83       	st	Z, r24
     3ae:	09 c0       	rjmp	.+18     	; 0x3c2 <write_char+0x6e>
     3b0:	80 81       	ld	r24, Z
     3b2:	68 2f       	mov	r22, r24
     3b4:	6f 70       	andi	r22, 0x0F	; 15
     3b6:	70 e1       	ldi	r23, 0x10	; 16
     3b8:	97 9f       	mul	r25, r23
     3ba:	c0 01       	movw	r24, r0
     3bc:	11 24       	eor	r1, r1
     3be:	86 2b       	or	r24, r22
     3c0:	80 83       	st	Z, r24
     3c2:	35 96       	adiw	r30, 0x05	; 5
     3c4:	2f 5f       	subi	r18, 0xFF	; 255
     3c6:	3f 4f       	sbci	r19, 0xFF	; 255
     3c8:	24 30       	cpi	r18, 0x04	; 4
     3ca:	31 05       	cpc	r19, r1
     3cc:	14 f3       	brlt	.-60     	; 0x392 <write_char+0x3e>
     3ce:	cf 91       	pop	r28
     3d0:	08 95       	ret

000003d2 <print_at>:
}
void print_at(uint8_t num, uint8_t pos, uint8_t width){
     3d2:	0f 93       	push	r16
     3d4:	1f 93       	push	r17
     3d6:	cf 93       	push	r28
     3d8:	df 93       	push	r29
     3da:	18 2f       	mov	r17, r24
     3dc:	06 2f       	mov	r16, r22
	for(int i = width-1; i >= 0; i--){
     3de:	c4 2f       	mov	r28, r20
     3e0:	d0 e0       	ldi	r29, 0x00	; 0
     3e2:	21 97       	sbiw	r28, 0x01	; 1
     3e4:	1a c0       	rjmp	.+52     	; 0x41a <__DATA_REGION_LENGTH__+0x1a>
		uint8_t temp = num%10;
     3e6:	9d ec       	ldi	r25, 0xCD	; 205
     3e8:	19 9f       	mul	r17, r25
     3ea:	91 2d       	mov	r25, r1
     3ec:	11 24       	eor	r1, r1
     3ee:	89 2f       	mov	r24, r25
     3f0:	86 95       	lsr	r24
     3f2:	86 95       	lsr	r24
     3f4:	86 95       	lsr	r24
     3f6:	88 0f       	add	r24, r24
     3f8:	28 2f       	mov	r18, r24
     3fa:	22 0f       	add	r18, r18
     3fc:	22 0f       	add	r18, r18
     3fe:	82 0f       	add	r24, r18
     400:	18 1b       	sub	r17, r24
     402:	81 2f       	mov	r24, r17
		num = num/10;
     404:	19 2f       	mov	r17, r25
     406:	16 95       	lsr	r17
     408:	16 95       	lsr	r17
     40a:	16 95       	lsr	r17
		write_char(temp+48,pos+i);
     40c:	be 01       	movw	r22, r28
     40e:	60 0f       	add	r22, r16
     410:	71 1d       	adc	r23, r1
     412:	80 5d       	subi	r24, 0xD0	; 208
     414:	0e 94 aa 01 	call	0x354	; 0x354 <write_char>
	
	LCDDR13 = LCDDR13^1;
	LCDDR18 = LCDDR18^1;
}
void print_at(uint8_t num, uint8_t pos, uint8_t width){
	for(int i = width-1; i >= 0; i--){
     418:	21 97       	sbiw	r28, 0x01	; 1
     41a:	dd 23       	and	r29, r29
     41c:	24 f7       	brge	.-56     	; 0x3e6 <print_at+0x14>
		uint8_t temp = num%10;
		num = num/10;
		write_char(temp+48,pos+i);
	}
}
     41e:	df 91       	pop	r29
     420:	cf 91       	pop	r28
     422:	1f 91       	pop	r17
     424:	0f 91       	pop	r16
     426:	08 95       	ret

00000428 <init_outputs>:
#define REG_API_H
#include <stdint-gcc.h>
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wdiscarded-qualifiers"
inline void read_8(uint8_t *reg, uint8_t *ret){
	*ret = *reg;
     428:	8d b1       	in	r24, 0x0d	; 13
inline void write_8_field(uint8_t *reg,uint8_t value, uint8_t field_width,uint8_t offset){
	uint8_t temp;
	read_8(reg,&temp);
	// Masks out the relevant bits
	uint8_t mask = ((1<<field_width)-1)<<offset;
	value = ((~(mask))&temp)| (value<<offset&mask);
     42a:	80 65       	ori	r24, 0x50	; 80
}
inline void read_16(uint8_t *reg, uint16_t *ret){
	return;
};
inline void write_8(uint8_t *reg, uint8_t val){
	*reg = val;
     42c:	8d b9       	out	0x0d, r24	; 13
#define REG_API_H
#include <stdint-gcc.h>
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wdiscarded-qualifiers"
inline void read_8(uint8_t *reg, uint8_t *ret){
	*ret = *reg;
     42e:	8e b1       	in	r24, 0x0e	; 14
inline void write_8_field(uint8_t *reg,uint8_t value, uint8_t field_width,uint8_t offset){
	uint8_t temp;
	read_8(reg,&temp);
	// Masks out the relevant bits
	uint8_t mask = ((1<<field_width)-1)<<offset;
	value = ((~(mask))&temp)| (value<<offset&mask);
     430:	80 65       	ori	r24, 0x50	; 80
}
inline void read_16(uint8_t *reg, uint16_t *ret){
	return;
};
inline void write_8(uint8_t *reg, uint8_t val){
	*reg = val;
     432:	8e b9       	out	0x0e, r24	; 14
     434:	08 95       	ret

00000436 <init_joystick>:
#define REG_API_H
#include <stdint-gcc.h>
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wdiscarded-qualifiers"
inline void read_8(uint8_t *reg, uint8_t *ret){
	*ret = *reg;
     436:	85 b1       	in	r24, 0x05	; 5
inline void write_8_field(uint8_t *reg,uint8_t value, uint8_t field_width,uint8_t offset){
	uint8_t temp;
	read_8(reg,&temp);
	// Masks out the relevant bits
	uint8_t mask = ((1<<field_width)-1)<<offset;
	value = ((~(mask))&temp)| (value<<offset&mask);
     438:	80 6d       	ori	r24, 0xD0	; 208
}
inline void read_16(uint8_t *reg, uint16_t *ret){
	return;
};
inline void write_8(uint8_t *reg, uint8_t val){
	*reg = val;
     43a:	85 b9       	out	0x05, r24	; 5
#define REG_API_H
#include <stdint-gcc.h>
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wdiscarded-qualifiers"
inline void read_8(uint8_t *reg, uint8_t *ret){
	*ret = *reg;
     43c:	8e b1       	in	r24, 0x0e	; 14
inline void write_8_field(uint8_t *reg,uint8_t value, uint8_t field_width,uint8_t offset){
	uint8_t temp;
	read_8(reg,&temp);
	// Masks out the relevant bits
	uint8_t mask = ((1<<field_width)-1)<<offset;
	value = ((~(mask))&temp)| (value<<offset&mask);
     43e:	8c 60       	ori	r24, 0x0C	; 12
}
inline void read_16(uint8_t *reg, uint16_t *ret){
	return;
};
inline void write_8(uint8_t *reg, uint8_t val){
	*reg = val;
     440:	8e b9       	out	0x0e, r24	; 14
	// Set all the relevant regs, this is not run as a task so it should be ok to assume that no interrupts can occur
	// Setting pullup enabled for pin b
	write_8_field(&PORTB,3,2,6); // Set portb 6,7 to pullup enabled
	write_8_field(&PORTB,1,1,4); // Set port b 4 to input pullup enabled
	write_8_field(&PORTE,3,2,2); // Set porte 2,3 to pullup enabled
	EIMSK = (1<<PCIE1) | (1<<PCIE0) | EIMSK;
     442:	8d b3       	in	r24, 0x1d	; 29
     444:	80 6c       	ori	r24, 0xC0	; 192
     446:	8d bb       	out	0x1d, r24	; 29
#define REG_API_H
#include <stdint-gcc.h>
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wdiscarded-qualifiers"
inline void read_8(uint8_t *reg, uint8_t *ret){
	*ret = *reg;
     448:	eb e6       	ldi	r30, 0x6B	; 107
     44a:	f0 e0       	ldi	r31, 0x00	; 0
     44c:	80 81       	ld	r24, Z
inline void write_8_field(uint8_t *reg,uint8_t value, uint8_t field_width,uint8_t offset){
	uint8_t temp;
	read_8(reg,&temp);
	// Masks out the relevant bits
	uint8_t mask = ((1<<field_width)-1)<<offset;
	value = ((~(mask))&temp)| (value<<offset&mask);
     44e:	8c 60       	ori	r24, 0x0C	; 12
}
inline void read_16(uint8_t *reg, uint16_t *ret){
	return;
};
inline void write_8(uint8_t *reg, uint8_t val){
	*reg = val;
     450:	80 83       	st	Z, r24
#define REG_API_H
#include <stdint-gcc.h>
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wdiscarded-qualifiers"
inline void read_8(uint8_t *reg, uint8_t *ret){
	*ret = *reg;
     452:	ec e6       	ldi	r30, 0x6C	; 108
     454:	f0 e0       	ldi	r31, 0x00	; 0
     456:	80 81       	ld	r24, Z
inline void write_8_field(uint8_t *reg,uint8_t value, uint8_t field_width,uint8_t offset){
	uint8_t temp;
	read_8(reg,&temp);
	// Masks out the relevant bits
	uint8_t mask = ((1<<field_width)-1)<<offset;
	value = ((~(mask))&temp)| (value<<offset&mask);
     458:	80 6d       	ori	r24, 0xD0	; 208
}
inline void read_16(uint8_t *reg, uint16_t *ret){
	return;
};
inline void write_8(uint8_t *reg, uint8_t val){
	*reg = val;
     45a:	80 83       	st	Z, r24
	//write_8_field(&EIMSK,3,2,6); // enable all ext int
	write_8_field(&PCMSK0,3,2,2); // Enable interrupts on PCINT2,3
	write_8_field(&PCMSK1,0b11,2,6); // Enable intrrupts PCINT15,14
	write_8_field(&PCMSK1,1,1,4);
	// int 15,14,12,3,2
	INSTALL(&button,left_right_handeler,IRQ_PCINT0);
     45c:	41 e0       	ldi	r20, 0x01	; 1
     45e:	6f ee       	ldi	r22, 0xEF	; 239
     460:	70 e0       	ldi	r23, 0x00	; 0
     462:	88 e2       	ldi	r24, 0x28	; 40
     464:	91 e0       	ldi	r25, 0x01	; 1
     466:	0e 94 04 0f 	call	0x1e08	; 0x1e08 <install>
	INSTALL(&button,upp_down_press_handeler,IRQ_PCINT1);
     46a:	42 e0       	ldi	r20, 0x02	; 2
     46c:	6d e4       	ldi	r22, 0x4D	; 77
     46e:	70 e0       	ldi	r23, 0x00	; 0
     470:	88 e2       	ldi	r24, 0x28	; 40
     472:	91 e0       	ldi	r25, 0x01	; 1
     474:	0e 94 04 0f 	call	0x1e08	; 0x1e08 <install>
     478:	08 95       	ret

0000047a <main>:
}
int main(void)
{
	init_lcd();
     47a:	0e 94 92 01 	call	0x324	; 0x324 <init_lcd>
	init_outputs();
     47e:	0e 94 14 02 	call	0x428	; 0x428 <init_outputs>
	init_joystick();
     482:	0e 94 1b 02 	call	0x436	; 0x436 <init_joystick>
	return TINYTIMBER(&app,app_entry,0);
     486:	40 e0       	ldi	r20, 0x00	; 0
     488:	50 e0       	ldi	r21, 0x00	; 0
     48a:	6a ea       	ldi	r22, 0xAA	; 170
     48c:	7f e0       	ldi	r23, 0x0F	; 15
     48e:	80 e3       	ldi	r24, 0x30	; 48
     490:	91 e0       	ldi	r25, 0x01	; 1
     492:	0e 94 1f 0f 	call	0x1e3e	; 0x1e3e <tinytimber>
}
     496:	08 95       	ret

00000498 <pulse>:
 *
 * Created: 2022-02-22 14:27:18
 *  Author: ivarj
 */ 
#include "../include/puls_gen.h"
void pulse(pulse_gen *self, uint8_t arg){
     498:	bf 92       	push	r11
     49a:	cf 92       	push	r12
     49c:	df 92       	push	r13
     49e:	ef 92       	push	r14
     4a0:	ff 92       	push	r15
     4a2:	0f 93       	push	r16
     4a4:	1f 93       	push	r17
     4a6:	cf 93       	push	r28
     4a8:	df 93       	push	r29
     4aa:	ec 01       	movw	r28, r24
	if(self->freq !=0){
     4ac:	6c 81       	ldd	r22, Y+4	; 0x04
     4ae:	66 23       	and	r22, r22
     4b0:	09 f4       	brne	.+2      	; 0x4b4 <pulse+0x1c>
     4b2:	5a c0       	rjmp	.+180    	; 0x568 <__stack+0x69>
		uint8_t delay = 1000/self->freq;
     4b4:	70 e0       	ldi	r23, 0x00	; 0
     4b6:	88 ee       	ldi	r24, 0xE8	; 232
     4b8:	93 e0       	ldi	r25, 0x03	; 3
     4ba:	0e 94 f7 0f 	call	0x1fee	; 0x1fee <__divmodhi4>
     4be:	f6 2e       	mov	r15, r22
     4c0:	b6 2e       	mov	r11, r22
		SYNC(self->reg_handeler,set_low,self->bit_offset);
     4c2:	4d 81       	ldd	r20, Y+5	; 0x05
     4c4:	50 e0       	ldi	r21, 0x00	; 0
     4c6:	6c e5       	ldi	r22, 0x5C	; 92
     4c8:	71 e0       	ldi	r23, 0x01	; 1
     4ca:	8e 81       	ldd	r24, Y+6	; 0x06
     4cc:	9f 81       	ldd	r25, Y+7	; 0x07
     4ce:	0e 94 2a 0e 	call	0x1c54	; 0x1c54 <sync>
		AFTER(MSEC(delay/2),self->reg_handeler,set_high,self->bit_offset);
     4d2:	cd 80       	ldd	r12, Y+5	; 0x05
     4d4:	0e 81       	ldd	r16, Y+6	; 0x06
     4d6:	1f 81       	ldd	r17, Y+7	; 0x07
     4d8:	f6 94       	lsr	r15
     4da:	2f 2d       	mov	r18, r15
     4dc:	30 e0       	ldi	r19, 0x00	; 0
     4de:	ad e7       	ldi	r26, 0x7D	; 125
     4e0:	b0 e0       	ldi	r27, 0x00	; 0
     4e2:	0e 94 0b 10 	call	0x2016	; 0x2016 <__umulhisi3>
     4e6:	38 2f       	mov	r19, r24
     4e8:	29 2f       	mov	r18, r25
     4ea:	d1 2c       	mov	r13, r1
     4ec:	86 2f       	mov	r24, r22
     4ee:	97 2f       	mov	r25, r23
     4f0:	a3 2f       	mov	r26, r19
     4f2:	b2 2f       	mov	r27, r18
     4f4:	bc 01       	movw	r22, r24
     4f6:	cd 01       	movw	r24, r26
     4f8:	95 95       	asr	r25
     4fa:	87 95       	ror	r24
     4fc:	77 95       	ror	r23
     4fe:	67 95       	ror	r22
     500:	95 95       	asr	r25
     502:	87 95       	ror	r24
     504:	77 95       	ror	r23
     506:	67 95       	ror	r22
     508:	0f 2e       	mov	r0, r31
     50a:	ff e4       	ldi	r31, 0x4F	; 79
     50c:	ef 2e       	mov	r14, r31
     50e:	f1 e0       	ldi	r31, 0x01	; 1
     510:	ff 2e       	mov	r15, r31
     512:	f0 2d       	mov	r31, r0
     514:	20 e0       	ldi	r18, 0x00	; 0
     516:	30 e0       	ldi	r19, 0x00	; 0
     518:	a9 01       	movw	r20, r18
     51a:	0e 94 21 0d 	call	0x1a42	; 0x1a42 <async>
		AFTER(MSEC(delay),self,pulse,0);
     51e:	2b 2d       	mov	r18, r11
     520:	30 e0       	ldi	r19, 0x00	; 0
     522:	ad e7       	ldi	r26, 0x7D	; 125
     524:	b0 e0       	ldi	r27, 0x00	; 0
     526:	0e 94 0b 10 	call	0x2016	; 0x2016 <__umulhisi3>
     52a:	38 2f       	mov	r19, r24
     52c:	29 2f       	mov	r18, r25
     52e:	86 2f       	mov	r24, r22
     530:	97 2f       	mov	r25, r23
     532:	a3 2f       	mov	r26, r19
     534:	b2 2f       	mov	r27, r18
     536:	bc 01       	movw	r22, r24
     538:	cd 01       	movw	r24, r26
     53a:	95 95       	asr	r25
     53c:	87 95       	ror	r24
     53e:	77 95       	ror	r23
     540:	67 95       	ror	r22
     542:	95 95       	asr	r25
     544:	87 95       	ror	r24
     546:	77 95       	ror	r23
     548:	67 95       	ror	r22
     54a:	c1 2c       	mov	r12, r1
     54c:	d1 2c       	mov	r13, r1
     54e:	0f 2e       	mov	r0, r31
     550:	fc e4       	ldi	r31, 0x4C	; 76
     552:	ef 2e       	mov	r14, r31
     554:	f2 e0       	ldi	r31, 0x02	; 2
     556:	ff 2e       	mov	r15, r31
     558:	f0 2d       	mov	r31, r0
     55a:	8e 01       	movw	r16, r28
     55c:	20 e0       	ldi	r18, 0x00	; 0
     55e:	30 e0       	ldi	r19, 0x00	; 0
     560:	a9 01       	movw	r20, r18
     562:	0e 94 21 0d 	call	0x1a42	; 0x1a42 <async>
     566:	12 c0       	rjmp	.+36     	; 0x58c <__stack+0x8d>
	}
	else{
		AFTER(MSEC(1000),self,pulse,0);
     568:	c1 2c       	mov	r12, r1
     56a:	d1 2c       	mov	r13, r1
     56c:	0f 2e       	mov	r0, r31
     56e:	fc e4       	ldi	r31, 0x4C	; 76
     570:	ef 2e       	mov	r14, r31
     572:	f2 e0       	ldi	r31, 0x02	; 2
     574:	ff 2e       	mov	r15, r31
     576:	f0 2d       	mov	r31, r0
     578:	8c 01       	movw	r16, r24
     57a:	20 e0       	ldi	r18, 0x00	; 0
     57c:	30 e0       	ldi	r19, 0x00	; 0
     57e:	a9 01       	movw	r20, r18
     580:	62 e1       	ldi	r22, 0x12	; 18
     582:	7a e7       	ldi	r23, 0x7A	; 122
     584:	80 e0       	ldi	r24, 0x00	; 0
     586:	90 e0       	ldi	r25, 0x00	; 0
     588:	0e 94 21 0d 	call	0x1a42	; 0x1a42 <async>
	}
}
     58c:	df 91       	pop	r29
     58e:	cf 91       	pop	r28
     590:	1f 91       	pop	r17
     592:	0f 91       	pop	r16
     594:	ff 90       	pop	r15
     596:	ef 90       	pop	r14
     598:	df 90       	pop	r13
     59a:	cf 90       	pop	r12
     59c:	bf 90       	pop	r11
     59e:	08 95       	ret

000005a0 <initialize>:
    Time now;
    DISABLE(status);
    TIMERGET(now);
    ENABLE(status);
    return now - (status ? current->msg->baseline : timestamp);
}
     5a0:	cf 93       	push	r28
     5a2:	df 93       	push	r29
     5a4:	00 d0       	rcall	.+0      	; 0x5a6 <initialize+0x6>
     5a6:	00 d0       	rcall	.+0      	; 0x5a8 <initialize+0x8>
     5a8:	cd b7       	in	r28, 0x3d	; 61
     5aa:	de b7       	in	r29, 0x3e	; 62
     5ac:	80 e0       	ldi	r24, 0x00	; 0
     5ae:	90 e0       	ldi	r25, 0x00	; 0
     5b0:	18 c0       	rjmp	.+48     	; 0x5e2 <initialize+0x42>
     5b2:	ac 01       	movw	r20, r24
     5b4:	4f 5f       	subi	r20, 0xFF	; 255
     5b6:	5f 4f       	sbci	r21, 0xFF	; 255
     5b8:	9a 01       	movw	r18, r20
     5ba:	22 95       	swap	r18
     5bc:	32 95       	swap	r19
     5be:	30 7f       	andi	r19, 0xF0	; 240
     5c0:	32 27       	eor	r19, r18
     5c2:	20 7f       	andi	r18, 0xF0	; 240
     5c4:	32 27       	eor	r19, r18
     5c6:	27 5c       	subi	r18, 0xC7	; 199
     5c8:	3d 4f       	sbci	r19, 0xFD	; 253
     5ca:	82 95       	swap	r24
     5cc:	92 95       	swap	r25
     5ce:	90 7f       	andi	r25, 0xF0	; 240
     5d0:	98 27       	eor	r25, r24
     5d2:	80 7f       	andi	r24, 0xF0	; 240
     5d4:	98 27       	eor	r25, r24
     5d6:	fc 01       	movw	r30, r24
     5d8:	e7 5c       	subi	r30, 0xC7	; 199
     5da:	fd 4f       	sbci	r31, 0xFD	; 253
     5dc:	31 83       	std	Z+1, r19	; 0x01
     5de:	20 83       	st	Z, r18
     5e0:	ca 01       	movw	r24, r20
     5e2:	8e 30       	cpi	r24, 0x0E	; 14
     5e4:	91 05       	cpc	r25, r1
     5e6:	2c f3       	brlt	.-54     	; 0x5b2 <initialize+0x12>
     5e8:	10 92 1a 03 	sts	0x031A, r1	; 0x80031a <messages+0xe1>
     5ec:	10 92 19 03 	sts	0x0319, r1	; 0x800319 <messages+0xe0>
     5f0:	80 e0       	ldi	r24, 0x00	; 0
     5f2:	90 e0       	ldi	r25, 0x00	; 0
     5f4:	15 c0       	rjmp	.+42     	; 0x620 <initialize+0x80>
     5f6:	ac 01       	movw	r20, r24
     5f8:	4f 5f       	subi	r20, 0xFF	; 255
     5fa:	5f 4f       	sbci	r21, 0xFF	; 255
     5fc:	6d e1       	ldi	r22, 0x1D	; 29
     5fe:	64 9f       	mul	r22, r20
     600:	90 01       	movw	r18, r0
     602:	65 9f       	mul	r22, r21
     604:	30 0d       	add	r19, r0
     606:	11 24       	eor	r1, r1
     608:	2c 57       	subi	r18, 0x7C	; 124
     60a:	3e 4f       	sbci	r19, 0xFE	; 254
     60c:	68 9f       	mul	r22, r24
     60e:	f0 01       	movw	r30, r0
     610:	69 9f       	mul	r22, r25
     612:	f0 0d       	add	r31, r0
     614:	11 24       	eor	r1, r1
     616:	ec 57       	subi	r30, 0x7C	; 124
     618:	fe 4f       	sbci	r31, 0xFE	; 254
     61a:	31 83       	std	Z+1, r19	; 0x01
     61c:	20 83       	st	Z, r18
     61e:	ca 01       	movw	r24, r20
     620:	83 30       	cpi	r24, 0x03	; 3
     622:	91 05       	cpc	r25, r1
     624:	44 f3       	brlt	.-48     	; 0x5f6 <initialize+0x56>
     626:	10 92 dc 01 	sts	0x01DC, r1	; 0x8001dc <threads+0x58>
     62a:	10 92 db 01 	sts	0x01DB, r1	; 0x8001db <threads+0x57>
     62e:	1a 82       	std	Y+2, r1	; 0x02
     630:	19 82       	std	Y+1, r1	; 0x01
     632:	32 c0       	rjmp	.+100    	; 0x698 <initialize+0xf8>
     634:	2d e1       	ldi	r18, 0x1D	; 29
     636:	49 81       	ldd	r20, Y+1	; 0x01
     638:	5a 81       	ldd	r21, Y+2	; 0x02
     63a:	24 9f       	mul	r18, r20
     63c:	c0 01       	movw	r24, r0
     63e:	25 9f       	mul	r18, r21
     640:	90 0d       	add	r25, r0
     642:	11 24       	eor	r1, r1
     644:	fc 01       	movw	r30, r24
     646:	e6 57       	subi	r30, 0x76	; 118
     648:	fe 4f       	sbci	r31, 0xFE	; 254
     64a:	fc 83       	std	Y+4, r31	; 0x04
     64c:	eb 83       	std	Y+3, r30	; 0x03
     64e:	cf 01       	movw	r24, r30
     650:	0e 94 2e 10 	call	0x205c	; 0x205c <setjmp>
     654:	20 e6       	ldi	r18, 0x60	; 96
     656:	49 81       	ldd	r20, Y+1	; 0x01
     658:	5a 81       	ldd	r21, Y+2	; 0x02
     65a:	24 9f       	mul	r18, r20
     65c:	c0 01       	movw	r24, r0
     65e:	25 9f       	mul	r18, r21
     660:	90 0d       	add	r25, r0
     662:	11 24       	eor	r1, r1
     664:	8b 57       	subi	r24, 0x7B	; 123
     666:	9c 4f       	sbci	r25, 0xFC	; 252
     668:	eb 81       	ldd	r30, Y+3	; 0x03
     66a:	fc 81       	ldd	r31, Y+4	; 0x04
     66c:	91 8b       	std	Z+17, r25	; 0x11
     66e:	80 8b       	std	Z+16, r24	; 0x10
     670:	93 8b       	std	Z+19, r25	; 0x13
     672:	82 8b       	std	Z+18, r24	; 0x12
     674:	8c ea       	ldi	r24, 0xAC	; 172
     676:	9e e0       	ldi	r25, 0x0E	; 14
     678:	96 8b       	std	Z+22, r25	; 0x16
     67a:	85 8b       	std	Z+21, r24	; 0x15
     67c:	8d e1       	ldi	r24, 0x1D	; 29
     67e:	84 9f       	mul	r24, r20
     680:	f0 01       	movw	r30, r0
     682:	85 9f       	mul	r24, r21
     684:	f0 0d       	add	r31, r0
     686:	11 24       	eor	r1, r1
     688:	ec 57       	subi	r30, 0x7C	; 124
     68a:	fe 4f       	sbci	r31, 0xFE	; 254
     68c:	15 82       	std	Z+5, r1	; 0x05
     68e:	14 82       	std	Z+4, r1	; 0x04
     690:	4f 5f       	subi	r20, 0xFF	; 255
     692:	5f 4f       	sbci	r21, 0xFF	; 255
     694:	5a 83       	std	Y+2, r21	; 0x02
     696:	49 83       	std	Y+1, r20	; 0x01
     698:	29 81       	ldd	r18, Y+1	; 0x01
     69a:	3a 81       	ldd	r19, Y+2	; 0x02
     69c:	24 30       	cpi	r18, 0x04	; 4
     69e:	31 05       	cpc	r19, r1
     6a0:	4c f2       	brlt	.-110    	; 0x634 <initialize+0x94>
     6a2:	ec e1       	ldi	r30, 0x1C	; 28
     6a4:	f2 e0       	ldi	r31, 0x02	; 2
     6a6:	11 82       	std	Z+1, r1	; 0x01
     6a8:	10 82       	st	Z, r1
     6aa:	15 82       	std	Z+5, r1	; 0x05
     6ac:	14 82       	std	Z+4, r1	; 0x04
     6ae:	13 82       	std	Z+3, r1	; 0x03
     6b0:	12 82       	std	Z+2, r1	; 0x02
     6b2:	e1 e6       	ldi	r30, 0x61	; 97
     6b4:	f0 e0       	ldi	r31, 0x00	; 0
     6b6:	80 e8       	ldi	r24, 0x80	; 128
     6b8:	80 83       	st	Z, r24
     6ba:	10 82       	st	Z, r1
     6bc:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     6c0:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     6c4:	84 e0       	ldi	r24, 0x04	; 4
     6c6:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7fc081>
     6ca:	81 e0       	ldi	r24, 0x01	; 1
     6cc:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
     6d0:	0f 90       	pop	r0
     6d2:	0f 90       	pop	r0
     6d4:	0f 90       	pop	r0
     6d6:	0f 90       	pop	r0
     6d8:	df 91       	pop	r29
     6da:	cf 91       	pop	r28
     6dc:	08 95       	ret

000006de <dispatch>:
     6de:	cf 93       	push	r28
     6e0:	df 93       	push	r29
     6e2:	00 d0       	rcall	.+0      	; 0x6e4 <dispatch+0x6>
     6e4:	cd b7       	in	r28, 0x3d	; 61
     6e6:	de b7       	in	r29, 0x3e	; 62
     6e8:	9a 83       	std	Y+2, r25	; 0x02
     6ea:	89 83       	std	Y+1, r24	; 0x01
     6ec:	80 91 4a 01 	lds	r24, 0x014A	; 0x80014a <current>
     6f0:	90 91 4b 01 	lds	r25, 0x014B	; 0x80014b <current+0x1>
     6f4:	06 96       	adiw	r24, 0x06	; 6
     6f6:	0e 94 2e 10 	call	0x205c	; 0x205c <setjmp>
     6fa:	89 2b       	or	r24, r25
     6fc:	59 f4       	brne	.+22     	; 0x714 <dispatch+0x36>
     6fe:	89 81       	ldd	r24, Y+1	; 0x01
     700:	9a 81       	ldd	r25, Y+2	; 0x02
     702:	90 93 4b 01 	sts	0x014B, r25	; 0x80014b <current+0x1>
     706:	80 93 4a 01 	sts	0x014A, r24	; 0x80014a <current>
     70a:	61 e0       	ldi	r22, 0x01	; 1
     70c:	70 e0       	ldi	r23, 0x00	; 0
     70e:	06 96       	adiw	r24, 0x06	; 6
     710:	0e 94 4e 10 	call	0x209c	; 0x209c <longjmp>
     714:	0f 90       	pop	r0
     716:	0f 90       	pop	r0
     718:	df 91       	pop	r29
     71a:	cf 91       	pop	r28
     71c:	08 95       	ret

0000071e <enqueueByDeadline>:
     71e:	0f 93       	push	r16
     720:	1f 93       	push	r17
     722:	cf 93       	push	r28
     724:	df 93       	push	r29
     726:	dc 01       	movw	r26, r24
     728:	cb 01       	movw	r24, r22
     72a:	eb 01       	movw	r28, r22
     72c:	e8 81       	ld	r30, Y
     72e:	f9 81       	ldd	r31, Y+1	; 0x01
     730:	c0 e0       	ldi	r28, 0x00	; 0
     732:	d0 e0       	ldi	r29, 0x00	; 0
     734:	04 c0       	rjmp	.+8      	; 0x73e <enqueueByDeadline+0x20>
     736:	ef 01       	movw	r28, r30
     738:	01 90       	ld	r0, Z+
     73a:	f0 81       	ld	r31, Z
     73c:	e0 2d       	mov	r30, r0
     73e:	30 97       	sbiw	r30, 0x00	; 0
     740:	79 f0       	breq	.+30     	; 0x760 <enqueueByDeadline+0x42>
     742:	06 81       	ldd	r16, Z+6	; 0x06
     744:	17 81       	ldd	r17, Z+7	; 0x07
     746:	20 85       	ldd	r18, Z+8	; 0x08
     748:	31 85       	ldd	r19, Z+9	; 0x09
     74a:	16 96       	adiw	r26, 0x06	; 6
     74c:	4d 91       	ld	r20, X+
     74e:	5d 91       	ld	r21, X+
     750:	6d 91       	ld	r22, X+
     752:	7c 91       	ld	r23, X
     754:	19 97       	sbiw	r26, 0x09	; 9
     756:	40 17       	cp	r20, r16
     758:	51 07       	cpc	r21, r17
     75a:	62 07       	cpc	r22, r18
     75c:	73 07       	cpc	r23, r19
     75e:	5c f7       	brge	.-42     	; 0x736 <enqueueByDeadline+0x18>
     760:	11 96       	adiw	r26, 0x01	; 1
     762:	fc 93       	st	X, r31
     764:	ee 93       	st	-X, r30
     766:	20 97       	sbiw	r28, 0x00	; 0
     768:	21 f4       	brne	.+8      	; 0x772 <enqueueByDeadline+0x54>
     76a:	fc 01       	movw	r30, r24
     76c:	b1 83       	std	Z+1, r27	; 0x01
     76e:	a0 83       	st	Z, r26
     770:	02 c0       	rjmp	.+4      	; 0x776 <enqueueByDeadline+0x58>
     772:	b9 83       	std	Y+1, r27	; 0x01
     774:	a8 83       	st	Y, r26
     776:	df 91       	pop	r29
     778:	cf 91       	pop	r28
     77a:	1f 91       	pop	r17
     77c:	0f 91       	pop	r16
     77e:	08 95       	ret

00000780 <enqueueByBaseline>:
     780:	0f 93       	push	r16
     782:	1f 93       	push	r17
     784:	cf 93       	push	r28
     786:	df 93       	push	r29
     788:	dc 01       	movw	r26, r24
     78a:	cb 01       	movw	r24, r22
     78c:	eb 01       	movw	r28, r22
     78e:	e8 81       	ld	r30, Y
     790:	f9 81       	ldd	r31, Y+1	; 0x01
     792:	c0 e0       	ldi	r28, 0x00	; 0
     794:	d0 e0       	ldi	r29, 0x00	; 0
     796:	04 c0       	rjmp	.+8      	; 0x7a0 <enqueueByBaseline+0x20>
     798:	ef 01       	movw	r28, r30
     79a:	01 90       	ld	r0, Z+
     79c:	f0 81       	ld	r31, Z
     79e:	e0 2d       	mov	r30, r0
     7a0:	30 97       	sbiw	r30, 0x00	; 0
     7a2:	79 f0       	breq	.+30     	; 0x7c2 <enqueueByBaseline+0x42>
     7a4:	02 81       	ldd	r16, Z+2	; 0x02
     7a6:	13 81       	ldd	r17, Z+3	; 0x03
     7a8:	24 81       	ldd	r18, Z+4	; 0x04
     7aa:	35 81       	ldd	r19, Z+5	; 0x05
     7ac:	12 96       	adiw	r26, 0x02	; 2
     7ae:	4d 91       	ld	r20, X+
     7b0:	5d 91       	ld	r21, X+
     7b2:	6d 91       	ld	r22, X+
     7b4:	7c 91       	ld	r23, X
     7b6:	15 97       	sbiw	r26, 0x05	; 5
     7b8:	40 17       	cp	r20, r16
     7ba:	51 07       	cpc	r21, r17
     7bc:	62 07       	cpc	r22, r18
     7be:	73 07       	cpc	r23, r19
     7c0:	5c f7       	brge	.-42     	; 0x798 <enqueueByBaseline+0x18>
     7c2:	11 96       	adiw	r26, 0x01	; 1
     7c4:	fc 93       	st	X, r31
     7c6:	ee 93       	st	-X, r30
     7c8:	20 97       	sbiw	r28, 0x00	; 0
     7ca:	21 f4       	brne	.+8      	; 0x7d4 <enqueueByBaseline+0x54>
     7cc:	fc 01       	movw	r30, r24
     7ce:	b1 83       	std	Z+1, r27	; 0x01
     7d0:	a0 83       	st	Z, r26
     7d2:	02 c0       	rjmp	.+4      	; 0x7d8 <enqueueByBaseline+0x58>
     7d4:	b9 83       	std	Y+1, r27	; 0x01
     7d6:	a8 83       	st	Y, r26
     7d8:	df 91       	pop	r29
     7da:	cf 91       	pop	r28
     7dc:	1f 91       	pop	r17
     7de:	0f 91       	pop	r16
     7e0:	08 95       	ret

000007e2 <dequeue>:
     7e2:	dc 01       	movw	r26, r24
     7e4:	ed 91       	ld	r30, X+
     7e6:	fc 91       	ld	r31, X
     7e8:	11 97       	sbiw	r26, 0x01	; 1
     7ea:	30 97       	sbiw	r30, 0x00	; 0
     7ec:	59 f4       	brne	.+22     	; 0x804 <dequeue+0x22>
     7ee:	8f ef       	ldi	r24, 0xFF	; 255
     7f0:	80 93 ec 00 	sts	0x00EC, r24	; 0x8000ec <__TEXT_REGION_LENGTH__+0x7fc0ec>
     7f4:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7fc0ed>
     7f8:	80 93 ee 00 	sts	0x00EE, r24	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7fc0ee>
     7fc:	81 e0       	ldi	r24, 0x01	; 1
     7fe:	83 bf       	out	0x33, r24	; 51
     800:	88 95       	sleep
     802:	fc cf       	rjmp	.-8      	; 0x7fc <dequeue+0x1a>
     804:	20 81       	ld	r18, Z
     806:	31 81       	ldd	r19, Z+1	; 0x01
     808:	2d 93       	st	X+, r18
     80a:	3c 93       	st	X, r19
     80c:	cf 01       	movw	r24, r30
     80e:	08 95       	ret

00000810 <insert>:
     810:	fb 01       	movw	r30, r22
     812:	20 81       	ld	r18, Z
     814:	31 81       	ldd	r19, Z+1	; 0x01
     816:	fc 01       	movw	r30, r24
     818:	31 83       	std	Z+1, r19	; 0x01
     81a:	20 83       	st	Z, r18
     81c:	fb 01       	movw	r30, r22
     81e:	91 83       	std	Z+1, r25	; 0x01
     820:	80 83       	st	Z, r24
     822:	08 95       	ret

00000824 <push>:
     824:	fb 01       	movw	r30, r22
     826:	20 81       	ld	r18, Z
     828:	31 81       	ldd	r19, Z+1	; 0x01
     82a:	fc 01       	movw	r30, r24
     82c:	31 83       	std	Z+1, r19	; 0x01
     82e:	20 83       	st	Z, r18
     830:	fb 01       	movw	r30, r22
     832:	91 83       	std	Z+1, r25	; 0x01
     834:	80 83       	st	Z, r24
     836:	08 95       	ret

00000838 <pop>:
     838:	dc 01       	movw	r26, r24
     83a:	ed 91       	ld	r30, X+
     83c:	fc 91       	ld	r31, X
     83e:	11 97       	sbiw	r26, 0x01	; 1
     840:	20 81       	ld	r18, Z
     842:	31 81       	ldd	r19, Z+1	; 0x01
     844:	2d 93       	st	X+, r18
     846:	3c 93       	st	X, r19
     848:	cf 01       	movw	r24, r30
     84a:	08 95       	ret

0000084c <schedule>:
     84c:	cf 93       	push	r28
     84e:	df 93       	push	r29
     850:	e0 91 4c 01 	lds	r30, 0x014C	; 0x80014c <activeStack>
     854:	f0 91 4d 01 	lds	r31, 0x014D	; 0x80014d <activeStack+0x1>
     858:	c2 81       	ldd	r28, Z+2	; 0x02
     85a:	d3 81       	ldd	r29, Z+3	; 0x03
     85c:	e0 91 5e 01 	lds	r30, 0x015E	; 0x80015e <msgQ>
     860:	f0 91 5f 01 	lds	r31, 0x015F	; 0x80015f <msgQ+0x1>
     864:	30 97       	sbiw	r30, 0x00	; 0
     866:	19 f1       	breq	.+70     	; 0x8ae <schedule+0x62>
     868:	80 91 4e 01 	lds	r24, 0x014E	; 0x80014e <threadPool>
     86c:	90 91 4f 01 	lds	r25, 0x014F	; 0x80014f <threadPool+0x1>
     870:	89 2b       	or	r24, r25
     872:	e9 f0       	breq	.+58     	; 0x8ae <schedule+0x62>
     874:	20 97       	sbiw	r28, 0x00	; 0
     876:	69 f0       	breq	.+26     	; 0x892 <schedule+0x46>
     878:	86 81       	ldd	r24, Z+6	; 0x06
     87a:	97 81       	ldd	r25, Z+7	; 0x07
     87c:	a0 85       	ldd	r26, Z+8	; 0x08
     87e:	b1 85       	ldd	r27, Z+9	; 0x09
     880:	4e 81       	ldd	r20, Y+6	; 0x06
     882:	5f 81       	ldd	r21, Y+7	; 0x07
     884:	68 85       	ldd	r22, Y+8	; 0x08
     886:	79 85       	ldd	r23, Y+9	; 0x09
     888:	84 1b       	sub	r24, r20
     88a:	95 0b       	sbc	r25, r21
     88c:	a6 0b       	sbc	r26, r22
     88e:	b7 0b       	sbc	r27, r23
     890:	72 f4       	brpl	.+28     	; 0x8ae <schedule+0x62>
     892:	8e e4       	ldi	r24, 0x4E	; 78
     894:	91 e0       	ldi	r25, 0x01	; 1
     896:	0e 94 1c 04 	call	0x838	; 0x838 <pop>
     89a:	6c e4       	ldi	r22, 0x4C	; 76
     89c:	71 e0       	ldi	r23, 0x01	; 1
     89e:	0e 94 12 04 	call	0x824	; 0x824 <push>
     8a2:	80 91 4c 01 	lds	r24, 0x014C	; 0x80014c <activeStack>
     8a6:	90 91 4d 01 	lds	r25, 0x014D	; 0x80014d <activeStack+0x1>
     8aa:	0e 94 6f 03 	call	0x6de	; 0x6de <dispatch>
     8ae:	df 91       	pop	r29
     8b0:	cf 91       	pop	r28
     8b2:	08 95       	ret

000008b4 <__vector_1>:
     8b4:	1f 92       	push	r1
     8b6:	0f 92       	push	r0
     8b8:	0f b6       	in	r0, 0x3f	; 63
     8ba:	0f 92       	push	r0
     8bc:	11 24       	eor	r1, r1
     8be:	0f 93       	push	r16
     8c0:	1f 93       	push	r17
     8c2:	2f 93       	push	r18
     8c4:	3f 93       	push	r19
     8c6:	4f 93       	push	r20
     8c8:	5f 93       	push	r21
     8ca:	6f 93       	push	r22
     8cc:	7f 93       	push	r23
     8ce:	8f 93       	push	r24
     8d0:	9f 93       	push	r25
     8d2:	af 93       	push	r26
     8d4:	bf 93       	push	r27
     8d6:	ef 93       	push	r30
     8d8:	ff 93       	push	r31
     8da:	80 91 56 01 	lds	r24, 0x0156	; 0x800156 <overflows>
     8de:	90 91 57 01 	lds	r25, 0x0157	; 0x800157 <overflows+0x1>
     8e2:	ac 01       	movw	r20, r24
     8e4:	09 2e       	mov	r0, r25
     8e6:	00 0c       	add	r0, r0
     8e8:	66 0b       	sbc	r22, r22
     8ea:	77 0b       	sbc	r23, r23
     8ec:	9a 01       	movw	r18, r20
     8ee:	11 27       	eor	r17, r17
     8f0:	00 27       	eor	r16, r16
     8f2:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     8f6:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     8fa:	60 e0       	ldi	r22, 0x00	; 0
     8fc:	70 e0       	ldi	r23, 0x00	; 0
     8fe:	40 2b       	or	r20, r16
     900:	51 2b       	or	r21, r17
     902:	62 2b       	or	r22, r18
     904:	73 2b       	or	r23, r19
     906:	40 93 58 01 	sts	0x0158, r20	; 0x800158 <timestamp>
     90a:	50 93 59 01 	sts	0x0159, r21	; 0x800159 <timestamp+0x1>
     90e:	60 93 5a 01 	sts	0x015A, r22	; 0x80015a <timestamp+0x2>
     912:	70 93 5b 01 	sts	0x015B, r23	; 0x80015b <timestamp+0x3>
     916:	b0 9b       	sbis	0x16, 0	; 22
     918:	1a c0       	rjmp	.+52     	; 0x94e <__vector_1+0x9a>
     91a:	01 96       	adiw	r24, 0x01	; 1
     91c:	09 2e       	mov	r0, r25
     91e:	00 0c       	add	r0, r0
     920:	aa 0b       	sbc	r26, r26
     922:	bb 0b       	sbc	r27, r27
     924:	bc 01       	movw	r22, r24
     926:	55 27       	eor	r21, r21
     928:	44 27       	eor	r20, r20
     92a:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     92e:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     932:	a0 e0       	ldi	r26, 0x00	; 0
     934:	b0 e0       	ldi	r27, 0x00	; 0
     936:	84 2b       	or	r24, r20
     938:	95 2b       	or	r25, r21
     93a:	a6 2b       	or	r26, r22
     93c:	b7 2b       	or	r27, r23
     93e:	80 93 58 01 	sts	0x0158, r24	; 0x800158 <timestamp>
     942:	90 93 59 01 	sts	0x0159, r25	; 0x800159 <timestamp+0x1>
     946:	a0 93 5a 01 	sts	0x015A, r26	; 0x80015a <timestamp+0x2>
     94a:	b0 93 5b 01 	sts	0x015B, r27	; 0x80015b <timestamp+0x3>
     94e:	e0 91 f8 01 	lds	r30, 0x01F8	; 0x8001f8 <mtable>
     952:	f0 91 f9 01 	lds	r31, 0x01F9	; 0x8001f9 <mtable+0x1>
     956:	30 97       	sbiw	r30, 0x00	; 0
     958:	39 f0       	breq	.+14     	; 0x968 <__vector_1+0xb4>
     95a:	60 e0       	ldi	r22, 0x00	; 0
     95c:	70 e0       	ldi	r23, 0x00	; 0
     95e:	80 91 60 01 	lds	r24, 0x0160	; 0x800160 <otable>
     962:	90 91 61 01 	lds	r25, 0x0161	; 0x800161 <otable+0x1>
     966:	09 95       	icall
     968:	0e 94 26 04 	call	0x84c	; 0x84c <schedule>
     96c:	ff 91       	pop	r31
     96e:	ef 91       	pop	r30
     970:	bf 91       	pop	r27
     972:	af 91       	pop	r26
     974:	9f 91       	pop	r25
     976:	8f 91       	pop	r24
     978:	7f 91       	pop	r23
     97a:	6f 91       	pop	r22
     97c:	5f 91       	pop	r21
     97e:	4f 91       	pop	r20
     980:	3f 91       	pop	r19
     982:	2f 91       	pop	r18
     984:	1f 91       	pop	r17
     986:	0f 91       	pop	r16
     988:	0f 90       	pop	r0
     98a:	0f be       	out	0x3f, r0	; 63
     98c:	0f 90       	pop	r0
     98e:	1f 90       	pop	r1
     990:	18 95       	reti

00000992 <__vector_2>:
     992:	1f 92       	push	r1
     994:	0f 92       	push	r0
     996:	0f b6       	in	r0, 0x3f	; 63
     998:	0f 92       	push	r0
     99a:	11 24       	eor	r1, r1
     99c:	0f 93       	push	r16
     99e:	1f 93       	push	r17
     9a0:	2f 93       	push	r18
     9a2:	3f 93       	push	r19
     9a4:	4f 93       	push	r20
     9a6:	5f 93       	push	r21
     9a8:	6f 93       	push	r22
     9aa:	7f 93       	push	r23
     9ac:	8f 93       	push	r24
     9ae:	9f 93       	push	r25
     9b0:	af 93       	push	r26
     9b2:	bf 93       	push	r27
     9b4:	ef 93       	push	r30
     9b6:	ff 93       	push	r31
     9b8:	80 91 56 01 	lds	r24, 0x0156	; 0x800156 <overflows>
     9bc:	90 91 57 01 	lds	r25, 0x0157	; 0x800157 <overflows+0x1>
     9c0:	ac 01       	movw	r20, r24
     9c2:	09 2e       	mov	r0, r25
     9c4:	00 0c       	add	r0, r0
     9c6:	66 0b       	sbc	r22, r22
     9c8:	77 0b       	sbc	r23, r23
     9ca:	9a 01       	movw	r18, r20
     9cc:	11 27       	eor	r17, r17
     9ce:	00 27       	eor	r16, r16
     9d0:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     9d4:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     9d8:	60 e0       	ldi	r22, 0x00	; 0
     9da:	70 e0       	ldi	r23, 0x00	; 0
     9dc:	40 2b       	or	r20, r16
     9de:	51 2b       	or	r21, r17
     9e0:	62 2b       	or	r22, r18
     9e2:	73 2b       	or	r23, r19
     9e4:	40 93 58 01 	sts	0x0158, r20	; 0x800158 <timestamp>
     9e8:	50 93 59 01 	sts	0x0159, r21	; 0x800159 <timestamp+0x1>
     9ec:	60 93 5a 01 	sts	0x015A, r22	; 0x80015a <timestamp+0x2>
     9f0:	70 93 5b 01 	sts	0x015B, r23	; 0x80015b <timestamp+0x3>
     9f4:	b0 9b       	sbis	0x16, 0	; 22
     9f6:	1a c0       	rjmp	.+52     	; 0xa2c <__vector_2+0x9a>
     9f8:	01 96       	adiw	r24, 0x01	; 1
     9fa:	09 2e       	mov	r0, r25
     9fc:	00 0c       	add	r0, r0
     9fe:	aa 0b       	sbc	r26, r26
     a00:	bb 0b       	sbc	r27, r27
     a02:	bc 01       	movw	r22, r24
     a04:	55 27       	eor	r21, r21
     a06:	44 27       	eor	r20, r20
     a08:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     a0c:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     a10:	a0 e0       	ldi	r26, 0x00	; 0
     a12:	b0 e0       	ldi	r27, 0x00	; 0
     a14:	84 2b       	or	r24, r20
     a16:	95 2b       	or	r25, r21
     a18:	a6 2b       	or	r26, r22
     a1a:	b7 2b       	or	r27, r23
     a1c:	80 93 58 01 	sts	0x0158, r24	; 0x800158 <timestamp>
     a20:	90 93 59 01 	sts	0x0159, r25	; 0x800159 <timestamp+0x1>
     a24:	a0 93 5a 01 	sts	0x015A, r26	; 0x80015a <timestamp+0x2>
     a28:	b0 93 5b 01 	sts	0x015B, r27	; 0x80015b <timestamp+0x3>
     a2c:	e0 91 fa 01 	lds	r30, 0x01FA	; 0x8001fa <mtable+0x2>
     a30:	f0 91 fb 01 	lds	r31, 0x01FB	; 0x8001fb <mtable+0x3>
     a34:	30 97       	sbiw	r30, 0x00	; 0
     a36:	39 f0       	breq	.+14     	; 0xa46 <__vector_2+0xb4>
     a38:	61 e0       	ldi	r22, 0x01	; 1
     a3a:	70 e0       	ldi	r23, 0x00	; 0
     a3c:	80 91 62 01 	lds	r24, 0x0162	; 0x800162 <otable+0x2>
     a40:	90 91 63 01 	lds	r25, 0x0163	; 0x800163 <otable+0x3>
     a44:	09 95       	icall
     a46:	0e 94 26 04 	call	0x84c	; 0x84c <schedule>
     a4a:	ff 91       	pop	r31
     a4c:	ef 91       	pop	r30
     a4e:	bf 91       	pop	r27
     a50:	af 91       	pop	r26
     a52:	9f 91       	pop	r25
     a54:	8f 91       	pop	r24
     a56:	7f 91       	pop	r23
     a58:	6f 91       	pop	r22
     a5a:	5f 91       	pop	r21
     a5c:	4f 91       	pop	r20
     a5e:	3f 91       	pop	r19
     a60:	2f 91       	pop	r18
     a62:	1f 91       	pop	r17
     a64:	0f 91       	pop	r16
     a66:	0f 90       	pop	r0
     a68:	0f be       	out	0x3f, r0	; 63
     a6a:	0f 90       	pop	r0
     a6c:	1f 90       	pop	r1
     a6e:	18 95       	reti

00000a70 <__vector_3>:
     a70:	1f 92       	push	r1
     a72:	0f 92       	push	r0
     a74:	0f b6       	in	r0, 0x3f	; 63
     a76:	0f 92       	push	r0
     a78:	11 24       	eor	r1, r1
     a7a:	0f 93       	push	r16
     a7c:	1f 93       	push	r17
     a7e:	2f 93       	push	r18
     a80:	3f 93       	push	r19
     a82:	4f 93       	push	r20
     a84:	5f 93       	push	r21
     a86:	6f 93       	push	r22
     a88:	7f 93       	push	r23
     a8a:	8f 93       	push	r24
     a8c:	9f 93       	push	r25
     a8e:	af 93       	push	r26
     a90:	bf 93       	push	r27
     a92:	ef 93       	push	r30
     a94:	ff 93       	push	r31
     a96:	80 91 56 01 	lds	r24, 0x0156	; 0x800156 <overflows>
     a9a:	90 91 57 01 	lds	r25, 0x0157	; 0x800157 <overflows+0x1>
     a9e:	ac 01       	movw	r20, r24
     aa0:	09 2e       	mov	r0, r25
     aa2:	00 0c       	add	r0, r0
     aa4:	66 0b       	sbc	r22, r22
     aa6:	77 0b       	sbc	r23, r23
     aa8:	9a 01       	movw	r18, r20
     aaa:	11 27       	eor	r17, r17
     aac:	00 27       	eor	r16, r16
     aae:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     ab2:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     ab6:	60 e0       	ldi	r22, 0x00	; 0
     ab8:	70 e0       	ldi	r23, 0x00	; 0
     aba:	40 2b       	or	r20, r16
     abc:	51 2b       	or	r21, r17
     abe:	62 2b       	or	r22, r18
     ac0:	73 2b       	or	r23, r19
     ac2:	40 93 58 01 	sts	0x0158, r20	; 0x800158 <timestamp>
     ac6:	50 93 59 01 	sts	0x0159, r21	; 0x800159 <timestamp+0x1>
     aca:	60 93 5a 01 	sts	0x015A, r22	; 0x80015a <timestamp+0x2>
     ace:	70 93 5b 01 	sts	0x015B, r23	; 0x80015b <timestamp+0x3>
     ad2:	b0 9b       	sbis	0x16, 0	; 22
     ad4:	1a c0       	rjmp	.+52     	; 0xb0a <__vector_3+0x9a>
     ad6:	01 96       	adiw	r24, 0x01	; 1
     ad8:	09 2e       	mov	r0, r25
     ada:	00 0c       	add	r0, r0
     adc:	aa 0b       	sbc	r26, r26
     ade:	bb 0b       	sbc	r27, r27
     ae0:	bc 01       	movw	r22, r24
     ae2:	55 27       	eor	r21, r21
     ae4:	44 27       	eor	r20, r20
     ae6:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     aea:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     aee:	a0 e0       	ldi	r26, 0x00	; 0
     af0:	b0 e0       	ldi	r27, 0x00	; 0
     af2:	84 2b       	or	r24, r20
     af4:	95 2b       	or	r25, r21
     af6:	a6 2b       	or	r26, r22
     af8:	b7 2b       	or	r27, r23
     afa:	80 93 58 01 	sts	0x0158, r24	; 0x800158 <timestamp>
     afe:	90 93 59 01 	sts	0x0159, r25	; 0x800159 <timestamp+0x1>
     b02:	a0 93 5a 01 	sts	0x015A, r26	; 0x80015a <timestamp+0x2>
     b06:	b0 93 5b 01 	sts	0x015B, r27	; 0x80015b <timestamp+0x3>
     b0a:	e0 91 fc 01 	lds	r30, 0x01FC	; 0x8001fc <mtable+0x4>
     b0e:	f0 91 fd 01 	lds	r31, 0x01FD	; 0x8001fd <mtable+0x5>
     b12:	30 97       	sbiw	r30, 0x00	; 0
     b14:	39 f0       	breq	.+14     	; 0xb24 <__vector_3+0xb4>
     b16:	62 e0       	ldi	r22, 0x02	; 2
     b18:	70 e0       	ldi	r23, 0x00	; 0
     b1a:	80 91 64 01 	lds	r24, 0x0164	; 0x800164 <otable+0x4>
     b1e:	90 91 65 01 	lds	r25, 0x0165	; 0x800165 <otable+0x5>
     b22:	09 95       	icall
     b24:	0e 94 26 04 	call	0x84c	; 0x84c <schedule>
     b28:	ff 91       	pop	r31
     b2a:	ef 91       	pop	r30
     b2c:	bf 91       	pop	r27
     b2e:	af 91       	pop	r26
     b30:	9f 91       	pop	r25
     b32:	8f 91       	pop	r24
     b34:	7f 91       	pop	r23
     b36:	6f 91       	pop	r22
     b38:	5f 91       	pop	r21
     b3a:	4f 91       	pop	r20
     b3c:	3f 91       	pop	r19
     b3e:	2f 91       	pop	r18
     b40:	1f 91       	pop	r17
     b42:	0f 91       	pop	r16
     b44:	0f 90       	pop	r0
     b46:	0f be       	out	0x3f, r0	; 63
     b48:	0f 90       	pop	r0
     b4a:	1f 90       	pop	r1
     b4c:	18 95       	reti

00000b4e <__vector_4>:
     b4e:	1f 92       	push	r1
     b50:	0f 92       	push	r0
     b52:	0f b6       	in	r0, 0x3f	; 63
     b54:	0f 92       	push	r0
     b56:	11 24       	eor	r1, r1
     b58:	0f 93       	push	r16
     b5a:	1f 93       	push	r17
     b5c:	2f 93       	push	r18
     b5e:	3f 93       	push	r19
     b60:	4f 93       	push	r20
     b62:	5f 93       	push	r21
     b64:	6f 93       	push	r22
     b66:	7f 93       	push	r23
     b68:	8f 93       	push	r24
     b6a:	9f 93       	push	r25
     b6c:	af 93       	push	r26
     b6e:	bf 93       	push	r27
     b70:	ef 93       	push	r30
     b72:	ff 93       	push	r31
     b74:	80 91 56 01 	lds	r24, 0x0156	; 0x800156 <overflows>
     b78:	90 91 57 01 	lds	r25, 0x0157	; 0x800157 <overflows+0x1>
     b7c:	ac 01       	movw	r20, r24
     b7e:	09 2e       	mov	r0, r25
     b80:	00 0c       	add	r0, r0
     b82:	66 0b       	sbc	r22, r22
     b84:	77 0b       	sbc	r23, r23
     b86:	9a 01       	movw	r18, r20
     b88:	11 27       	eor	r17, r17
     b8a:	00 27       	eor	r16, r16
     b8c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     b90:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     b94:	60 e0       	ldi	r22, 0x00	; 0
     b96:	70 e0       	ldi	r23, 0x00	; 0
     b98:	40 2b       	or	r20, r16
     b9a:	51 2b       	or	r21, r17
     b9c:	62 2b       	or	r22, r18
     b9e:	73 2b       	or	r23, r19
     ba0:	40 93 58 01 	sts	0x0158, r20	; 0x800158 <timestamp>
     ba4:	50 93 59 01 	sts	0x0159, r21	; 0x800159 <timestamp+0x1>
     ba8:	60 93 5a 01 	sts	0x015A, r22	; 0x80015a <timestamp+0x2>
     bac:	70 93 5b 01 	sts	0x015B, r23	; 0x80015b <timestamp+0x3>
     bb0:	b0 9b       	sbis	0x16, 0	; 22
     bb2:	1a c0       	rjmp	.+52     	; 0xbe8 <__vector_4+0x9a>
     bb4:	01 96       	adiw	r24, 0x01	; 1
     bb6:	09 2e       	mov	r0, r25
     bb8:	00 0c       	add	r0, r0
     bba:	aa 0b       	sbc	r26, r26
     bbc:	bb 0b       	sbc	r27, r27
     bbe:	bc 01       	movw	r22, r24
     bc0:	55 27       	eor	r21, r21
     bc2:	44 27       	eor	r20, r20
     bc4:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     bc8:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     bcc:	a0 e0       	ldi	r26, 0x00	; 0
     bce:	b0 e0       	ldi	r27, 0x00	; 0
     bd0:	84 2b       	or	r24, r20
     bd2:	95 2b       	or	r25, r21
     bd4:	a6 2b       	or	r26, r22
     bd6:	b7 2b       	or	r27, r23
     bd8:	80 93 58 01 	sts	0x0158, r24	; 0x800158 <timestamp>
     bdc:	90 93 59 01 	sts	0x0159, r25	; 0x800159 <timestamp+0x1>
     be0:	a0 93 5a 01 	sts	0x015A, r26	; 0x80015a <timestamp+0x2>
     be4:	b0 93 5b 01 	sts	0x015B, r27	; 0x80015b <timestamp+0x3>
     be8:	e0 91 fe 01 	lds	r30, 0x01FE	; 0x8001fe <mtable+0x6>
     bec:	f0 91 ff 01 	lds	r31, 0x01FF	; 0x8001ff <mtable+0x7>
     bf0:	30 97       	sbiw	r30, 0x00	; 0
     bf2:	39 f0       	breq	.+14     	; 0xc02 <__vector_4+0xb4>
     bf4:	63 e0       	ldi	r22, 0x03	; 3
     bf6:	70 e0       	ldi	r23, 0x00	; 0
     bf8:	80 91 66 01 	lds	r24, 0x0166	; 0x800166 <otable+0x6>
     bfc:	90 91 67 01 	lds	r25, 0x0167	; 0x800167 <otable+0x7>
     c00:	09 95       	icall
     c02:	0e 94 26 04 	call	0x84c	; 0x84c <schedule>
     c06:	ff 91       	pop	r31
     c08:	ef 91       	pop	r30
     c0a:	bf 91       	pop	r27
     c0c:	af 91       	pop	r26
     c0e:	9f 91       	pop	r25
     c10:	8f 91       	pop	r24
     c12:	7f 91       	pop	r23
     c14:	6f 91       	pop	r22
     c16:	5f 91       	pop	r21
     c18:	4f 91       	pop	r20
     c1a:	3f 91       	pop	r19
     c1c:	2f 91       	pop	r18
     c1e:	1f 91       	pop	r17
     c20:	0f 91       	pop	r16
     c22:	0f 90       	pop	r0
     c24:	0f be       	out	0x3f, r0	; 63
     c26:	0f 90       	pop	r0
     c28:	1f 90       	pop	r1
     c2a:	18 95       	reti

00000c2c <__vector_5>:
     c2c:	1f 92       	push	r1
     c2e:	0f 92       	push	r0
     c30:	0f b6       	in	r0, 0x3f	; 63
     c32:	0f 92       	push	r0
     c34:	11 24       	eor	r1, r1
     c36:	0f 93       	push	r16
     c38:	1f 93       	push	r17
     c3a:	2f 93       	push	r18
     c3c:	3f 93       	push	r19
     c3e:	4f 93       	push	r20
     c40:	5f 93       	push	r21
     c42:	6f 93       	push	r22
     c44:	7f 93       	push	r23
     c46:	8f 93       	push	r24
     c48:	9f 93       	push	r25
     c4a:	af 93       	push	r26
     c4c:	bf 93       	push	r27
     c4e:	ef 93       	push	r30
     c50:	ff 93       	push	r31
     c52:	80 91 56 01 	lds	r24, 0x0156	; 0x800156 <overflows>
     c56:	90 91 57 01 	lds	r25, 0x0157	; 0x800157 <overflows+0x1>
     c5a:	ac 01       	movw	r20, r24
     c5c:	09 2e       	mov	r0, r25
     c5e:	00 0c       	add	r0, r0
     c60:	66 0b       	sbc	r22, r22
     c62:	77 0b       	sbc	r23, r23
     c64:	9a 01       	movw	r18, r20
     c66:	11 27       	eor	r17, r17
     c68:	00 27       	eor	r16, r16
     c6a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     c6e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     c72:	60 e0       	ldi	r22, 0x00	; 0
     c74:	70 e0       	ldi	r23, 0x00	; 0
     c76:	40 2b       	or	r20, r16
     c78:	51 2b       	or	r21, r17
     c7a:	62 2b       	or	r22, r18
     c7c:	73 2b       	or	r23, r19
     c7e:	40 93 58 01 	sts	0x0158, r20	; 0x800158 <timestamp>
     c82:	50 93 59 01 	sts	0x0159, r21	; 0x800159 <timestamp+0x1>
     c86:	60 93 5a 01 	sts	0x015A, r22	; 0x80015a <timestamp+0x2>
     c8a:	70 93 5b 01 	sts	0x015B, r23	; 0x80015b <timestamp+0x3>
     c8e:	b0 9b       	sbis	0x16, 0	; 22
     c90:	1a c0       	rjmp	.+52     	; 0xcc6 <__vector_5+0x9a>
     c92:	01 96       	adiw	r24, 0x01	; 1
     c94:	09 2e       	mov	r0, r25
     c96:	00 0c       	add	r0, r0
     c98:	aa 0b       	sbc	r26, r26
     c9a:	bb 0b       	sbc	r27, r27
     c9c:	bc 01       	movw	r22, r24
     c9e:	55 27       	eor	r21, r21
     ca0:	44 27       	eor	r20, r20
     ca2:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     ca6:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     caa:	a0 e0       	ldi	r26, 0x00	; 0
     cac:	b0 e0       	ldi	r27, 0x00	; 0
     cae:	84 2b       	or	r24, r20
     cb0:	95 2b       	or	r25, r21
     cb2:	a6 2b       	or	r26, r22
     cb4:	b7 2b       	or	r27, r23
     cb6:	80 93 58 01 	sts	0x0158, r24	; 0x800158 <timestamp>
     cba:	90 93 59 01 	sts	0x0159, r25	; 0x800159 <timestamp+0x1>
     cbe:	a0 93 5a 01 	sts	0x015A, r26	; 0x80015a <timestamp+0x2>
     cc2:	b0 93 5b 01 	sts	0x015B, r27	; 0x80015b <timestamp+0x3>
     cc6:	e0 91 00 02 	lds	r30, 0x0200	; 0x800200 <mtable+0x8>
     cca:	f0 91 01 02 	lds	r31, 0x0201	; 0x800201 <mtable+0x9>
     cce:	30 97       	sbiw	r30, 0x00	; 0
     cd0:	39 f0       	breq	.+14     	; 0xce0 <__vector_5+0xb4>
     cd2:	64 e0       	ldi	r22, 0x04	; 4
     cd4:	70 e0       	ldi	r23, 0x00	; 0
     cd6:	80 91 68 01 	lds	r24, 0x0168	; 0x800168 <otable+0x8>
     cda:	90 91 69 01 	lds	r25, 0x0169	; 0x800169 <otable+0x9>
     cde:	09 95       	icall
     ce0:	0e 94 26 04 	call	0x84c	; 0x84c <schedule>
     ce4:	ff 91       	pop	r31
     ce6:	ef 91       	pop	r30
     ce8:	bf 91       	pop	r27
     cea:	af 91       	pop	r26
     cec:	9f 91       	pop	r25
     cee:	8f 91       	pop	r24
     cf0:	7f 91       	pop	r23
     cf2:	6f 91       	pop	r22
     cf4:	5f 91       	pop	r21
     cf6:	4f 91       	pop	r20
     cf8:	3f 91       	pop	r19
     cfa:	2f 91       	pop	r18
     cfc:	1f 91       	pop	r17
     cfe:	0f 91       	pop	r16
     d00:	0f 90       	pop	r0
     d02:	0f be       	out	0x3f, r0	; 63
     d04:	0f 90       	pop	r0
     d06:	1f 90       	pop	r1
     d08:	18 95       	reti

00000d0a <__vector_10>:
     d0a:	1f 92       	push	r1
     d0c:	0f 92       	push	r0
     d0e:	0f b6       	in	r0, 0x3f	; 63
     d10:	0f 92       	push	r0
     d12:	11 24       	eor	r1, r1
     d14:	0f 93       	push	r16
     d16:	1f 93       	push	r17
     d18:	2f 93       	push	r18
     d1a:	3f 93       	push	r19
     d1c:	4f 93       	push	r20
     d1e:	5f 93       	push	r21
     d20:	6f 93       	push	r22
     d22:	7f 93       	push	r23
     d24:	8f 93       	push	r24
     d26:	9f 93       	push	r25
     d28:	af 93       	push	r26
     d2a:	bf 93       	push	r27
     d2c:	ef 93       	push	r30
     d2e:	ff 93       	push	r31
     d30:	80 91 56 01 	lds	r24, 0x0156	; 0x800156 <overflows>
     d34:	90 91 57 01 	lds	r25, 0x0157	; 0x800157 <overflows+0x1>
     d38:	ac 01       	movw	r20, r24
     d3a:	09 2e       	mov	r0, r25
     d3c:	00 0c       	add	r0, r0
     d3e:	66 0b       	sbc	r22, r22
     d40:	77 0b       	sbc	r23, r23
     d42:	9a 01       	movw	r18, r20
     d44:	11 27       	eor	r17, r17
     d46:	00 27       	eor	r16, r16
     d48:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     d4c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     d50:	60 e0       	ldi	r22, 0x00	; 0
     d52:	70 e0       	ldi	r23, 0x00	; 0
     d54:	40 2b       	or	r20, r16
     d56:	51 2b       	or	r21, r17
     d58:	62 2b       	or	r22, r18
     d5a:	73 2b       	or	r23, r19
     d5c:	40 93 58 01 	sts	0x0158, r20	; 0x800158 <timestamp>
     d60:	50 93 59 01 	sts	0x0159, r21	; 0x800159 <timestamp+0x1>
     d64:	60 93 5a 01 	sts	0x015A, r22	; 0x80015a <timestamp+0x2>
     d68:	70 93 5b 01 	sts	0x015B, r23	; 0x80015b <timestamp+0x3>
     d6c:	b0 9b       	sbis	0x16, 0	; 22
     d6e:	1a c0       	rjmp	.+52     	; 0xda4 <__vector_10+0x9a>
     d70:	01 96       	adiw	r24, 0x01	; 1
     d72:	09 2e       	mov	r0, r25
     d74:	00 0c       	add	r0, r0
     d76:	aa 0b       	sbc	r26, r26
     d78:	bb 0b       	sbc	r27, r27
     d7a:	bc 01       	movw	r22, r24
     d7c:	55 27       	eor	r21, r21
     d7e:	44 27       	eor	r20, r20
     d80:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     d84:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     d88:	a0 e0       	ldi	r26, 0x00	; 0
     d8a:	b0 e0       	ldi	r27, 0x00	; 0
     d8c:	84 2b       	or	r24, r20
     d8e:	95 2b       	or	r25, r21
     d90:	a6 2b       	or	r26, r22
     d92:	b7 2b       	or	r27, r23
     d94:	80 93 58 01 	sts	0x0158, r24	; 0x800158 <timestamp>
     d98:	90 93 59 01 	sts	0x0159, r25	; 0x800159 <timestamp+0x1>
     d9c:	a0 93 5a 01 	sts	0x015A, r26	; 0x80015a <timestamp+0x2>
     da0:	b0 93 5b 01 	sts	0x015B, r27	; 0x80015b <timestamp+0x3>
     da4:	e0 91 02 02 	lds	r30, 0x0202	; 0x800202 <mtable+0xa>
     da8:	f0 91 03 02 	lds	r31, 0x0203	; 0x800203 <mtable+0xb>
     dac:	30 97       	sbiw	r30, 0x00	; 0
     dae:	39 f0       	breq	.+14     	; 0xdbe <__vector_10+0xb4>
     db0:	65 e0       	ldi	r22, 0x05	; 5
     db2:	70 e0       	ldi	r23, 0x00	; 0
     db4:	80 91 6a 01 	lds	r24, 0x016A	; 0x80016a <otable+0xa>
     db8:	90 91 6b 01 	lds	r25, 0x016B	; 0x80016b <otable+0xb>
     dbc:	09 95       	icall
     dbe:	0e 94 26 04 	call	0x84c	; 0x84c <schedule>
     dc2:	ff 91       	pop	r31
     dc4:	ef 91       	pop	r30
     dc6:	bf 91       	pop	r27
     dc8:	af 91       	pop	r26
     dca:	9f 91       	pop	r25
     dcc:	8f 91       	pop	r24
     dce:	7f 91       	pop	r23
     dd0:	6f 91       	pop	r22
     dd2:	5f 91       	pop	r21
     dd4:	4f 91       	pop	r20
     dd6:	3f 91       	pop	r19
     dd8:	2f 91       	pop	r18
     dda:	1f 91       	pop	r17
     ddc:	0f 91       	pop	r16
     dde:	0f 90       	pop	r0
     de0:	0f be       	out	0x3f, r0	; 63
     de2:	0f 90       	pop	r0
     de4:	1f 90       	pop	r1
     de6:	18 95       	reti

00000de8 <__vector_11>:
     de8:	1f 92       	push	r1
     dea:	0f 92       	push	r0
     dec:	0f b6       	in	r0, 0x3f	; 63
     dee:	0f 92       	push	r0
     df0:	11 24       	eor	r1, r1
     df2:	0f 93       	push	r16
     df4:	1f 93       	push	r17
     df6:	2f 93       	push	r18
     df8:	3f 93       	push	r19
     dfa:	4f 93       	push	r20
     dfc:	5f 93       	push	r21
     dfe:	6f 93       	push	r22
     e00:	7f 93       	push	r23
     e02:	8f 93       	push	r24
     e04:	9f 93       	push	r25
     e06:	af 93       	push	r26
     e08:	bf 93       	push	r27
     e0a:	ef 93       	push	r30
     e0c:	ff 93       	push	r31
     e0e:	80 91 56 01 	lds	r24, 0x0156	; 0x800156 <overflows>
     e12:	90 91 57 01 	lds	r25, 0x0157	; 0x800157 <overflows+0x1>
     e16:	ac 01       	movw	r20, r24
     e18:	09 2e       	mov	r0, r25
     e1a:	00 0c       	add	r0, r0
     e1c:	66 0b       	sbc	r22, r22
     e1e:	77 0b       	sbc	r23, r23
     e20:	9a 01       	movw	r18, r20
     e22:	11 27       	eor	r17, r17
     e24:	00 27       	eor	r16, r16
     e26:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     e2a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     e2e:	60 e0       	ldi	r22, 0x00	; 0
     e30:	70 e0       	ldi	r23, 0x00	; 0
     e32:	40 2b       	or	r20, r16
     e34:	51 2b       	or	r21, r17
     e36:	62 2b       	or	r22, r18
     e38:	73 2b       	or	r23, r19
     e3a:	40 93 58 01 	sts	0x0158, r20	; 0x800158 <timestamp>
     e3e:	50 93 59 01 	sts	0x0159, r21	; 0x800159 <timestamp+0x1>
     e42:	60 93 5a 01 	sts	0x015A, r22	; 0x80015a <timestamp+0x2>
     e46:	70 93 5b 01 	sts	0x015B, r23	; 0x80015b <timestamp+0x3>
     e4a:	b0 9b       	sbis	0x16, 0	; 22
     e4c:	1a c0       	rjmp	.+52     	; 0xe82 <__vector_11+0x9a>
     e4e:	01 96       	adiw	r24, 0x01	; 1
     e50:	09 2e       	mov	r0, r25
     e52:	00 0c       	add	r0, r0
     e54:	aa 0b       	sbc	r26, r26
     e56:	bb 0b       	sbc	r27, r27
     e58:	bc 01       	movw	r22, r24
     e5a:	55 27       	eor	r21, r21
     e5c:	44 27       	eor	r20, r20
     e5e:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     e62:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     e66:	a0 e0       	ldi	r26, 0x00	; 0
     e68:	b0 e0       	ldi	r27, 0x00	; 0
     e6a:	84 2b       	or	r24, r20
     e6c:	95 2b       	or	r25, r21
     e6e:	a6 2b       	or	r26, r22
     e70:	b7 2b       	or	r27, r23
     e72:	80 93 58 01 	sts	0x0158, r24	; 0x800158 <timestamp>
     e76:	90 93 59 01 	sts	0x0159, r25	; 0x800159 <timestamp+0x1>
     e7a:	a0 93 5a 01 	sts	0x015A, r26	; 0x80015a <timestamp+0x2>
     e7e:	b0 93 5b 01 	sts	0x015B, r27	; 0x80015b <timestamp+0x3>
     e82:	e0 91 04 02 	lds	r30, 0x0204	; 0x800204 <mtable+0xc>
     e86:	f0 91 05 02 	lds	r31, 0x0205	; 0x800205 <mtable+0xd>
     e8a:	30 97       	sbiw	r30, 0x00	; 0
     e8c:	39 f0       	breq	.+14     	; 0xe9c <__vector_11+0xb4>
     e8e:	66 e0       	ldi	r22, 0x06	; 6
     e90:	70 e0       	ldi	r23, 0x00	; 0
     e92:	80 91 6c 01 	lds	r24, 0x016C	; 0x80016c <otable+0xc>
     e96:	90 91 6d 01 	lds	r25, 0x016D	; 0x80016d <otable+0xd>
     e9a:	09 95       	icall
     e9c:	0e 94 26 04 	call	0x84c	; 0x84c <schedule>
     ea0:	ff 91       	pop	r31
     ea2:	ef 91       	pop	r30
     ea4:	bf 91       	pop	r27
     ea6:	af 91       	pop	r26
     ea8:	9f 91       	pop	r25
     eaa:	8f 91       	pop	r24
     eac:	7f 91       	pop	r23
     eae:	6f 91       	pop	r22
     eb0:	5f 91       	pop	r21
     eb2:	4f 91       	pop	r20
     eb4:	3f 91       	pop	r19
     eb6:	2f 91       	pop	r18
     eb8:	1f 91       	pop	r17
     eba:	0f 91       	pop	r16
     ebc:	0f 90       	pop	r0
     ebe:	0f be       	out	0x3f, r0	; 63
     ec0:	0f 90       	pop	r0
     ec2:	1f 90       	pop	r1
     ec4:	18 95       	reti

00000ec6 <__vector_12>:
     ec6:	1f 92       	push	r1
     ec8:	0f 92       	push	r0
     eca:	0f b6       	in	r0, 0x3f	; 63
     ecc:	0f 92       	push	r0
     ece:	11 24       	eor	r1, r1
     ed0:	0f 93       	push	r16
     ed2:	1f 93       	push	r17
     ed4:	2f 93       	push	r18
     ed6:	3f 93       	push	r19
     ed8:	4f 93       	push	r20
     eda:	5f 93       	push	r21
     edc:	6f 93       	push	r22
     ede:	7f 93       	push	r23
     ee0:	8f 93       	push	r24
     ee2:	9f 93       	push	r25
     ee4:	af 93       	push	r26
     ee6:	bf 93       	push	r27
     ee8:	ef 93       	push	r30
     eea:	ff 93       	push	r31
     eec:	80 91 56 01 	lds	r24, 0x0156	; 0x800156 <overflows>
     ef0:	90 91 57 01 	lds	r25, 0x0157	; 0x800157 <overflows+0x1>
     ef4:	ac 01       	movw	r20, r24
     ef6:	09 2e       	mov	r0, r25
     ef8:	00 0c       	add	r0, r0
     efa:	66 0b       	sbc	r22, r22
     efc:	77 0b       	sbc	r23, r23
     efe:	9a 01       	movw	r18, r20
     f00:	11 27       	eor	r17, r17
     f02:	00 27       	eor	r16, r16
     f04:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     f08:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     f0c:	60 e0       	ldi	r22, 0x00	; 0
     f0e:	70 e0       	ldi	r23, 0x00	; 0
     f10:	40 2b       	or	r20, r16
     f12:	51 2b       	or	r21, r17
     f14:	62 2b       	or	r22, r18
     f16:	73 2b       	or	r23, r19
     f18:	40 93 58 01 	sts	0x0158, r20	; 0x800158 <timestamp>
     f1c:	50 93 59 01 	sts	0x0159, r21	; 0x800159 <timestamp+0x1>
     f20:	60 93 5a 01 	sts	0x015A, r22	; 0x80015a <timestamp+0x2>
     f24:	70 93 5b 01 	sts	0x015B, r23	; 0x80015b <timestamp+0x3>
     f28:	b0 9b       	sbis	0x16, 0	; 22
     f2a:	1a c0       	rjmp	.+52     	; 0xf60 <__vector_12+0x9a>
     f2c:	01 96       	adiw	r24, 0x01	; 1
     f2e:	09 2e       	mov	r0, r25
     f30:	00 0c       	add	r0, r0
     f32:	aa 0b       	sbc	r26, r26
     f34:	bb 0b       	sbc	r27, r27
     f36:	bc 01       	movw	r22, r24
     f38:	55 27       	eor	r21, r21
     f3a:	44 27       	eor	r20, r20
     f3c:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     f40:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     f44:	a0 e0       	ldi	r26, 0x00	; 0
     f46:	b0 e0       	ldi	r27, 0x00	; 0
     f48:	84 2b       	or	r24, r20
     f4a:	95 2b       	or	r25, r21
     f4c:	a6 2b       	or	r26, r22
     f4e:	b7 2b       	or	r27, r23
     f50:	80 93 58 01 	sts	0x0158, r24	; 0x800158 <timestamp>
     f54:	90 93 59 01 	sts	0x0159, r25	; 0x800159 <timestamp+0x1>
     f58:	a0 93 5a 01 	sts	0x015A, r26	; 0x80015a <timestamp+0x2>
     f5c:	b0 93 5b 01 	sts	0x015B, r27	; 0x80015b <timestamp+0x3>
     f60:	e0 91 06 02 	lds	r30, 0x0206	; 0x800206 <mtable+0xe>
     f64:	f0 91 07 02 	lds	r31, 0x0207	; 0x800207 <mtable+0xf>
     f68:	30 97       	sbiw	r30, 0x00	; 0
     f6a:	39 f0       	breq	.+14     	; 0xf7a <__vector_12+0xb4>
     f6c:	67 e0       	ldi	r22, 0x07	; 7
     f6e:	70 e0       	ldi	r23, 0x00	; 0
     f70:	80 91 6e 01 	lds	r24, 0x016E	; 0x80016e <otable+0xe>
     f74:	90 91 6f 01 	lds	r25, 0x016F	; 0x80016f <otable+0xf>
     f78:	09 95       	icall
     f7a:	0e 94 26 04 	call	0x84c	; 0x84c <schedule>
     f7e:	ff 91       	pop	r31
     f80:	ef 91       	pop	r30
     f82:	bf 91       	pop	r27
     f84:	af 91       	pop	r26
     f86:	9f 91       	pop	r25
     f88:	8f 91       	pop	r24
     f8a:	7f 91       	pop	r23
     f8c:	6f 91       	pop	r22
     f8e:	5f 91       	pop	r21
     f90:	4f 91       	pop	r20
     f92:	3f 91       	pop	r19
     f94:	2f 91       	pop	r18
     f96:	1f 91       	pop	r17
     f98:	0f 91       	pop	r16
     f9a:	0f 90       	pop	r0
     f9c:	0f be       	out	0x3f, r0	; 63
     f9e:	0f 90       	pop	r0
     fa0:	1f 90       	pop	r1
     fa2:	18 95       	reti

00000fa4 <__vector_13>:
     fa4:	1f 92       	push	r1
     fa6:	0f 92       	push	r0
     fa8:	0f b6       	in	r0, 0x3f	; 63
     faa:	0f 92       	push	r0
     fac:	11 24       	eor	r1, r1
     fae:	0f 93       	push	r16
     fb0:	1f 93       	push	r17
     fb2:	2f 93       	push	r18
     fb4:	3f 93       	push	r19
     fb6:	4f 93       	push	r20
     fb8:	5f 93       	push	r21
     fba:	6f 93       	push	r22
     fbc:	7f 93       	push	r23
     fbe:	8f 93       	push	r24
     fc0:	9f 93       	push	r25
     fc2:	af 93       	push	r26
     fc4:	bf 93       	push	r27
     fc6:	ef 93       	push	r30
     fc8:	ff 93       	push	r31
     fca:	80 91 56 01 	lds	r24, 0x0156	; 0x800156 <overflows>
     fce:	90 91 57 01 	lds	r25, 0x0157	; 0x800157 <overflows+0x1>
     fd2:	ac 01       	movw	r20, r24
     fd4:	09 2e       	mov	r0, r25
     fd6:	00 0c       	add	r0, r0
     fd8:	66 0b       	sbc	r22, r22
     fda:	77 0b       	sbc	r23, r23
     fdc:	9a 01       	movw	r18, r20
     fde:	11 27       	eor	r17, r17
     fe0:	00 27       	eor	r16, r16
     fe2:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     fe6:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     fea:	60 e0       	ldi	r22, 0x00	; 0
     fec:	70 e0       	ldi	r23, 0x00	; 0
     fee:	40 2b       	or	r20, r16
     ff0:	51 2b       	or	r21, r17
     ff2:	62 2b       	or	r22, r18
     ff4:	73 2b       	or	r23, r19
     ff6:	40 93 58 01 	sts	0x0158, r20	; 0x800158 <timestamp>
     ffa:	50 93 59 01 	sts	0x0159, r21	; 0x800159 <timestamp+0x1>
     ffe:	60 93 5a 01 	sts	0x015A, r22	; 0x80015a <timestamp+0x2>
    1002:	70 93 5b 01 	sts	0x015B, r23	; 0x80015b <timestamp+0x3>
    1006:	b0 9b       	sbis	0x16, 0	; 22
    1008:	1a c0       	rjmp	.+52     	; 0x103e <__vector_13+0x9a>
    100a:	01 96       	adiw	r24, 0x01	; 1
    100c:	09 2e       	mov	r0, r25
    100e:	00 0c       	add	r0, r0
    1010:	aa 0b       	sbc	r26, r26
    1012:	bb 0b       	sbc	r27, r27
    1014:	bc 01       	movw	r22, r24
    1016:	55 27       	eor	r21, r21
    1018:	44 27       	eor	r20, r20
    101a:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    101e:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1022:	a0 e0       	ldi	r26, 0x00	; 0
    1024:	b0 e0       	ldi	r27, 0x00	; 0
    1026:	84 2b       	or	r24, r20
    1028:	95 2b       	or	r25, r21
    102a:	a6 2b       	or	r26, r22
    102c:	b7 2b       	or	r27, r23
    102e:	80 93 58 01 	sts	0x0158, r24	; 0x800158 <timestamp>
    1032:	90 93 59 01 	sts	0x0159, r25	; 0x800159 <timestamp+0x1>
    1036:	a0 93 5a 01 	sts	0x015A, r26	; 0x80015a <timestamp+0x2>
    103a:	b0 93 5b 01 	sts	0x015B, r27	; 0x80015b <timestamp+0x3>
    103e:	e0 91 08 02 	lds	r30, 0x0208	; 0x800208 <mtable+0x10>
    1042:	f0 91 09 02 	lds	r31, 0x0209	; 0x800209 <mtable+0x11>
    1046:	30 97       	sbiw	r30, 0x00	; 0
    1048:	39 f0       	breq	.+14     	; 0x1058 <__vector_13+0xb4>
    104a:	68 e0       	ldi	r22, 0x08	; 8
    104c:	70 e0       	ldi	r23, 0x00	; 0
    104e:	80 91 70 01 	lds	r24, 0x0170	; 0x800170 <otable+0x10>
    1052:	90 91 71 01 	lds	r25, 0x0171	; 0x800171 <otable+0x11>
    1056:	09 95       	icall
    1058:	0e 94 26 04 	call	0x84c	; 0x84c <schedule>
    105c:	ff 91       	pop	r31
    105e:	ef 91       	pop	r30
    1060:	bf 91       	pop	r27
    1062:	af 91       	pop	r26
    1064:	9f 91       	pop	r25
    1066:	8f 91       	pop	r24
    1068:	7f 91       	pop	r23
    106a:	6f 91       	pop	r22
    106c:	5f 91       	pop	r21
    106e:	4f 91       	pop	r20
    1070:	3f 91       	pop	r19
    1072:	2f 91       	pop	r18
    1074:	1f 91       	pop	r17
    1076:	0f 91       	pop	r16
    1078:	0f 90       	pop	r0
    107a:	0f be       	out	0x3f, r0	; 63
    107c:	0f 90       	pop	r0
    107e:	1f 90       	pop	r1
    1080:	18 95       	reti

00001082 <__vector_14>:
    1082:	1f 92       	push	r1
    1084:	0f 92       	push	r0
    1086:	0f b6       	in	r0, 0x3f	; 63
    1088:	0f 92       	push	r0
    108a:	11 24       	eor	r1, r1
    108c:	0f 93       	push	r16
    108e:	1f 93       	push	r17
    1090:	2f 93       	push	r18
    1092:	3f 93       	push	r19
    1094:	4f 93       	push	r20
    1096:	5f 93       	push	r21
    1098:	6f 93       	push	r22
    109a:	7f 93       	push	r23
    109c:	8f 93       	push	r24
    109e:	9f 93       	push	r25
    10a0:	af 93       	push	r26
    10a2:	bf 93       	push	r27
    10a4:	ef 93       	push	r30
    10a6:	ff 93       	push	r31
    10a8:	80 91 56 01 	lds	r24, 0x0156	; 0x800156 <overflows>
    10ac:	90 91 57 01 	lds	r25, 0x0157	; 0x800157 <overflows+0x1>
    10b0:	ac 01       	movw	r20, r24
    10b2:	09 2e       	mov	r0, r25
    10b4:	00 0c       	add	r0, r0
    10b6:	66 0b       	sbc	r22, r22
    10b8:	77 0b       	sbc	r23, r23
    10ba:	9a 01       	movw	r18, r20
    10bc:	11 27       	eor	r17, r17
    10be:	00 27       	eor	r16, r16
    10c0:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    10c4:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    10c8:	60 e0       	ldi	r22, 0x00	; 0
    10ca:	70 e0       	ldi	r23, 0x00	; 0
    10cc:	40 2b       	or	r20, r16
    10ce:	51 2b       	or	r21, r17
    10d0:	62 2b       	or	r22, r18
    10d2:	73 2b       	or	r23, r19
    10d4:	40 93 58 01 	sts	0x0158, r20	; 0x800158 <timestamp>
    10d8:	50 93 59 01 	sts	0x0159, r21	; 0x800159 <timestamp+0x1>
    10dc:	60 93 5a 01 	sts	0x015A, r22	; 0x80015a <timestamp+0x2>
    10e0:	70 93 5b 01 	sts	0x015B, r23	; 0x80015b <timestamp+0x3>
    10e4:	b0 9b       	sbis	0x16, 0	; 22
    10e6:	1a c0       	rjmp	.+52     	; 0x111c <__vector_14+0x9a>
    10e8:	01 96       	adiw	r24, 0x01	; 1
    10ea:	09 2e       	mov	r0, r25
    10ec:	00 0c       	add	r0, r0
    10ee:	aa 0b       	sbc	r26, r26
    10f0:	bb 0b       	sbc	r27, r27
    10f2:	bc 01       	movw	r22, r24
    10f4:	55 27       	eor	r21, r21
    10f6:	44 27       	eor	r20, r20
    10f8:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    10fc:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1100:	a0 e0       	ldi	r26, 0x00	; 0
    1102:	b0 e0       	ldi	r27, 0x00	; 0
    1104:	84 2b       	or	r24, r20
    1106:	95 2b       	or	r25, r21
    1108:	a6 2b       	or	r26, r22
    110a:	b7 2b       	or	r27, r23
    110c:	80 93 58 01 	sts	0x0158, r24	; 0x800158 <timestamp>
    1110:	90 93 59 01 	sts	0x0159, r25	; 0x800159 <timestamp+0x1>
    1114:	a0 93 5a 01 	sts	0x015A, r26	; 0x80015a <timestamp+0x2>
    1118:	b0 93 5b 01 	sts	0x015B, r27	; 0x80015b <timestamp+0x3>
    111c:	e0 91 0a 02 	lds	r30, 0x020A	; 0x80020a <mtable+0x12>
    1120:	f0 91 0b 02 	lds	r31, 0x020B	; 0x80020b <mtable+0x13>
    1124:	30 97       	sbiw	r30, 0x00	; 0
    1126:	39 f0       	breq	.+14     	; 0x1136 <__vector_14+0xb4>
    1128:	69 e0       	ldi	r22, 0x09	; 9
    112a:	70 e0       	ldi	r23, 0x00	; 0
    112c:	80 91 72 01 	lds	r24, 0x0172	; 0x800172 <otable+0x12>
    1130:	90 91 73 01 	lds	r25, 0x0173	; 0x800173 <otable+0x13>
    1134:	09 95       	icall
    1136:	0e 94 26 04 	call	0x84c	; 0x84c <schedule>
    113a:	ff 91       	pop	r31
    113c:	ef 91       	pop	r30
    113e:	bf 91       	pop	r27
    1140:	af 91       	pop	r26
    1142:	9f 91       	pop	r25
    1144:	8f 91       	pop	r24
    1146:	7f 91       	pop	r23
    1148:	6f 91       	pop	r22
    114a:	5f 91       	pop	r21
    114c:	4f 91       	pop	r20
    114e:	3f 91       	pop	r19
    1150:	2f 91       	pop	r18
    1152:	1f 91       	pop	r17
    1154:	0f 91       	pop	r16
    1156:	0f 90       	pop	r0
    1158:	0f be       	out	0x3f, r0	; 63
    115a:	0f 90       	pop	r0
    115c:	1f 90       	pop	r1
    115e:	18 95       	reti

00001160 <__vector_15>:
    1160:	1f 92       	push	r1
    1162:	0f 92       	push	r0
    1164:	0f b6       	in	r0, 0x3f	; 63
    1166:	0f 92       	push	r0
    1168:	11 24       	eor	r1, r1
    116a:	0f 93       	push	r16
    116c:	1f 93       	push	r17
    116e:	2f 93       	push	r18
    1170:	3f 93       	push	r19
    1172:	4f 93       	push	r20
    1174:	5f 93       	push	r21
    1176:	6f 93       	push	r22
    1178:	7f 93       	push	r23
    117a:	8f 93       	push	r24
    117c:	9f 93       	push	r25
    117e:	af 93       	push	r26
    1180:	bf 93       	push	r27
    1182:	ef 93       	push	r30
    1184:	ff 93       	push	r31
    1186:	80 91 56 01 	lds	r24, 0x0156	; 0x800156 <overflows>
    118a:	90 91 57 01 	lds	r25, 0x0157	; 0x800157 <overflows+0x1>
    118e:	ac 01       	movw	r20, r24
    1190:	09 2e       	mov	r0, r25
    1192:	00 0c       	add	r0, r0
    1194:	66 0b       	sbc	r22, r22
    1196:	77 0b       	sbc	r23, r23
    1198:	9a 01       	movw	r18, r20
    119a:	11 27       	eor	r17, r17
    119c:	00 27       	eor	r16, r16
    119e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    11a2:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    11a6:	60 e0       	ldi	r22, 0x00	; 0
    11a8:	70 e0       	ldi	r23, 0x00	; 0
    11aa:	40 2b       	or	r20, r16
    11ac:	51 2b       	or	r21, r17
    11ae:	62 2b       	or	r22, r18
    11b0:	73 2b       	or	r23, r19
    11b2:	40 93 58 01 	sts	0x0158, r20	; 0x800158 <timestamp>
    11b6:	50 93 59 01 	sts	0x0159, r21	; 0x800159 <timestamp+0x1>
    11ba:	60 93 5a 01 	sts	0x015A, r22	; 0x80015a <timestamp+0x2>
    11be:	70 93 5b 01 	sts	0x015B, r23	; 0x80015b <timestamp+0x3>
    11c2:	b0 9b       	sbis	0x16, 0	; 22
    11c4:	1a c0       	rjmp	.+52     	; 0x11fa <__vector_15+0x9a>
    11c6:	01 96       	adiw	r24, 0x01	; 1
    11c8:	09 2e       	mov	r0, r25
    11ca:	00 0c       	add	r0, r0
    11cc:	aa 0b       	sbc	r26, r26
    11ce:	bb 0b       	sbc	r27, r27
    11d0:	bc 01       	movw	r22, r24
    11d2:	55 27       	eor	r21, r21
    11d4:	44 27       	eor	r20, r20
    11d6:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    11da:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    11de:	a0 e0       	ldi	r26, 0x00	; 0
    11e0:	b0 e0       	ldi	r27, 0x00	; 0
    11e2:	84 2b       	or	r24, r20
    11e4:	95 2b       	or	r25, r21
    11e6:	a6 2b       	or	r26, r22
    11e8:	b7 2b       	or	r27, r23
    11ea:	80 93 58 01 	sts	0x0158, r24	; 0x800158 <timestamp>
    11ee:	90 93 59 01 	sts	0x0159, r25	; 0x800159 <timestamp+0x1>
    11f2:	a0 93 5a 01 	sts	0x015A, r26	; 0x80015a <timestamp+0x2>
    11f6:	b0 93 5b 01 	sts	0x015B, r27	; 0x80015b <timestamp+0x3>
    11fa:	e0 91 0c 02 	lds	r30, 0x020C	; 0x80020c <mtable+0x14>
    11fe:	f0 91 0d 02 	lds	r31, 0x020D	; 0x80020d <mtable+0x15>
    1202:	30 97       	sbiw	r30, 0x00	; 0
    1204:	39 f0       	breq	.+14     	; 0x1214 <__vector_15+0xb4>
    1206:	6a e0       	ldi	r22, 0x0A	; 10
    1208:	70 e0       	ldi	r23, 0x00	; 0
    120a:	80 91 74 01 	lds	r24, 0x0174	; 0x800174 <otable+0x14>
    120e:	90 91 75 01 	lds	r25, 0x0175	; 0x800175 <otable+0x15>
    1212:	09 95       	icall
    1214:	0e 94 26 04 	call	0x84c	; 0x84c <schedule>
    1218:	ff 91       	pop	r31
    121a:	ef 91       	pop	r30
    121c:	bf 91       	pop	r27
    121e:	af 91       	pop	r26
    1220:	9f 91       	pop	r25
    1222:	8f 91       	pop	r24
    1224:	7f 91       	pop	r23
    1226:	6f 91       	pop	r22
    1228:	5f 91       	pop	r21
    122a:	4f 91       	pop	r20
    122c:	3f 91       	pop	r19
    122e:	2f 91       	pop	r18
    1230:	1f 91       	pop	r17
    1232:	0f 91       	pop	r16
    1234:	0f 90       	pop	r0
    1236:	0f be       	out	0x3f, r0	; 63
    1238:	0f 90       	pop	r0
    123a:	1f 90       	pop	r1
    123c:	18 95       	reti

0000123e <__vector_16>:
    123e:	1f 92       	push	r1
    1240:	0f 92       	push	r0
    1242:	0f b6       	in	r0, 0x3f	; 63
    1244:	0f 92       	push	r0
    1246:	11 24       	eor	r1, r1
    1248:	0f 93       	push	r16
    124a:	1f 93       	push	r17
    124c:	2f 93       	push	r18
    124e:	3f 93       	push	r19
    1250:	4f 93       	push	r20
    1252:	5f 93       	push	r21
    1254:	6f 93       	push	r22
    1256:	7f 93       	push	r23
    1258:	8f 93       	push	r24
    125a:	9f 93       	push	r25
    125c:	af 93       	push	r26
    125e:	bf 93       	push	r27
    1260:	ef 93       	push	r30
    1262:	ff 93       	push	r31
    1264:	80 91 56 01 	lds	r24, 0x0156	; 0x800156 <overflows>
    1268:	90 91 57 01 	lds	r25, 0x0157	; 0x800157 <overflows+0x1>
    126c:	ac 01       	movw	r20, r24
    126e:	09 2e       	mov	r0, r25
    1270:	00 0c       	add	r0, r0
    1272:	66 0b       	sbc	r22, r22
    1274:	77 0b       	sbc	r23, r23
    1276:	9a 01       	movw	r18, r20
    1278:	11 27       	eor	r17, r17
    127a:	00 27       	eor	r16, r16
    127c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1280:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1284:	60 e0       	ldi	r22, 0x00	; 0
    1286:	70 e0       	ldi	r23, 0x00	; 0
    1288:	40 2b       	or	r20, r16
    128a:	51 2b       	or	r21, r17
    128c:	62 2b       	or	r22, r18
    128e:	73 2b       	or	r23, r19
    1290:	40 93 58 01 	sts	0x0158, r20	; 0x800158 <timestamp>
    1294:	50 93 59 01 	sts	0x0159, r21	; 0x800159 <timestamp+0x1>
    1298:	60 93 5a 01 	sts	0x015A, r22	; 0x80015a <timestamp+0x2>
    129c:	70 93 5b 01 	sts	0x015B, r23	; 0x80015b <timestamp+0x3>
    12a0:	b0 9b       	sbis	0x16, 0	; 22
    12a2:	1a c0       	rjmp	.+52     	; 0x12d8 <__vector_16+0x9a>
    12a4:	01 96       	adiw	r24, 0x01	; 1
    12a6:	09 2e       	mov	r0, r25
    12a8:	00 0c       	add	r0, r0
    12aa:	aa 0b       	sbc	r26, r26
    12ac:	bb 0b       	sbc	r27, r27
    12ae:	bc 01       	movw	r22, r24
    12b0:	55 27       	eor	r21, r21
    12b2:	44 27       	eor	r20, r20
    12b4:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    12b8:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    12bc:	a0 e0       	ldi	r26, 0x00	; 0
    12be:	b0 e0       	ldi	r27, 0x00	; 0
    12c0:	84 2b       	or	r24, r20
    12c2:	95 2b       	or	r25, r21
    12c4:	a6 2b       	or	r26, r22
    12c6:	b7 2b       	or	r27, r23
    12c8:	80 93 58 01 	sts	0x0158, r24	; 0x800158 <timestamp>
    12cc:	90 93 59 01 	sts	0x0159, r25	; 0x800159 <timestamp+0x1>
    12d0:	a0 93 5a 01 	sts	0x015A, r26	; 0x80015a <timestamp+0x2>
    12d4:	b0 93 5b 01 	sts	0x015B, r27	; 0x80015b <timestamp+0x3>
    12d8:	e0 91 0e 02 	lds	r30, 0x020E	; 0x80020e <mtable+0x16>
    12dc:	f0 91 0f 02 	lds	r31, 0x020F	; 0x80020f <mtable+0x17>
    12e0:	30 97       	sbiw	r30, 0x00	; 0
    12e2:	39 f0       	breq	.+14     	; 0x12f2 <__vector_16+0xb4>
    12e4:	6b e0       	ldi	r22, 0x0B	; 11
    12e6:	70 e0       	ldi	r23, 0x00	; 0
    12e8:	80 91 76 01 	lds	r24, 0x0176	; 0x800176 <otable+0x16>
    12ec:	90 91 77 01 	lds	r25, 0x0177	; 0x800177 <otable+0x17>
    12f0:	09 95       	icall
    12f2:	0e 94 26 04 	call	0x84c	; 0x84c <schedule>
    12f6:	ff 91       	pop	r31
    12f8:	ef 91       	pop	r30
    12fa:	bf 91       	pop	r27
    12fc:	af 91       	pop	r26
    12fe:	9f 91       	pop	r25
    1300:	8f 91       	pop	r24
    1302:	7f 91       	pop	r23
    1304:	6f 91       	pop	r22
    1306:	5f 91       	pop	r21
    1308:	4f 91       	pop	r20
    130a:	3f 91       	pop	r19
    130c:	2f 91       	pop	r18
    130e:	1f 91       	pop	r17
    1310:	0f 91       	pop	r16
    1312:	0f 90       	pop	r0
    1314:	0f be       	out	0x3f, r0	; 63
    1316:	0f 90       	pop	r0
    1318:	1f 90       	pop	r1
    131a:	18 95       	reti

0000131c <__vector_17>:
    131c:	1f 92       	push	r1
    131e:	0f 92       	push	r0
    1320:	0f b6       	in	r0, 0x3f	; 63
    1322:	0f 92       	push	r0
    1324:	11 24       	eor	r1, r1
    1326:	0f 93       	push	r16
    1328:	1f 93       	push	r17
    132a:	2f 93       	push	r18
    132c:	3f 93       	push	r19
    132e:	4f 93       	push	r20
    1330:	5f 93       	push	r21
    1332:	6f 93       	push	r22
    1334:	7f 93       	push	r23
    1336:	8f 93       	push	r24
    1338:	9f 93       	push	r25
    133a:	af 93       	push	r26
    133c:	bf 93       	push	r27
    133e:	ef 93       	push	r30
    1340:	ff 93       	push	r31
    1342:	80 91 56 01 	lds	r24, 0x0156	; 0x800156 <overflows>
    1346:	90 91 57 01 	lds	r25, 0x0157	; 0x800157 <overflows+0x1>
    134a:	ac 01       	movw	r20, r24
    134c:	09 2e       	mov	r0, r25
    134e:	00 0c       	add	r0, r0
    1350:	66 0b       	sbc	r22, r22
    1352:	77 0b       	sbc	r23, r23
    1354:	9a 01       	movw	r18, r20
    1356:	11 27       	eor	r17, r17
    1358:	00 27       	eor	r16, r16
    135a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    135e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1362:	60 e0       	ldi	r22, 0x00	; 0
    1364:	70 e0       	ldi	r23, 0x00	; 0
    1366:	40 2b       	or	r20, r16
    1368:	51 2b       	or	r21, r17
    136a:	62 2b       	or	r22, r18
    136c:	73 2b       	or	r23, r19
    136e:	40 93 58 01 	sts	0x0158, r20	; 0x800158 <timestamp>
    1372:	50 93 59 01 	sts	0x0159, r21	; 0x800159 <timestamp+0x1>
    1376:	60 93 5a 01 	sts	0x015A, r22	; 0x80015a <timestamp+0x2>
    137a:	70 93 5b 01 	sts	0x015B, r23	; 0x80015b <timestamp+0x3>
    137e:	b0 9b       	sbis	0x16, 0	; 22
    1380:	1a c0       	rjmp	.+52     	; 0x13b6 <__vector_17+0x9a>
    1382:	01 96       	adiw	r24, 0x01	; 1
    1384:	09 2e       	mov	r0, r25
    1386:	00 0c       	add	r0, r0
    1388:	aa 0b       	sbc	r26, r26
    138a:	bb 0b       	sbc	r27, r27
    138c:	bc 01       	movw	r22, r24
    138e:	55 27       	eor	r21, r21
    1390:	44 27       	eor	r20, r20
    1392:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1396:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    139a:	a0 e0       	ldi	r26, 0x00	; 0
    139c:	b0 e0       	ldi	r27, 0x00	; 0
    139e:	84 2b       	or	r24, r20
    13a0:	95 2b       	or	r25, r21
    13a2:	a6 2b       	or	r26, r22
    13a4:	b7 2b       	or	r27, r23
    13a6:	80 93 58 01 	sts	0x0158, r24	; 0x800158 <timestamp>
    13aa:	90 93 59 01 	sts	0x0159, r25	; 0x800159 <timestamp+0x1>
    13ae:	a0 93 5a 01 	sts	0x015A, r26	; 0x80015a <timestamp+0x2>
    13b2:	b0 93 5b 01 	sts	0x015B, r27	; 0x80015b <timestamp+0x3>
    13b6:	e0 91 10 02 	lds	r30, 0x0210	; 0x800210 <mtable+0x18>
    13ba:	f0 91 11 02 	lds	r31, 0x0211	; 0x800211 <mtable+0x19>
    13be:	30 97       	sbiw	r30, 0x00	; 0
    13c0:	39 f0       	breq	.+14     	; 0x13d0 <__vector_17+0xb4>
    13c2:	6c e0       	ldi	r22, 0x0C	; 12
    13c4:	70 e0       	ldi	r23, 0x00	; 0
    13c6:	80 91 78 01 	lds	r24, 0x0178	; 0x800178 <otable+0x18>
    13ca:	90 91 79 01 	lds	r25, 0x0179	; 0x800179 <otable+0x19>
    13ce:	09 95       	icall
    13d0:	0e 94 26 04 	call	0x84c	; 0x84c <schedule>
    13d4:	ff 91       	pop	r31
    13d6:	ef 91       	pop	r30
    13d8:	bf 91       	pop	r27
    13da:	af 91       	pop	r26
    13dc:	9f 91       	pop	r25
    13de:	8f 91       	pop	r24
    13e0:	7f 91       	pop	r23
    13e2:	6f 91       	pop	r22
    13e4:	5f 91       	pop	r21
    13e6:	4f 91       	pop	r20
    13e8:	3f 91       	pop	r19
    13ea:	2f 91       	pop	r18
    13ec:	1f 91       	pop	r17
    13ee:	0f 91       	pop	r16
    13f0:	0f 90       	pop	r0
    13f2:	0f be       	out	0x3f, r0	; 63
    13f4:	0f 90       	pop	r0
    13f6:	1f 90       	pop	r1
    13f8:	18 95       	reti

000013fa <__vector_18>:
    13fa:	1f 92       	push	r1
    13fc:	0f 92       	push	r0
    13fe:	0f b6       	in	r0, 0x3f	; 63
    1400:	0f 92       	push	r0
    1402:	11 24       	eor	r1, r1
    1404:	0f 93       	push	r16
    1406:	1f 93       	push	r17
    1408:	2f 93       	push	r18
    140a:	3f 93       	push	r19
    140c:	4f 93       	push	r20
    140e:	5f 93       	push	r21
    1410:	6f 93       	push	r22
    1412:	7f 93       	push	r23
    1414:	8f 93       	push	r24
    1416:	9f 93       	push	r25
    1418:	af 93       	push	r26
    141a:	bf 93       	push	r27
    141c:	ef 93       	push	r30
    141e:	ff 93       	push	r31
    1420:	80 91 56 01 	lds	r24, 0x0156	; 0x800156 <overflows>
    1424:	90 91 57 01 	lds	r25, 0x0157	; 0x800157 <overflows+0x1>
    1428:	ac 01       	movw	r20, r24
    142a:	09 2e       	mov	r0, r25
    142c:	00 0c       	add	r0, r0
    142e:	66 0b       	sbc	r22, r22
    1430:	77 0b       	sbc	r23, r23
    1432:	9a 01       	movw	r18, r20
    1434:	11 27       	eor	r17, r17
    1436:	00 27       	eor	r16, r16
    1438:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    143c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1440:	60 e0       	ldi	r22, 0x00	; 0
    1442:	70 e0       	ldi	r23, 0x00	; 0
    1444:	40 2b       	or	r20, r16
    1446:	51 2b       	or	r21, r17
    1448:	62 2b       	or	r22, r18
    144a:	73 2b       	or	r23, r19
    144c:	40 93 58 01 	sts	0x0158, r20	; 0x800158 <timestamp>
    1450:	50 93 59 01 	sts	0x0159, r21	; 0x800159 <timestamp+0x1>
    1454:	60 93 5a 01 	sts	0x015A, r22	; 0x80015a <timestamp+0x2>
    1458:	70 93 5b 01 	sts	0x015B, r23	; 0x80015b <timestamp+0x3>
    145c:	b0 9b       	sbis	0x16, 0	; 22
    145e:	1a c0       	rjmp	.+52     	; 0x1494 <__vector_18+0x9a>
    1460:	01 96       	adiw	r24, 0x01	; 1
    1462:	09 2e       	mov	r0, r25
    1464:	00 0c       	add	r0, r0
    1466:	aa 0b       	sbc	r26, r26
    1468:	bb 0b       	sbc	r27, r27
    146a:	bc 01       	movw	r22, r24
    146c:	55 27       	eor	r21, r21
    146e:	44 27       	eor	r20, r20
    1470:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1474:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1478:	a0 e0       	ldi	r26, 0x00	; 0
    147a:	b0 e0       	ldi	r27, 0x00	; 0
    147c:	84 2b       	or	r24, r20
    147e:	95 2b       	or	r25, r21
    1480:	a6 2b       	or	r26, r22
    1482:	b7 2b       	or	r27, r23
    1484:	80 93 58 01 	sts	0x0158, r24	; 0x800158 <timestamp>
    1488:	90 93 59 01 	sts	0x0159, r25	; 0x800159 <timestamp+0x1>
    148c:	a0 93 5a 01 	sts	0x015A, r26	; 0x80015a <timestamp+0x2>
    1490:	b0 93 5b 01 	sts	0x015B, r27	; 0x80015b <timestamp+0x3>
    1494:	e0 91 12 02 	lds	r30, 0x0212	; 0x800212 <mtable+0x1a>
    1498:	f0 91 13 02 	lds	r31, 0x0213	; 0x800213 <mtable+0x1b>
    149c:	30 97       	sbiw	r30, 0x00	; 0
    149e:	39 f0       	breq	.+14     	; 0x14ae <__vector_18+0xb4>
    14a0:	6d e0       	ldi	r22, 0x0D	; 13
    14a2:	70 e0       	ldi	r23, 0x00	; 0
    14a4:	80 91 7a 01 	lds	r24, 0x017A	; 0x80017a <otable+0x1a>
    14a8:	90 91 7b 01 	lds	r25, 0x017B	; 0x80017b <otable+0x1b>
    14ac:	09 95       	icall
    14ae:	0e 94 26 04 	call	0x84c	; 0x84c <schedule>
    14b2:	ff 91       	pop	r31
    14b4:	ef 91       	pop	r30
    14b6:	bf 91       	pop	r27
    14b8:	af 91       	pop	r26
    14ba:	9f 91       	pop	r25
    14bc:	8f 91       	pop	r24
    14be:	7f 91       	pop	r23
    14c0:	6f 91       	pop	r22
    14c2:	5f 91       	pop	r21
    14c4:	4f 91       	pop	r20
    14c6:	3f 91       	pop	r19
    14c8:	2f 91       	pop	r18
    14ca:	1f 91       	pop	r17
    14cc:	0f 91       	pop	r16
    14ce:	0f 90       	pop	r0
    14d0:	0f be       	out	0x3f, r0	; 63
    14d2:	0f 90       	pop	r0
    14d4:	1f 90       	pop	r1
    14d6:	18 95       	reti

000014d8 <__vector_19>:
    14d8:	1f 92       	push	r1
    14da:	0f 92       	push	r0
    14dc:	0f b6       	in	r0, 0x3f	; 63
    14de:	0f 92       	push	r0
    14e0:	11 24       	eor	r1, r1
    14e2:	0f 93       	push	r16
    14e4:	1f 93       	push	r17
    14e6:	2f 93       	push	r18
    14e8:	3f 93       	push	r19
    14ea:	4f 93       	push	r20
    14ec:	5f 93       	push	r21
    14ee:	6f 93       	push	r22
    14f0:	7f 93       	push	r23
    14f2:	8f 93       	push	r24
    14f4:	9f 93       	push	r25
    14f6:	af 93       	push	r26
    14f8:	bf 93       	push	r27
    14fa:	ef 93       	push	r30
    14fc:	ff 93       	push	r31
    14fe:	80 91 56 01 	lds	r24, 0x0156	; 0x800156 <overflows>
    1502:	90 91 57 01 	lds	r25, 0x0157	; 0x800157 <overflows+0x1>
    1506:	ac 01       	movw	r20, r24
    1508:	09 2e       	mov	r0, r25
    150a:	00 0c       	add	r0, r0
    150c:	66 0b       	sbc	r22, r22
    150e:	77 0b       	sbc	r23, r23
    1510:	9a 01       	movw	r18, r20
    1512:	11 27       	eor	r17, r17
    1514:	00 27       	eor	r16, r16
    1516:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    151a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    151e:	60 e0       	ldi	r22, 0x00	; 0
    1520:	70 e0       	ldi	r23, 0x00	; 0
    1522:	40 2b       	or	r20, r16
    1524:	51 2b       	or	r21, r17
    1526:	62 2b       	or	r22, r18
    1528:	73 2b       	or	r23, r19
    152a:	40 93 58 01 	sts	0x0158, r20	; 0x800158 <timestamp>
    152e:	50 93 59 01 	sts	0x0159, r21	; 0x800159 <timestamp+0x1>
    1532:	60 93 5a 01 	sts	0x015A, r22	; 0x80015a <timestamp+0x2>
    1536:	70 93 5b 01 	sts	0x015B, r23	; 0x80015b <timestamp+0x3>
    153a:	b0 9b       	sbis	0x16, 0	; 22
    153c:	1a c0       	rjmp	.+52     	; 0x1572 <__vector_19+0x9a>
    153e:	01 96       	adiw	r24, 0x01	; 1
    1540:	09 2e       	mov	r0, r25
    1542:	00 0c       	add	r0, r0
    1544:	aa 0b       	sbc	r26, r26
    1546:	bb 0b       	sbc	r27, r27
    1548:	bc 01       	movw	r22, r24
    154a:	55 27       	eor	r21, r21
    154c:	44 27       	eor	r20, r20
    154e:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1552:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1556:	a0 e0       	ldi	r26, 0x00	; 0
    1558:	b0 e0       	ldi	r27, 0x00	; 0
    155a:	84 2b       	or	r24, r20
    155c:	95 2b       	or	r25, r21
    155e:	a6 2b       	or	r26, r22
    1560:	b7 2b       	or	r27, r23
    1562:	80 93 58 01 	sts	0x0158, r24	; 0x800158 <timestamp>
    1566:	90 93 59 01 	sts	0x0159, r25	; 0x800159 <timestamp+0x1>
    156a:	a0 93 5a 01 	sts	0x015A, r26	; 0x80015a <timestamp+0x2>
    156e:	b0 93 5b 01 	sts	0x015B, r27	; 0x80015b <timestamp+0x3>
    1572:	e0 91 14 02 	lds	r30, 0x0214	; 0x800214 <mtable+0x1c>
    1576:	f0 91 15 02 	lds	r31, 0x0215	; 0x800215 <mtable+0x1d>
    157a:	30 97       	sbiw	r30, 0x00	; 0
    157c:	39 f0       	breq	.+14     	; 0x158c <__vector_19+0xb4>
    157e:	6e e0       	ldi	r22, 0x0E	; 14
    1580:	70 e0       	ldi	r23, 0x00	; 0
    1582:	80 91 7c 01 	lds	r24, 0x017C	; 0x80017c <otable+0x1c>
    1586:	90 91 7d 01 	lds	r25, 0x017D	; 0x80017d <otable+0x1d>
    158a:	09 95       	icall
    158c:	0e 94 26 04 	call	0x84c	; 0x84c <schedule>
    1590:	ff 91       	pop	r31
    1592:	ef 91       	pop	r30
    1594:	bf 91       	pop	r27
    1596:	af 91       	pop	r26
    1598:	9f 91       	pop	r25
    159a:	8f 91       	pop	r24
    159c:	7f 91       	pop	r23
    159e:	6f 91       	pop	r22
    15a0:	5f 91       	pop	r21
    15a2:	4f 91       	pop	r20
    15a4:	3f 91       	pop	r19
    15a6:	2f 91       	pop	r18
    15a8:	1f 91       	pop	r17
    15aa:	0f 91       	pop	r16
    15ac:	0f 90       	pop	r0
    15ae:	0f be       	out	0x3f, r0	; 63
    15b0:	0f 90       	pop	r0
    15b2:	1f 90       	pop	r1
    15b4:	18 95       	reti

000015b6 <__vector_20>:
    15b6:	1f 92       	push	r1
    15b8:	0f 92       	push	r0
    15ba:	0f b6       	in	r0, 0x3f	; 63
    15bc:	0f 92       	push	r0
    15be:	11 24       	eor	r1, r1
    15c0:	0f 93       	push	r16
    15c2:	1f 93       	push	r17
    15c4:	2f 93       	push	r18
    15c6:	3f 93       	push	r19
    15c8:	4f 93       	push	r20
    15ca:	5f 93       	push	r21
    15cc:	6f 93       	push	r22
    15ce:	7f 93       	push	r23
    15d0:	8f 93       	push	r24
    15d2:	9f 93       	push	r25
    15d4:	af 93       	push	r26
    15d6:	bf 93       	push	r27
    15d8:	ef 93       	push	r30
    15da:	ff 93       	push	r31
    15dc:	80 91 56 01 	lds	r24, 0x0156	; 0x800156 <overflows>
    15e0:	90 91 57 01 	lds	r25, 0x0157	; 0x800157 <overflows+0x1>
    15e4:	ac 01       	movw	r20, r24
    15e6:	09 2e       	mov	r0, r25
    15e8:	00 0c       	add	r0, r0
    15ea:	66 0b       	sbc	r22, r22
    15ec:	77 0b       	sbc	r23, r23
    15ee:	9a 01       	movw	r18, r20
    15f0:	11 27       	eor	r17, r17
    15f2:	00 27       	eor	r16, r16
    15f4:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    15f8:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    15fc:	60 e0       	ldi	r22, 0x00	; 0
    15fe:	70 e0       	ldi	r23, 0x00	; 0
    1600:	40 2b       	or	r20, r16
    1602:	51 2b       	or	r21, r17
    1604:	62 2b       	or	r22, r18
    1606:	73 2b       	or	r23, r19
    1608:	40 93 58 01 	sts	0x0158, r20	; 0x800158 <timestamp>
    160c:	50 93 59 01 	sts	0x0159, r21	; 0x800159 <timestamp+0x1>
    1610:	60 93 5a 01 	sts	0x015A, r22	; 0x80015a <timestamp+0x2>
    1614:	70 93 5b 01 	sts	0x015B, r23	; 0x80015b <timestamp+0x3>
    1618:	b0 9b       	sbis	0x16, 0	; 22
    161a:	1a c0       	rjmp	.+52     	; 0x1650 <__vector_20+0x9a>
    161c:	01 96       	adiw	r24, 0x01	; 1
    161e:	09 2e       	mov	r0, r25
    1620:	00 0c       	add	r0, r0
    1622:	aa 0b       	sbc	r26, r26
    1624:	bb 0b       	sbc	r27, r27
    1626:	bc 01       	movw	r22, r24
    1628:	55 27       	eor	r21, r21
    162a:	44 27       	eor	r20, r20
    162c:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1630:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1634:	a0 e0       	ldi	r26, 0x00	; 0
    1636:	b0 e0       	ldi	r27, 0x00	; 0
    1638:	84 2b       	or	r24, r20
    163a:	95 2b       	or	r25, r21
    163c:	a6 2b       	or	r26, r22
    163e:	b7 2b       	or	r27, r23
    1640:	80 93 58 01 	sts	0x0158, r24	; 0x800158 <timestamp>
    1644:	90 93 59 01 	sts	0x0159, r25	; 0x800159 <timestamp+0x1>
    1648:	a0 93 5a 01 	sts	0x015A, r26	; 0x80015a <timestamp+0x2>
    164c:	b0 93 5b 01 	sts	0x015B, r27	; 0x80015b <timestamp+0x3>
    1650:	e0 91 16 02 	lds	r30, 0x0216	; 0x800216 <mtable+0x1e>
    1654:	f0 91 17 02 	lds	r31, 0x0217	; 0x800217 <mtable+0x1f>
    1658:	30 97       	sbiw	r30, 0x00	; 0
    165a:	39 f0       	breq	.+14     	; 0x166a <__vector_20+0xb4>
    165c:	6f e0       	ldi	r22, 0x0F	; 15
    165e:	70 e0       	ldi	r23, 0x00	; 0
    1660:	80 91 7e 01 	lds	r24, 0x017E	; 0x80017e <otable+0x1e>
    1664:	90 91 7f 01 	lds	r25, 0x017F	; 0x80017f <otable+0x1f>
    1668:	09 95       	icall
    166a:	0e 94 26 04 	call	0x84c	; 0x84c <schedule>
    166e:	ff 91       	pop	r31
    1670:	ef 91       	pop	r30
    1672:	bf 91       	pop	r27
    1674:	af 91       	pop	r26
    1676:	9f 91       	pop	r25
    1678:	8f 91       	pop	r24
    167a:	7f 91       	pop	r23
    167c:	6f 91       	pop	r22
    167e:	5f 91       	pop	r21
    1680:	4f 91       	pop	r20
    1682:	3f 91       	pop	r19
    1684:	2f 91       	pop	r18
    1686:	1f 91       	pop	r17
    1688:	0f 91       	pop	r16
    168a:	0f 90       	pop	r0
    168c:	0f be       	out	0x3f, r0	; 63
    168e:	0f 90       	pop	r0
    1690:	1f 90       	pop	r1
    1692:	18 95       	reti

00001694 <__vector_21>:
    1694:	1f 92       	push	r1
    1696:	0f 92       	push	r0
    1698:	0f b6       	in	r0, 0x3f	; 63
    169a:	0f 92       	push	r0
    169c:	11 24       	eor	r1, r1
    169e:	0f 93       	push	r16
    16a0:	1f 93       	push	r17
    16a2:	2f 93       	push	r18
    16a4:	3f 93       	push	r19
    16a6:	4f 93       	push	r20
    16a8:	5f 93       	push	r21
    16aa:	6f 93       	push	r22
    16ac:	7f 93       	push	r23
    16ae:	8f 93       	push	r24
    16b0:	9f 93       	push	r25
    16b2:	af 93       	push	r26
    16b4:	bf 93       	push	r27
    16b6:	ef 93       	push	r30
    16b8:	ff 93       	push	r31
    16ba:	80 91 56 01 	lds	r24, 0x0156	; 0x800156 <overflows>
    16be:	90 91 57 01 	lds	r25, 0x0157	; 0x800157 <overflows+0x1>
    16c2:	ac 01       	movw	r20, r24
    16c4:	09 2e       	mov	r0, r25
    16c6:	00 0c       	add	r0, r0
    16c8:	66 0b       	sbc	r22, r22
    16ca:	77 0b       	sbc	r23, r23
    16cc:	9a 01       	movw	r18, r20
    16ce:	11 27       	eor	r17, r17
    16d0:	00 27       	eor	r16, r16
    16d2:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    16d6:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    16da:	60 e0       	ldi	r22, 0x00	; 0
    16dc:	70 e0       	ldi	r23, 0x00	; 0
    16de:	40 2b       	or	r20, r16
    16e0:	51 2b       	or	r21, r17
    16e2:	62 2b       	or	r22, r18
    16e4:	73 2b       	or	r23, r19
    16e6:	40 93 58 01 	sts	0x0158, r20	; 0x800158 <timestamp>
    16ea:	50 93 59 01 	sts	0x0159, r21	; 0x800159 <timestamp+0x1>
    16ee:	60 93 5a 01 	sts	0x015A, r22	; 0x80015a <timestamp+0x2>
    16f2:	70 93 5b 01 	sts	0x015B, r23	; 0x80015b <timestamp+0x3>
    16f6:	b0 9b       	sbis	0x16, 0	; 22
    16f8:	1a c0       	rjmp	.+52     	; 0x172e <__vector_21+0x9a>
    16fa:	01 96       	adiw	r24, 0x01	; 1
    16fc:	09 2e       	mov	r0, r25
    16fe:	00 0c       	add	r0, r0
    1700:	aa 0b       	sbc	r26, r26
    1702:	bb 0b       	sbc	r27, r27
    1704:	bc 01       	movw	r22, r24
    1706:	55 27       	eor	r21, r21
    1708:	44 27       	eor	r20, r20
    170a:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    170e:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1712:	a0 e0       	ldi	r26, 0x00	; 0
    1714:	b0 e0       	ldi	r27, 0x00	; 0
    1716:	84 2b       	or	r24, r20
    1718:	95 2b       	or	r25, r21
    171a:	a6 2b       	or	r26, r22
    171c:	b7 2b       	or	r27, r23
    171e:	80 93 58 01 	sts	0x0158, r24	; 0x800158 <timestamp>
    1722:	90 93 59 01 	sts	0x0159, r25	; 0x800159 <timestamp+0x1>
    1726:	a0 93 5a 01 	sts	0x015A, r26	; 0x80015a <timestamp+0x2>
    172a:	b0 93 5b 01 	sts	0x015B, r27	; 0x80015b <timestamp+0x3>
    172e:	e0 91 18 02 	lds	r30, 0x0218	; 0x800218 <mtable+0x20>
    1732:	f0 91 19 02 	lds	r31, 0x0219	; 0x800219 <mtable+0x21>
    1736:	30 97       	sbiw	r30, 0x00	; 0
    1738:	39 f0       	breq	.+14     	; 0x1748 <__vector_21+0xb4>
    173a:	60 e1       	ldi	r22, 0x10	; 16
    173c:	70 e0       	ldi	r23, 0x00	; 0
    173e:	80 91 80 01 	lds	r24, 0x0180	; 0x800180 <otable+0x20>
    1742:	90 91 81 01 	lds	r25, 0x0181	; 0x800181 <otable+0x21>
    1746:	09 95       	icall
    1748:	0e 94 26 04 	call	0x84c	; 0x84c <schedule>
    174c:	ff 91       	pop	r31
    174e:	ef 91       	pop	r30
    1750:	bf 91       	pop	r27
    1752:	af 91       	pop	r26
    1754:	9f 91       	pop	r25
    1756:	8f 91       	pop	r24
    1758:	7f 91       	pop	r23
    175a:	6f 91       	pop	r22
    175c:	5f 91       	pop	r21
    175e:	4f 91       	pop	r20
    1760:	3f 91       	pop	r19
    1762:	2f 91       	pop	r18
    1764:	1f 91       	pop	r17
    1766:	0f 91       	pop	r16
    1768:	0f 90       	pop	r0
    176a:	0f be       	out	0x3f, r0	; 63
    176c:	0f 90       	pop	r0
    176e:	1f 90       	pop	r1
    1770:	18 95       	reti

00001772 <__vector_22>:
    1772:	1f 92       	push	r1
    1774:	0f 92       	push	r0
    1776:	0f b6       	in	r0, 0x3f	; 63
    1778:	0f 92       	push	r0
    177a:	11 24       	eor	r1, r1
    177c:	0f 93       	push	r16
    177e:	1f 93       	push	r17
    1780:	2f 93       	push	r18
    1782:	3f 93       	push	r19
    1784:	4f 93       	push	r20
    1786:	5f 93       	push	r21
    1788:	6f 93       	push	r22
    178a:	7f 93       	push	r23
    178c:	8f 93       	push	r24
    178e:	9f 93       	push	r25
    1790:	af 93       	push	r26
    1792:	bf 93       	push	r27
    1794:	ef 93       	push	r30
    1796:	ff 93       	push	r31
    1798:	80 91 56 01 	lds	r24, 0x0156	; 0x800156 <overflows>
    179c:	90 91 57 01 	lds	r25, 0x0157	; 0x800157 <overflows+0x1>
    17a0:	ac 01       	movw	r20, r24
    17a2:	09 2e       	mov	r0, r25
    17a4:	00 0c       	add	r0, r0
    17a6:	66 0b       	sbc	r22, r22
    17a8:	77 0b       	sbc	r23, r23
    17aa:	9a 01       	movw	r18, r20
    17ac:	11 27       	eor	r17, r17
    17ae:	00 27       	eor	r16, r16
    17b0:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    17b4:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    17b8:	60 e0       	ldi	r22, 0x00	; 0
    17ba:	70 e0       	ldi	r23, 0x00	; 0
    17bc:	40 2b       	or	r20, r16
    17be:	51 2b       	or	r21, r17
    17c0:	62 2b       	or	r22, r18
    17c2:	73 2b       	or	r23, r19
    17c4:	40 93 58 01 	sts	0x0158, r20	; 0x800158 <timestamp>
    17c8:	50 93 59 01 	sts	0x0159, r21	; 0x800159 <timestamp+0x1>
    17cc:	60 93 5a 01 	sts	0x015A, r22	; 0x80015a <timestamp+0x2>
    17d0:	70 93 5b 01 	sts	0x015B, r23	; 0x80015b <timestamp+0x3>
    17d4:	b0 9b       	sbis	0x16, 0	; 22
    17d6:	1a c0       	rjmp	.+52     	; 0x180c <__vector_22+0x9a>
    17d8:	01 96       	adiw	r24, 0x01	; 1
    17da:	09 2e       	mov	r0, r25
    17dc:	00 0c       	add	r0, r0
    17de:	aa 0b       	sbc	r26, r26
    17e0:	bb 0b       	sbc	r27, r27
    17e2:	bc 01       	movw	r22, r24
    17e4:	55 27       	eor	r21, r21
    17e6:	44 27       	eor	r20, r20
    17e8:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    17ec:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    17f0:	a0 e0       	ldi	r26, 0x00	; 0
    17f2:	b0 e0       	ldi	r27, 0x00	; 0
    17f4:	84 2b       	or	r24, r20
    17f6:	95 2b       	or	r25, r21
    17f8:	a6 2b       	or	r26, r22
    17fa:	b7 2b       	or	r27, r23
    17fc:	80 93 58 01 	sts	0x0158, r24	; 0x800158 <timestamp>
    1800:	90 93 59 01 	sts	0x0159, r25	; 0x800159 <timestamp+0x1>
    1804:	a0 93 5a 01 	sts	0x015A, r26	; 0x80015a <timestamp+0x2>
    1808:	b0 93 5b 01 	sts	0x015B, r27	; 0x80015b <timestamp+0x3>
    180c:	e0 91 1a 02 	lds	r30, 0x021A	; 0x80021a <mtable+0x22>
    1810:	f0 91 1b 02 	lds	r31, 0x021B	; 0x80021b <mtable+0x23>
    1814:	30 97       	sbiw	r30, 0x00	; 0
    1816:	39 f0       	breq	.+14     	; 0x1826 <__vector_22+0xb4>
    1818:	61 e1       	ldi	r22, 0x11	; 17
    181a:	70 e0       	ldi	r23, 0x00	; 0
    181c:	80 91 82 01 	lds	r24, 0x0182	; 0x800182 <otable+0x22>
    1820:	90 91 83 01 	lds	r25, 0x0183	; 0x800183 <otable+0x23>
    1824:	09 95       	icall
    1826:	0e 94 26 04 	call	0x84c	; 0x84c <schedule>
    182a:	ff 91       	pop	r31
    182c:	ef 91       	pop	r30
    182e:	bf 91       	pop	r27
    1830:	af 91       	pop	r26
    1832:	9f 91       	pop	r25
    1834:	8f 91       	pop	r24
    1836:	7f 91       	pop	r23
    1838:	6f 91       	pop	r22
    183a:	5f 91       	pop	r21
    183c:	4f 91       	pop	r20
    183e:	3f 91       	pop	r19
    1840:	2f 91       	pop	r18
    1842:	1f 91       	pop	r17
    1844:	0f 91       	pop	r16
    1846:	0f 90       	pop	r0
    1848:	0f be       	out	0x3f, r0	; 63
    184a:	0f 90       	pop	r0
    184c:	1f 90       	pop	r1
    184e:	18 95       	reti

00001850 <idle>:
    1850:	0e 94 26 04 	call	0x84c	; 0x84c <schedule>
    1854:	78 94       	sei
    1856:	81 e0       	ldi	r24, 0x01	; 1
    1858:	83 bf       	out	0x33, r24	; 51
    185a:	88 95       	sleep
    185c:	fc cf       	rjmp	.-8      	; 0x1856 <idle+0x6>

0000185e <__vector_9>:
    185e:	1f 92       	push	r1
    1860:	0f 92       	push	r0
    1862:	0f b6       	in	r0, 0x3f	; 63
    1864:	0f 92       	push	r0
    1866:	11 24       	eor	r1, r1
    1868:	2f 93       	push	r18
    186a:	3f 93       	push	r19
    186c:	4f 93       	push	r20
    186e:	5f 93       	push	r21
    1870:	6f 93       	push	r22
    1872:	7f 93       	push	r23
    1874:	8f 93       	push	r24
    1876:	9f 93       	push	r25
    1878:	ef 93       	push	r30
    187a:	ff 93       	push	r31
    187c:	80 91 56 01 	lds	r24, 0x0156	; 0x800156 <overflows>
    1880:	90 91 57 01 	lds	r25, 0x0157	; 0x800157 <overflows+0x1>
    1884:	01 96       	adiw	r24, 0x01	; 1
    1886:	90 93 57 01 	sts	0x0157, r25	; 0x800157 <overflows+0x1>
    188a:	80 93 56 01 	sts	0x0156, r24	; 0x800156 <overflows>
    188e:	e0 91 5c 01 	lds	r30, 0x015C	; 0x80015c <timerQ>
    1892:	f0 91 5d 01 	lds	r31, 0x015D	; 0x80015d <timerQ+0x1>
    1896:	30 97       	sbiw	r30, 0x00	; 0
    1898:	01 f1       	breq	.+64     	; 0x18da <__vector_9+0x7c>
    189a:	42 81       	ldd	r20, Z+2	; 0x02
    189c:	53 81       	ldd	r21, Z+3	; 0x03
    189e:	64 81       	ldd	r22, Z+4	; 0x04
    18a0:	75 81       	ldd	r23, Z+5	; 0x05
    18a2:	86 17       	cp	r24, r22
    18a4:	97 07       	cpc	r25, r23
    18a6:	c9 f4       	brne	.+50     	; 0x18da <__vector_9+0x7c>
    18a8:	ca 01       	movw	r24, r20
    18aa:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    18ae:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    18b2:	42 1b       	sub	r20, r18
    18b4:	53 0b       	sbc	r21, r19
    18b6:	41 30       	cpi	r20, 0x01	; 1
    18b8:	51 05       	cpc	r21, r1
    18ba:	29 f4       	brne	.+10     	; 0x18c6 <__vector_9+0x68>
    18bc:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    18c0:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    18c4:	01 96       	adiw	r24, 0x01	; 1
    18c6:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    18ca:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    18ce:	ef e6       	ldi	r30, 0x6F	; 111
    18d0:	f0 e0       	ldi	r31, 0x00	; 0
    18d2:	80 81       	ld	r24, Z
    18d4:	82 60       	ori	r24, 0x02	; 2
    18d6:	80 83       	st	Z, r24
    18d8:	05 c0       	rjmp	.+10     	; 0x18e4 <__vector_9+0x86>
    18da:	ef e6       	ldi	r30, 0x6F	; 111
    18dc:	f0 e0       	ldi	r31, 0x00	; 0
    18de:	80 81       	ld	r24, Z
    18e0:	8d 7f       	andi	r24, 0xFD	; 253
    18e2:	80 83       	st	Z, r24
    18e4:	ff 91       	pop	r31
    18e6:	ef 91       	pop	r30
    18e8:	9f 91       	pop	r25
    18ea:	8f 91       	pop	r24
    18ec:	7f 91       	pop	r23
    18ee:	6f 91       	pop	r22
    18f0:	5f 91       	pop	r21
    18f2:	4f 91       	pop	r20
    18f4:	3f 91       	pop	r19
    18f6:	2f 91       	pop	r18
    18f8:	0f 90       	pop	r0
    18fa:	0f be       	out	0x3f, r0	; 63
    18fc:	0f 90       	pop	r0
    18fe:	1f 90       	pop	r1
    1900:	18 95       	reti

00001902 <__vector_7>:
    1902:	1f 92       	push	r1
    1904:	0f 92       	push	r0
    1906:	0f b6       	in	r0, 0x3f	; 63
    1908:	0f 92       	push	r0
    190a:	11 24       	eor	r1, r1
    190c:	cf 92       	push	r12
    190e:	df 92       	push	r13
    1910:	ef 92       	push	r14
    1912:	ff 92       	push	r15
    1914:	2f 93       	push	r18
    1916:	3f 93       	push	r19
    1918:	4f 93       	push	r20
    191a:	5f 93       	push	r21
    191c:	6f 93       	push	r22
    191e:	7f 93       	push	r23
    1920:	8f 93       	push	r24
    1922:	9f 93       	push	r25
    1924:	af 93       	push	r26
    1926:	bf 93       	push	r27
    1928:	ef 93       	push	r30
    192a:	ff 93       	push	r31
    192c:	80 91 56 01 	lds	r24, 0x0156	; 0x800156 <overflows>
    1930:	90 91 57 01 	lds	r25, 0x0157	; 0x800157 <overflows+0x1>
    1934:	6c 01       	movw	r12, r24
    1936:	09 2e       	mov	r0, r25
    1938:	00 0c       	add	r0, r0
    193a:	ee 08       	sbc	r14, r14
    193c:	ff 08       	sbc	r15, r15
    193e:	76 01       	movw	r14, r12
    1940:	dd 24       	eor	r13, r13
    1942:	cc 24       	eor	r12, r12
    1944:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1948:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    194c:	60 e0       	ldi	r22, 0x00	; 0
    194e:	70 e0       	ldi	r23, 0x00	; 0
    1950:	c4 2a       	or	r12, r20
    1952:	d5 2a       	or	r13, r21
    1954:	e6 2a       	or	r14, r22
    1956:	f7 2a       	or	r15, r23
    1958:	b0 9b       	sbis	0x16, 0	; 22
    195a:	1e c0       	rjmp	.+60     	; 0x1998 <__vector_7+0x96>
    195c:	6c 01       	movw	r12, r24
    195e:	2f ef       	ldi	r18, 0xFF	; 255
    1960:	c2 1a       	sub	r12, r18
    1962:	d2 0a       	sbc	r13, r18
    1964:	0d 2c       	mov	r0, r13
    1966:	00 0c       	add	r0, r0
    1968:	ee 08       	sbc	r14, r14
    196a:	ff 08       	sbc	r15, r15
    196c:	d6 01       	movw	r26, r12
    196e:	99 27       	eor	r25, r25
    1970:	88 27       	eor	r24, r24
    1972:	c0 90 84 00 	lds	r12, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1976:	d0 90 85 00 	lds	r13, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    197a:	e1 2c       	mov	r14, r1
    197c:	f1 2c       	mov	r15, r1
    197e:	c8 2a       	or	r12, r24
    1980:	d9 2a       	or	r13, r25
    1982:	ea 2a       	or	r14, r26
    1984:	fb 2a       	or	r15, r27
    1986:	08 c0       	rjmp	.+16     	; 0x1998 <__vector_7+0x96>
    1988:	8c e5       	ldi	r24, 0x5C	; 92
    198a:	91 e0       	ldi	r25, 0x01	; 1
    198c:	0e 94 f1 03 	call	0x7e2	; 0x7e2 <dequeue>
    1990:	6e e5       	ldi	r22, 0x5E	; 94
    1992:	71 e0       	ldi	r23, 0x01	; 1
    1994:	0e 94 8f 03 	call	0x71e	; 0x71e <enqueueByDeadline>
    1998:	e0 91 5c 01 	lds	r30, 0x015C	; 0x80015c <timerQ>
    199c:	f0 91 5d 01 	lds	r31, 0x015D	; 0x80015d <timerQ+0x1>
    19a0:	30 97       	sbiw	r30, 0x00	; 0
    19a2:	69 f0       	breq	.+26     	; 0x19be <__vector_7+0xbc>
    19a4:	82 81       	ldd	r24, Z+2	; 0x02
    19a6:	93 81       	ldd	r25, Z+3	; 0x03
    19a8:	a4 81       	ldd	r26, Z+4	; 0x04
    19aa:	b5 81       	ldd	r27, Z+5	; 0x05
    19ac:	8c 19       	sub	r24, r12
    19ae:	9d 09       	sbc	r25, r13
    19b0:	ae 09       	sbc	r26, r14
    19b2:	bf 09       	sbc	r27, r15
    19b4:	18 16       	cp	r1, r24
    19b6:	19 06       	cpc	r1, r25
    19b8:	1a 06       	cpc	r1, r26
    19ba:	1b 06       	cpc	r1, r27
    19bc:	2c f7       	brge	.-54     	; 0x1988 <__vector_7+0x86>
    19be:	30 97       	sbiw	r30, 0x00	; 0
    19c0:	21 f1       	breq	.+72     	; 0x1a0a <__vector_7+0x108>
    19c2:	82 81       	ldd	r24, Z+2	; 0x02
    19c4:	93 81       	ldd	r25, Z+3	; 0x03
    19c6:	a4 81       	ldd	r26, Z+4	; 0x04
    19c8:	b5 81       	ldd	r27, Z+5	; 0x05
    19ca:	20 91 56 01 	lds	r18, 0x0156	; 0x800156 <overflows>
    19ce:	30 91 57 01 	lds	r19, 0x0157	; 0x800157 <overflows+0x1>
    19d2:	2a 17       	cp	r18, r26
    19d4:	3b 07       	cpc	r19, r27
    19d6:	c9 f4       	brne	.+50     	; 0x1a0a <__vector_7+0x108>
    19d8:	9c 01       	movw	r18, r24
    19da:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    19de:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    19e2:	84 1b       	sub	r24, r20
    19e4:	95 0b       	sbc	r25, r21
    19e6:	01 97       	sbiw	r24, 0x01	; 1
    19e8:	31 f4       	brne	.+12     	; 0x19f6 <__vector_7+0xf4>
    19ea:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    19ee:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    19f2:	2f 5f       	subi	r18, 0xFF	; 255
    19f4:	3f 4f       	sbci	r19, 0xFF	; 255
    19f6:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    19fa:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    19fe:	ef e6       	ldi	r30, 0x6F	; 111
    1a00:	f0 e0       	ldi	r31, 0x00	; 0
    1a02:	80 81       	ld	r24, Z
    1a04:	82 60       	ori	r24, 0x02	; 2
    1a06:	80 83       	st	Z, r24
    1a08:	05 c0       	rjmp	.+10     	; 0x1a14 <__vector_7+0x112>
    1a0a:	ef e6       	ldi	r30, 0x6F	; 111
    1a0c:	f0 e0       	ldi	r31, 0x00	; 0
    1a0e:	80 81       	ld	r24, Z
    1a10:	8d 7f       	andi	r24, 0xFD	; 253
    1a12:	80 83       	st	Z, r24
    1a14:	0e 94 26 04 	call	0x84c	; 0x84c <schedule>
    1a18:	ff 91       	pop	r31
    1a1a:	ef 91       	pop	r30
    1a1c:	bf 91       	pop	r27
    1a1e:	af 91       	pop	r26
    1a20:	9f 91       	pop	r25
    1a22:	8f 91       	pop	r24
    1a24:	7f 91       	pop	r23
    1a26:	6f 91       	pop	r22
    1a28:	5f 91       	pop	r21
    1a2a:	4f 91       	pop	r20
    1a2c:	3f 91       	pop	r19
    1a2e:	2f 91       	pop	r18
    1a30:	ff 90       	pop	r15
    1a32:	ef 90       	pop	r14
    1a34:	df 90       	pop	r13
    1a36:	cf 90       	pop	r12
    1a38:	0f 90       	pop	r0
    1a3a:	0f be       	out	0x3f, r0	; 63
    1a3c:	0f 90       	pop	r0
    1a3e:	1f 90       	pop	r1
    1a40:	18 95       	reti

00001a42 <async>:
    1a42:	3f 92       	push	r3
    1a44:	4f 92       	push	r4
    1a46:	5f 92       	push	r5
    1a48:	6f 92       	push	r6
    1a4a:	7f 92       	push	r7
    1a4c:	8f 92       	push	r8
    1a4e:	9f 92       	push	r9
    1a50:	af 92       	push	r10
    1a52:	bf 92       	push	r11
    1a54:	cf 92       	push	r12
    1a56:	df 92       	push	r13
    1a58:	ef 92       	push	r14
    1a5a:	ff 92       	push	r15
    1a5c:	0f 93       	push	r16
    1a5e:	1f 93       	push	r17
    1a60:	cf 93       	push	r28
    1a62:	df 93       	push	r29
    1a64:	2b 01       	movw	r4, r22
    1a66:	3c 01       	movw	r6, r24
    1a68:	49 01       	movw	r8, r18
    1a6a:	5a 01       	movw	r10, r20
    1a6c:	8f b7       	in	r24, 0x3f	; 63
    1a6e:	80 78       	andi	r24, 0x80	; 128
    1a70:	38 2e       	mov	r3, r24
    1a72:	f8 94       	cli
    1a74:	80 e5       	ldi	r24, 0x50	; 80
    1a76:	91 e0       	ldi	r25, 0x01	; 1
    1a78:	0e 94 f1 03 	call	0x7e2	; 0x7e2 <dequeue>
    1a7c:	ec 01       	movw	r28, r24
    1a7e:	1b 87       	std	Y+11, r17	; 0x0b
    1a80:	0a 87       	std	Y+10, r16	; 0x0a
    1a82:	fd 86       	std	Y+13, r15	; 0x0d
    1a84:	ec 86       	std	Y+12, r14	; 0x0c
    1a86:	df 86       	std	Y+15, r13	; 0x0f
    1a88:	ce 86       	std	Y+14, r12	; 0x0e
    1a8a:	33 20       	and	r3, r3
    1a8c:	61 f0       	breq	.+24     	; 0x1aa6 <async+0x64>
    1a8e:	e0 91 4a 01 	lds	r30, 0x014A	; 0x80014a <current>
    1a92:	f0 91 4b 01 	lds	r31, 0x014B	; 0x80014b <current+0x1>
    1a96:	02 80       	ldd	r0, Z+2	; 0x02
    1a98:	f3 81       	ldd	r31, Z+3	; 0x03
    1a9a:	e0 2d       	mov	r30, r0
    1a9c:	82 81       	ldd	r24, Z+2	; 0x02
    1a9e:	93 81       	ldd	r25, Z+3	; 0x03
    1aa0:	a4 81       	ldd	r26, Z+4	; 0x04
    1aa2:	b5 81       	ldd	r27, Z+5	; 0x05
    1aa4:	08 c0       	rjmp	.+16     	; 0x1ab6 <async+0x74>
    1aa6:	80 91 58 01 	lds	r24, 0x0158	; 0x800158 <timestamp>
    1aaa:	90 91 59 01 	lds	r25, 0x0159	; 0x800159 <timestamp+0x1>
    1aae:	a0 91 5a 01 	lds	r26, 0x015A	; 0x80015a <timestamp+0x2>
    1ab2:	b0 91 5b 01 	lds	r27, 0x015B	; 0x80015b <timestamp+0x3>
    1ab6:	48 0e       	add	r4, r24
    1ab8:	59 1e       	adc	r5, r25
    1aba:	6a 1e       	adc	r6, r26
    1abc:	7b 1e       	adc	r7, r27
    1abe:	4a 82       	std	Y+2, r4	; 0x02
    1ac0:	5b 82       	std	Y+3, r5	; 0x03
    1ac2:	6c 82       	std	Y+4, r6	; 0x04
    1ac4:	7d 82       	std	Y+5, r7	; 0x05
    1ac6:	18 14       	cp	r1, r8
    1ac8:	19 04       	cpc	r1, r9
    1aca:	1a 04       	cpc	r1, r10
    1acc:	1b 04       	cpc	r1, r11
    1ace:	44 f0       	brlt	.+16     	; 0x1ae0 <async+0x9e>
    1ad0:	0f 2e       	mov	r0, r31
    1ad2:	88 24       	eor	r8, r8
    1ad4:	8a 94       	dec	r8
    1ad6:	98 2c       	mov	r9, r8
    1ad8:	a8 2c       	mov	r10, r8
    1ada:	ff e7       	ldi	r31, 0x7F	; 127
    1adc:	bf 2e       	mov	r11, r31
    1ade:	f0 2d       	mov	r31, r0
    1ae0:	84 0c       	add	r8, r4
    1ae2:	95 1c       	adc	r9, r5
    1ae4:	a6 1c       	adc	r10, r6
    1ae6:	b7 1c       	adc	r11, r7
    1ae8:	8e 82       	std	Y+6, r8	; 0x06
    1aea:	9f 82       	std	Y+7, r9	; 0x07
    1aec:	a8 86       	std	Y+8, r10	; 0x08
    1aee:	b9 86       	std	Y+9, r11	; 0x09
    1af0:	20 91 56 01 	lds	r18, 0x0156	; 0x800156 <overflows>
    1af4:	30 91 57 01 	lds	r19, 0x0157	; 0x800157 <overflows+0x1>
    1af8:	c9 01       	movw	r24, r18
    1afa:	03 2e       	mov	r0, r19
    1afc:	00 0c       	add	r0, r0
    1afe:	aa 0b       	sbc	r26, r26
    1b00:	bb 0b       	sbc	r27, r27
    1b02:	dc 01       	movw	r26, r24
    1b04:	99 27       	eor	r25, r25
    1b06:	88 27       	eor	r24, r24
    1b08:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1b0c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1b10:	60 e0       	ldi	r22, 0x00	; 0
    1b12:	70 e0       	ldi	r23, 0x00	; 0
    1b14:	84 2b       	or	r24, r20
    1b16:	95 2b       	or	r25, r21
    1b18:	a6 2b       	or	r26, r22
    1b1a:	b7 2b       	or	r27, r23
    1b1c:	b0 9b       	sbis	0x16, 0	; 22
    1b1e:	13 c0       	rjmp	.+38     	; 0x1b46 <async+0x104>
    1b20:	c9 01       	movw	r24, r18
    1b22:	01 96       	adiw	r24, 0x01	; 1
    1b24:	09 2e       	mov	r0, r25
    1b26:	00 0c       	add	r0, r0
    1b28:	aa 0b       	sbc	r26, r26
    1b2a:	bb 0b       	sbc	r27, r27
    1b2c:	dc 01       	movw	r26, r24
    1b2e:	99 27       	eor	r25, r25
    1b30:	88 27       	eor	r24, r24
    1b32:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1b36:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1b3a:	60 e0       	ldi	r22, 0x00	; 0
    1b3c:	70 e0       	ldi	r23, 0x00	; 0
    1b3e:	84 2b       	or	r24, r20
    1b40:	95 2b       	or	r25, r21
    1b42:	a6 2b       	or	r26, r22
    1b44:	b7 2b       	or	r27, r23
    1b46:	48 1a       	sub	r4, r24
    1b48:	59 0a       	sbc	r5, r25
    1b4a:	6a 0a       	sbc	r6, r26
    1b4c:	7b 0a       	sbc	r7, r27
    1b4e:	14 14       	cp	r1, r4
    1b50:	15 04       	cpc	r1, r5
    1b52:	16 04       	cpc	r1, r6
    1b54:	17 04       	cpc	r1, r7
    1b56:	ac f5       	brge	.+106    	; 0x1bc2 <async+0x180>
    1b58:	6c e5       	ldi	r22, 0x5C	; 92
    1b5a:	71 e0       	ldi	r23, 0x01	; 1
    1b5c:	ce 01       	movw	r24, r28
    1b5e:	0e 94 c0 03 	call	0x780	; 0x780 <enqueueByBaseline>
    1b62:	e0 91 5c 01 	lds	r30, 0x015C	; 0x80015c <timerQ>
    1b66:	f0 91 5d 01 	lds	r31, 0x015D	; 0x80015d <timerQ+0x1>
    1b6a:	30 97       	sbiw	r30, 0x00	; 0
    1b6c:	21 f1       	breq	.+72     	; 0x1bb6 <async+0x174>
    1b6e:	82 81       	ldd	r24, Z+2	; 0x02
    1b70:	93 81       	ldd	r25, Z+3	; 0x03
    1b72:	a4 81       	ldd	r26, Z+4	; 0x04
    1b74:	b5 81       	ldd	r27, Z+5	; 0x05
    1b76:	20 91 56 01 	lds	r18, 0x0156	; 0x800156 <overflows>
    1b7a:	30 91 57 01 	lds	r19, 0x0157	; 0x800157 <overflows+0x1>
    1b7e:	2a 17       	cp	r18, r26
    1b80:	3b 07       	cpc	r19, r27
    1b82:	c9 f4       	brne	.+50     	; 0x1bb6 <async+0x174>
    1b84:	9c 01       	movw	r18, r24
    1b86:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1b8a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1b8e:	84 1b       	sub	r24, r20
    1b90:	95 0b       	sbc	r25, r21
    1b92:	01 97       	sbiw	r24, 0x01	; 1
    1b94:	31 f4       	brne	.+12     	; 0x1ba2 <async+0x160>
    1b96:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1b9a:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1b9e:	2f 5f       	subi	r18, 0xFF	; 255
    1ba0:	3f 4f       	sbci	r19, 0xFF	; 255
    1ba2:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    1ba6:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    1baa:	ef e6       	ldi	r30, 0x6F	; 111
    1bac:	f0 e0       	ldi	r31, 0x00	; 0
    1bae:	80 81       	ld	r24, Z
    1bb0:	82 60       	ori	r24, 0x02	; 2
    1bb2:	80 83       	st	Z, r24
    1bb4:	39 c0       	rjmp	.+114    	; 0x1c28 <async+0x1e6>
    1bb6:	ef e6       	ldi	r30, 0x6F	; 111
    1bb8:	f0 e0       	ldi	r31, 0x00	; 0
    1bba:	80 81       	ld	r24, Z
    1bbc:	8d 7f       	andi	r24, 0xFD	; 253
    1bbe:	80 83       	st	Z, r24
    1bc0:	33 c0       	rjmp	.+102    	; 0x1c28 <async+0x1e6>
    1bc2:	6e e5       	ldi	r22, 0x5E	; 94
    1bc4:	71 e0       	ldi	r23, 0x01	; 1
    1bc6:	ce 01       	movw	r24, r28
    1bc8:	0e 94 8f 03 	call	0x71e	; 0x71e <enqueueByDeadline>
    1bcc:	33 20       	and	r3, r3
    1bce:	61 f1       	breq	.+88     	; 0x1c28 <async+0x1e6>
    1bd0:	80 91 4e 01 	lds	r24, 0x014E	; 0x80014e <threadPool>
    1bd4:	90 91 4f 01 	lds	r25, 0x014F	; 0x80014f <threadPool+0x1>
    1bd8:	89 2b       	or	r24, r25
    1bda:	31 f1       	breq	.+76     	; 0x1c28 <async+0x1e6>
    1bdc:	e0 91 5e 01 	lds	r30, 0x015E	; 0x80015e <msgQ>
    1be0:	f0 91 5f 01 	lds	r31, 0x015F	; 0x80015f <msgQ+0x1>
    1be4:	86 81       	ldd	r24, Z+6	; 0x06
    1be6:	97 81       	ldd	r25, Z+7	; 0x07
    1be8:	a0 85       	ldd	r26, Z+8	; 0x08
    1bea:	b1 85       	ldd	r27, Z+9	; 0x09
    1bec:	e0 91 4c 01 	lds	r30, 0x014C	; 0x80014c <activeStack>
    1bf0:	f0 91 4d 01 	lds	r31, 0x014D	; 0x80014d <activeStack+0x1>
    1bf4:	02 80       	ldd	r0, Z+2	; 0x02
    1bf6:	f3 81       	ldd	r31, Z+3	; 0x03
    1bf8:	e0 2d       	mov	r30, r0
    1bfa:	46 81       	ldd	r20, Z+6	; 0x06
    1bfc:	57 81       	ldd	r21, Z+7	; 0x07
    1bfe:	60 85       	ldd	r22, Z+8	; 0x08
    1c00:	71 85       	ldd	r23, Z+9	; 0x09
    1c02:	84 1b       	sub	r24, r20
    1c04:	95 0b       	sbc	r25, r21
    1c06:	a6 0b       	sbc	r26, r22
    1c08:	b7 0b       	sbc	r27, r23
    1c0a:	72 f4       	brpl	.+28     	; 0x1c28 <async+0x1e6>
    1c0c:	8e e4       	ldi	r24, 0x4E	; 78
    1c0e:	91 e0       	ldi	r25, 0x01	; 1
    1c10:	0e 94 1c 04 	call	0x838	; 0x838 <pop>
    1c14:	6c e4       	ldi	r22, 0x4C	; 76
    1c16:	71 e0       	ldi	r23, 0x01	; 1
    1c18:	0e 94 12 04 	call	0x824	; 0x824 <push>
    1c1c:	80 91 4c 01 	lds	r24, 0x014C	; 0x80014c <activeStack>
    1c20:	90 91 4d 01 	lds	r25, 0x014D	; 0x80014d <activeStack+0x1>
    1c24:	0e 94 6f 03 	call	0x6de	; 0x6de <dispatch>
    1c28:	33 20       	and	r3, r3
    1c2a:	09 f0       	breq	.+2      	; 0x1c2e <async+0x1ec>
    1c2c:	78 94       	sei
    1c2e:	ce 01       	movw	r24, r28
    1c30:	df 91       	pop	r29
    1c32:	cf 91       	pop	r28
    1c34:	1f 91       	pop	r17
    1c36:	0f 91       	pop	r16
    1c38:	ff 90       	pop	r15
    1c3a:	ef 90       	pop	r14
    1c3c:	df 90       	pop	r13
    1c3e:	cf 90       	pop	r12
    1c40:	bf 90       	pop	r11
    1c42:	af 90       	pop	r10
    1c44:	9f 90       	pop	r9
    1c46:	8f 90       	pop	r8
    1c48:	7f 90       	pop	r7
    1c4a:	6f 90       	pop	r6
    1c4c:	5f 90       	pop	r5
    1c4e:	4f 90       	pop	r4
    1c50:	3f 90       	pop	r3
    1c52:	08 95       	ret

00001c54 <sync>:
    1c54:	cf 92       	push	r12
    1c56:	df 92       	push	r13
    1c58:	ef 92       	push	r14
    1c5a:	ff 92       	push	r15
    1c5c:	0f 93       	push	r16
    1c5e:	1f 93       	push	r17
    1c60:	cf 93       	push	r28
    1c62:	df 93       	push	r29
    1c64:	ec 01       	movw	r28, r24
    1c66:	7b 01       	movw	r14, r22
    1c68:	6a 01       	movw	r12, r20
    1c6a:	1f b7       	in	r17, 0x3f	; 63
    1c6c:	10 78       	andi	r17, 0x80	; 128
    1c6e:	f8 94       	cli
    1c70:	a8 81       	ld	r26, Y
    1c72:	b9 81       	ldd	r27, Y+1	; 0x01
    1c74:	10 97       	sbiw	r26, 0x00	; 0
    1c76:	19 f4       	brne	.+6      	; 0x1c7e <sync+0x2a>
    1c78:	35 c0       	rjmp	.+106    	; 0x1ce4 <sync+0x90>
    1c7a:	a0 81       	ld	r26, Z
    1c7c:	b1 81       	ldd	r27, Z+1	; 0x01
    1c7e:	14 96       	adiw	r26, 0x04	; 4
    1c80:	ed 91       	ld	r30, X+
    1c82:	fc 91       	ld	r31, X
    1c84:	15 97       	sbiw	r26, 0x05	; 5
    1c86:	30 97       	sbiw	r30, 0x00	; 0
    1c88:	c1 f7       	brne	.-16     	; 0x1c7a <sync+0x26>
    1c8a:	20 91 4a 01 	lds	r18, 0x014A	; 0x80014a <current>
    1c8e:	30 91 4b 01 	lds	r19, 0x014B	; 0x80014b <current+0x1>
    1c92:	a2 17       	cp	r26, r18
    1c94:	b3 07       	cpc	r27, r19
    1c96:	11 f0       	breq	.+4      	; 0x1c9c <sync+0x48>
    1c98:	11 11       	cpse	r17, r1
    1c9a:	07 c0       	rjmp	.+14     	; 0x1caa <sync+0x56>
    1c9c:	11 23       	and	r17, r17
    1c9e:	09 f4       	brne	.+2      	; 0x1ca2 <sync+0x4e>
    1ca0:	4a c0       	rjmp	.+148    	; 0x1d36 <sync+0xe2>
    1ca2:	78 94       	sei
    1ca4:	8f ef       	ldi	r24, 0xFF	; 255
    1ca6:	9f ef       	ldi	r25, 0xFF	; 255
    1ca8:	4e c0       	rjmp	.+156    	; 0x1d46 <sync+0xf2>
    1caa:	8a 81       	ldd	r24, Y+2	; 0x02
    1cac:	9b 81       	ldd	r25, Y+3	; 0x03
    1cae:	00 97       	sbiw	r24, 0x00	; 0
    1cb0:	19 f0       	breq	.+6      	; 0x1cb8 <sync+0x64>
    1cb2:	fc 01       	movw	r30, r24
    1cb4:	15 82       	std	Z+5, r1	; 0x05
    1cb6:	14 82       	std	Z+4, r1	; 0x04
    1cb8:	3b 83       	std	Y+3, r19	; 0x03
    1cba:	2a 83       	std	Y+2, r18	; 0x02
    1cbc:	f9 01       	movw	r30, r18
    1cbe:	d5 83       	std	Z+5, r29	; 0x05
    1cc0:	c4 83       	std	Z+4, r28	; 0x04
    1cc2:	cd 01       	movw	r24, r26
    1cc4:	0e 94 6f 03 	call	0x6de	; 0x6de <dispatch>
    1cc8:	e0 91 4a 01 	lds	r30, 0x014A	; 0x80014a <current>
    1ccc:	f0 91 4b 01 	lds	r31, 0x014B	; 0x80014b <current+0x1>
    1cd0:	82 81       	ldd	r24, Z+2	; 0x02
    1cd2:	93 81       	ldd	r25, Z+3	; 0x03
    1cd4:	89 2b       	or	r24, r25
    1cd6:	31 f4       	brne	.+12     	; 0x1ce4 <sync+0x90>
    1cd8:	11 23       	and	r17, r17
    1cda:	81 f1       	breq	.+96     	; 0x1d3c <sync+0xe8>
    1cdc:	78 94       	sei
    1cde:	80 e0       	ldi	r24, 0x00	; 0
    1ce0:	90 e0       	ldi	r25, 0x00	; 0
    1ce2:	31 c0       	rjmp	.+98     	; 0x1d46 <sync+0xf2>
    1ce4:	80 91 4a 01 	lds	r24, 0x014A	; 0x80014a <current>
    1ce8:	90 91 4b 01 	lds	r25, 0x014B	; 0x80014b <current+0x1>
    1cec:	99 83       	std	Y+1, r25	; 0x01
    1cee:	88 83       	st	Y, r24
    1cf0:	11 23       	and	r17, r17
    1cf2:	29 f0       	breq	.+10     	; 0x1cfe <sync+0xaa>
    1cf4:	8a 81       	ldd	r24, Y+2	; 0x02
    1cf6:	9b 81       	ldd	r25, Y+3	; 0x03
    1cf8:	01 97       	sbiw	r24, 0x01	; 1
    1cfa:	09 f0       	breq	.+2      	; 0x1cfe <sync+0xaa>
    1cfc:	78 94       	sei
    1cfe:	b6 01       	movw	r22, r12
    1d00:	ce 01       	movw	r24, r28
    1d02:	f7 01       	movw	r30, r14
    1d04:	09 95       	icall
    1d06:	f8 2e       	mov	r15, r24
    1d08:	09 2f       	mov	r16, r25
    1d0a:	8f b7       	in	r24, 0x3f	; 63
    1d0c:	f8 94       	cli
    1d0e:	19 82       	std	Y+1, r1	; 0x01
    1d10:	18 82       	st	Y, r1
    1d12:	8a 81       	ldd	r24, Y+2	; 0x02
    1d14:	9b 81       	ldd	r25, Y+3	; 0x03
    1d16:	82 30       	cpi	r24, 0x02	; 2
    1d18:	91 05       	cpc	r25, r1
    1d1a:	38 f0       	brcs	.+14     	; 0x1d2a <sync+0xd6>
    1d1c:	1b 82       	std	Y+3, r1	; 0x03
    1d1e:	1a 82       	std	Y+2, r1	; 0x02
    1d20:	fc 01       	movw	r30, r24
    1d22:	15 82       	std	Z+5, r1	; 0x05
    1d24:	14 82       	std	Z+4, r1	; 0x04
    1d26:	0e 94 6f 03 	call	0x6de	; 0x6de <dispatch>
    1d2a:	11 23       	and	r17, r17
    1d2c:	51 f0       	breq	.+20     	; 0x1d42 <sync+0xee>
    1d2e:	78 94       	sei
    1d30:	8f 2d       	mov	r24, r15
    1d32:	90 2f       	mov	r25, r16
    1d34:	08 c0       	rjmp	.+16     	; 0x1d46 <sync+0xf2>
    1d36:	8f ef       	ldi	r24, 0xFF	; 255
    1d38:	9f ef       	ldi	r25, 0xFF	; 255
    1d3a:	05 c0       	rjmp	.+10     	; 0x1d46 <sync+0xf2>
    1d3c:	80 e0       	ldi	r24, 0x00	; 0
    1d3e:	90 e0       	ldi	r25, 0x00	; 0
    1d40:	02 c0       	rjmp	.+4      	; 0x1d46 <sync+0xf2>
    1d42:	8f 2d       	mov	r24, r15
    1d44:	90 2f       	mov	r25, r16
    1d46:	df 91       	pop	r29
    1d48:	cf 91       	pop	r28
    1d4a:	1f 91       	pop	r17
    1d4c:	0f 91       	pop	r16
    1d4e:	ff 90       	pop	r15
    1d50:	ef 90       	pop	r14
    1d52:	df 90       	pop	r13
    1d54:	cf 90       	pop	r12
    1d56:	08 95       	ret

00001d58 <run>:
    1d58:	00 91 4a 01 	lds	r16, 0x014A	; 0x80014a <current>
    1d5c:	10 91 4b 01 	lds	r17, 0x014B	; 0x80014b <current+0x1>
    1d60:	8e e5       	ldi	r24, 0x5E	; 94
    1d62:	91 e0       	ldi	r25, 0x01	; 1
    1d64:	0e 94 f1 03 	call	0x7e2	; 0x7e2 <dequeue>
    1d68:	ec 01       	movw	r28, r24
    1d6a:	f8 01       	movw	r30, r16
    1d6c:	93 83       	std	Z+3, r25	; 0x03
    1d6e:	82 83       	std	Z+2, r24	; 0x02
    1d70:	78 94       	sei
    1d72:	6c 85       	ldd	r22, Y+12	; 0x0c
    1d74:	7d 85       	ldd	r23, Y+13	; 0x0d
    1d76:	4e 85       	ldd	r20, Y+14	; 0x0e
    1d78:	5f 85       	ldd	r21, Y+15	; 0x0f
    1d7a:	8a 85       	ldd	r24, Y+10	; 0x0a
    1d7c:	9b 85       	ldd	r25, Y+11	; 0x0b
    1d7e:	0e 94 2a 0e 	call	0x1c54	; 0x1c54 <sync>
    1d82:	8f b7       	in	r24, 0x3f	; 63
    1d84:	f8 94       	cli
    1d86:	60 e5       	ldi	r22, 0x50	; 80
    1d88:	71 e0       	ldi	r23, 0x01	; 1
    1d8a:	ce 01       	movw	r24, r28
    1d8c:	0e 94 08 04 	call	0x810	; 0x810 <insert>
    1d90:	e0 91 4c 01 	lds	r30, 0x014C	; 0x80014c <activeStack>
    1d94:	f0 91 4d 01 	lds	r31, 0x014D	; 0x80014d <activeStack+0x1>
    1d98:	01 90       	ld	r0, Z+
    1d9a:	f0 81       	ld	r31, Z
    1d9c:	e0 2d       	mov	r30, r0
    1d9e:	c2 81       	ldd	r28, Z+2	; 0x02
    1da0:	d3 81       	ldd	r29, Z+3	; 0x03
    1da2:	e0 91 5e 01 	lds	r30, 0x015E	; 0x80015e <msgQ>
    1da6:	f0 91 5f 01 	lds	r31, 0x015F	; 0x80015f <msgQ+0x1>
    1daa:	30 97       	sbiw	r30, 0x00	; 0
    1dac:	a1 f0       	breq	.+40     	; 0x1dd6 <run+0x7e>
    1dae:	20 97       	sbiw	r28, 0x00	; 0
    1db0:	99 f2       	breq	.-90     	; 0x1d58 <run>
    1db2:	86 81       	ldd	r24, Z+6	; 0x06
    1db4:	97 81       	ldd	r25, Z+7	; 0x07
    1db6:	a0 85       	ldd	r26, Z+8	; 0x08
    1db8:	b1 85       	ldd	r27, Z+9	; 0x09
    1dba:	4e 81       	ldd	r20, Y+6	; 0x06
    1dbc:	5f 81       	ldd	r21, Y+7	; 0x07
    1dbe:	68 85       	ldd	r22, Y+8	; 0x08
    1dc0:	79 85       	ldd	r23, Y+9	; 0x09
    1dc2:	84 1b       	sub	r24, r20
    1dc4:	95 0b       	sbc	r25, r21
    1dc6:	a6 0b       	sbc	r26, r22
    1dc8:	b7 0b       	sbc	r27, r23
    1dca:	18 16       	cp	r1, r24
    1dcc:	19 06       	cpc	r1, r25
    1dce:	1a 06       	cpc	r1, r26
    1dd0:	1b 06       	cpc	r1, r27
    1dd2:	0c f0       	brlt	.+2      	; 0x1dd6 <run+0x7e>
    1dd4:	c1 cf       	rjmp	.-126    	; 0x1d58 <run>
    1dd6:	8c e4       	ldi	r24, 0x4C	; 76
    1dd8:	91 e0       	ldi	r25, 0x01	; 1
    1dda:	0e 94 1c 04 	call	0x838	; 0x838 <pop>
    1dde:	6e e4       	ldi	r22, 0x4E	; 78
    1de0:	71 e0       	ldi	r23, 0x01	; 1
    1de2:	0e 94 12 04 	call	0x824	; 0x824 <push>
    1de6:	a0 91 4c 01 	lds	r26, 0x014C	; 0x80014c <activeStack>
    1dea:	b0 91 4d 01 	lds	r27, 0x014D	; 0x80014d <activeStack+0x1>
    1dee:	02 c0       	rjmp	.+4      	; 0x1df4 <run+0x9c>
    1df0:	a0 81       	ld	r26, Z
    1df2:	b1 81       	ldd	r27, Z+1	; 0x01
    1df4:	14 96       	adiw	r26, 0x04	; 4
    1df6:	ed 91       	ld	r30, X+
    1df8:	fc 91       	ld	r31, X
    1dfa:	15 97       	sbiw	r26, 0x05	; 5
    1dfc:	30 97       	sbiw	r30, 0x00	; 0
    1dfe:	c1 f7       	brne	.-16     	; 0x1df0 <run+0x98>
    1e00:	cd 01       	movw	r24, r26
    1e02:	0e 94 6f 03 	call	0x6de	; 0x6de <dispatch>
    1e06:	a8 cf       	rjmp	.-176    	; 0x1d58 <run>

00001e08 <install>:
    thread0.msg = NULL;
    
    TIMER_INIT();
}

void install(Object *obj, Method m, enum Vector i) {
    1e08:	fc 01       	movw	r30, r24
    if (i >= 0 && i < N_VECTORS) {
    1e0a:	42 31       	cpi	r20, 0x12	; 18
    1e0c:	b8 f4       	brcc	.+46     	; 0x1e3c <install+0x34>
        char status;
        DISABLE(status);
    1e0e:	9f b7       	in	r25, 0x3f	; 63
    1e10:	90 78       	andi	r25, 0x80	; 128
    1e12:	f8 94       	cli
        otable[i] = obj;
    1e14:	50 e0       	ldi	r21, 0x00	; 0
    1e16:	44 0f       	add	r20, r20
    1e18:	55 1f       	adc	r21, r21
    1e1a:	da 01       	movw	r26, r20
    1e1c:	a0 5a       	subi	r26, 0xA0	; 160
    1e1e:	be 4f       	sbci	r27, 0xFE	; 254
    1e20:	ed 93       	st	X+, r30
    1e22:	fc 93       	st	X, r31
        mtable[i] = m;
    1e24:	da 01       	movw	r26, r20
    1e26:	a8 50       	subi	r26, 0x08	; 8
    1e28:	be 4f       	sbci	r27, 0xFE	; 254
    1e2a:	6d 93       	st	X+, r22
    1e2c:	7c 93       	st	X, r23
        obj->wantedBy = INSTALLED_TAG;  // Mark object as subject to synchronization by interrupt disabling
    1e2e:	21 e0       	ldi	r18, 0x01	; 1
    1e30:	30 e0       	ldi	r19, 0x00	; 0
    1e32:	33 83       	std	Z+3, r19	; 0x03
    1e34:	22 83       	std	Z+2, r18	; 0x02
        ENABLE(status);
    1e36:	99 23       	and	r25, r25
    1e38:	09 f0       	breq	.+2      	; 0x1e3c <install+0x34>
    1e3a:	78 94       	sei
    1e3c:	08 95       	ret

00001e3e <tinytimber>:
    }
}

int tinytimber(Object *obj, Method m, int arg) {
    1e3e:	8c 01       	movw	r16, r24
    1e40:	7b 01       	movw	r14, r22
    1e42:	6a 01       	movw	r12, r20
    char status;
    DISABLE(status);
    1e44:	8f b7       	in	r24, 0x3f	; 63
    1e46:	f8 94       	cli
    initialize();
    1e48:	0e 94 d0 02 	call	0x5a0	; 0x5a0 <initialize>
    ENABLE(1);
    1e4c:	78 94       	sei
    if (m != NULL)
    1e4e:	e1 14       	cp	r14, r1
    1e50:	f1 04       	cpc	r15, r1
    1e52:	41 f0       	breq	.+16     	; 0x1e64 <tinytimber+0x26>
        //m(obj, arg);
		ASYNC(obj,m,arg);
    1e54:	20 e0       	ldi	r18, 0x00	; 0
    1e56:	30 e0       	ldi	r19, 0x00	; 0
    1e58:	a9 01       	movw	r20, r18
    1e5a:	60 e0       	ldi	r22, 0x00	; 0
    1e5c:	70 e0       	ldi	r23, 0x00	; 0
    1e5e:	cb 01       	movw	r24, r22
    1e60:	0e 94 21 0d 	call	0x1a42	; 0x1a42 <async>
    DISABLE(status);
    1e64:	8f b7       	in	r24, 0x3f	; 63
    1e66:	f8 94       	cli
    idle();
    1e68:	0e 94 28 0c 	call	0x1850	; 0x1850 <idle>

00001e6c <app_main_loop>:
	}
	else{
		self->stored_freq[self->current_pulsegen] = current->freq;
	}
}
void app_main_loop(app_object * self, int arg){
    1e6c:	cf 92       	push	r12
    1e6e:	df 92       	push	r13
    1e70:	ef 92       	push	r14
    1e72:	ff 92       	push	r15
    1e74:	0f 93       	push	r16
    1e76:	1f 93       	push	r17
    1e78:	cf 93       	push	r28
    1e7a:	df 93       	push	r29
    1e7c:	ec 01       	movw	r28, r24
		print_at((self->pulse_gens)->freq,0,2);
    1e7e:	ec 81       	ldd	r30, Y+4	; 0x04
    1e80:	fd 81       	ldd	r31, Y+5	; 0x05
    1e82:	42 e0       	ldi	r20, 0x02	; 2
    1e84:	60 e0       	ldi	r22, 0x00	; 0
    1e86:	84 81       	ldd	r24, Z+4	; 0x04
    1e88:	0e 94 e9 01 	call	0x3d2	; 0x3d2 <print_at>
		print_at((self->pulse_gens+1)->freq,4,2);
    1e8c:	ec 81       	ldd	r30, Y+4	; 0x04
    1e8e:	fd 81       	ldd	r31, Y+5	; 0x05
    1e90:	42 e0       	ldi	r20, 0x02	; 2
    1e92:	64 e0       	ldi	r22, 0x04	; 4
    1e94:	84 85       	ldd	r24, Z+12	; 0x0c
    1e96:	0e 94 e9 01 	call	0x3d2	; 0x3d2 <print_at>
		if(self->current_pulsegen == 0)
    1e9a:	8e 81       	ldd	r24, Y+6	; 0x06
    1e9c:	81 11       	cpse	r24, r1
    1e9e:	07 c0       	rjmp	.+14     	; 0x1eae <app_main_loop+0x42>
			LCDDR0 = LCDDR0^(1<<2);
    1ea0:	ec ee       	ldi	r30, 0xEC	; 236
    1ea2:	f0 e0       	ldi	r31, 0x00	; 0
    1ea4:	90 81       	ld	r25, Z
    1ea6:	84 e0       	ldi	r24, 0x04	; 4
    1ea8:	89 27       	eor	r24, r25
    1eaa:	80 83       	st	Z, r24
    1eac:	06 c0       	rjmp	.+12     	; 0x1eba <app_main_loop+0x4e>
		else{
			LCDDR2 = LCDDR2^(1<<2);
    1eae:	ee ee       	ldi	r30, 0xEE	; 238
    1eb0:	f0 e0       	ldi	r31, 0x00	; 0
    1eb2:	90 81       	ld	r25, Z
    1eb4:	84 e0       	ldi	r24, 0x04	; 4
    1eb6:	89 27       	eor	r24, r25
    1eb8:	80 83       	st	Z, r24
		}
		AFTER(MSEC(10),self,app_main_loop,0);
    1eba:	c1 2c       	mov	r12, r1
    1ebc:	d1 2c       	mov	r13, r1
    1ebe:	0f 2e       	mov	r0, r31
    1ec0:	f6 e3       	ldi	r31, 0x36	; 54
    1ec2:	ef 2e       	mov	r14, r31
    1ec4:	ff e0       	ldi	r31, 0x0F	; 15
    1ec6:	ff 2e       	mov	r15, r31
    1ec8:	f0 2d       	mov	r31, r0
    1eca:	8e 01       	movw	r16, r28
    1ecc:	20 e0       	ldi	r18, 0x00	; 0
    1ece:	30 e0       	ldi	r19, 0x00	; 0
    1ed0:	a9 01       	movw	r20, r18
    1ed2:	68 e3       	ldi	r22, 0x38	; 56
    1ed4:	71 e0       	ldi	r23, 0x01	; 1
    1ed6:	80 e0       	ldi	r24, 0x00	; 0
    1ed8:	90 e0       	ldi	r25, 0x00	; 0
    1eda:	0e 94 21 0d 	call	0x1a42	; 0x1a42 <async>
}
    1ede:	df 91       	pop	r29
    1ee0:	cf 91       	pop	r28
    1ee2:	1f 91       	pop	r17
    1ee4:	0f 91       	pop	r16
    1ee6:	ff 90       	pop	r15
    1ee8:	ef 90       	pop	r14
    1eea:	df 90       	pop	r13
    1eec:	cf 90       	pop	r12
    1eee:	08 95       	ret

00001ef0 <change_pulse_gen>:
 *  Author: ivarj
 */ 
#include "../include/app.h"
void change_pulse_gen(app_object * self,uint8_t new_index){
	// gets the next pulse gen
	self->current_pulsegen = new_index;
    1ef0:	fc 01       	movw	r30, r24
    1ef2:	66 83       	std	Z+6, r22	; 0x06
    1ef4:	08 95       	ret

00001ef6 <itterate_freq>:
	return;
}
void itterate_freq(app_object * self,int8_t increment){
	pulse_gen * current = self->pulse_gens+self->current_pulsegen;
    1ef6:	fc 01       	movw	r30, r24
    1ef8:	24 81       	ldd	r18, Z+4	; 0x04
    1efa:	35 81       	ldd	r19, Z+5	; 0x05
    1efc:	86 81       	ldd	r24, Z+6	; 0x06
    1efe:	e8 2f       	mov	r30, r24
    1f00:	f0 e0       	ldi	r31, 0x00	; 0
    1f02:	ee 0f       	add	r30, r30
    1f04:	ff 1f       	adc	r31, r31
    1f06:	ee 0f       	add	r30, r30
    1f08:	ff 1f       	adc	r31, r31
    1f0a:	ee 0f       	add	r30, r30
    1f0c:	ff 1f       	adc	r31, r31
    1f0e:	e2 0f       	add	r30, r18
    1f10:	f3 1f       	adc	r31, r19
	current->freq+=increment; 
    1f12:	84 81       	ldd	r24, Z+4	; 0x04
    1f14:	68 0f       	add	r22, r24
    1f16:	64 83       	std	Z+4, r22	; 0x04
    1f18:	08 95       	ret

00001f1a <save_freq>:
}
void save_freq(app_object * self,uint8_t arg){
	pulse_gen * current = self->pulse_gens+self->current_pulsegen;
    1f1a:	fc 01       	movw	r30, r24
    1f1c:	44 81       	ldd	r20, Z+4	; 0x04
    1f1e:	55 81       	ldd	r21, Z+5	; 0x05
    1f20:	26 81       	ldd	r18, Z+6	; 0x06
    1f22:	e2 2f       	mov	r30, r18
    1f24:	f0 e0       	ldi	r31, 0x00	; 0
    1f26:	ee 0f       	add	r30, r30
    1f28:	ff 1f       	adc	r31, r31
    1f2a:	ee 0f       	add	r30, r30
    1f2c:	ff 1f       	adc	r31, r31
    1f2e:	ee 0f       	add	r30, r30
    1f30:	ff 1f       	adc	r31, r31
    1f32:	e4 0f       	add	r30, r20
    1f34:	f5 1f       	adc	r31, r21
	if(current->freq == 0){
    1f36:	34 81       	ldd	r19, Z+4	; 0x04
    1f38:	31 11       	cpse	r19, r1
    1f3a:	07 c0       	rjmp	.+14     	; 0x1f4a <save_freq+0x30>
		current->freq = self->stored_freq[self->current_pulsegen];
    1f3c:	dc 01       	movw	r26, r24
    1f3e:	a2 0f       	add	r26, r18
    1f40:	b1 1d       	adc	r27, r1
    1f42:	18 96       	adiw	r26, 0x08	; 8
    1f44:	8c 91       	ld	r24, X
    1f46:	84 83       	std	Z+4, r24	; 0x04
    1f48:	08 95       	ret
	}
	else{
		self->stored_freq[self->current_pulsegen] = current->freq;
    1f4a:	fc 01       	movw	r30, r24
    1f4c:	e2 0f       	add	r30, r18
    1f4e:	f1 1d       	adc	r31, r1
    1f50:	30 87       	std	Z+8, r19	; 0x08
    1f52:	08 95       	ret

00001f54 <app_entry>:
		else{
			LCDDR2 = LCDDR2^(1<<2);
		}
		AFTER(MSEC(10),self,app_main_loop,0);
}
void app_entry(app_object *self,int arg){
    1f54:	af 92       	push	r10
    1f56:	bf 92       	push	r11
    1f58:	cf 92       	push	r12
    1f5a:	df 92       	push	r13
    1f5c:	ef 92       	push	r14
    1f5e:	ff 92       	push	r15
    1f60:	0f 93       	push	r16
    1f62:	1f 93       	push	r17
    1f64:	cf 93       	push	r28
    1f66:	df 93       	push	r29
    1f68:	5c 01       	movw	r10, r24
		for(int i = 0; i < self->number_of_pulsegens; i++)
    1f6a:	c0 e0       	ldi	r28, 0x00	; 0
    1f6c:	d0 e0       	ldi	r29, 0x00	; 0
    1f6e:	1d c0       	rjmp	.+58     	; 0x1faa <app_entry+0x56>
			ASYNC((self->pulse_gens+i),pulse,0);
    1f70:	f5 01       	movw	r30, r10
    1f72:	04 81       	ldd	r16, Z+4	; 0x04
    1f74:	15 81       	ldd	r17, Z+5	; 0x05
    1f76:	ce 01       	movw	r24, r28
    1f78:	88 0f       	add	r24, r24
    1f7a:	99 1f       	adc	r25, r25
    1f7c:	88 0f       	add	r24, r24
    1f7e:	99 1f       	adc	r25, r25
    1f80:	88 0f       	add	r24, r24
    1f82:	99 1f       	adc	r25, r25
    1f84:	08 0f       	add	r16, r24
    1f86:	19 1f       	adc	r17, r25
    1f88:	c1 2c       	mov	r12, r1
    1f8a:	d1 2c       	mov	r13, r1
    1f8c:	0f 2e       	mov	r0, r31
    1f8e:	fc e4       	ldi	r31, 0x4C	; 76
    1f90:	ef 2e       	mov	r14, r31
    1f92:	f2 e0       	ldi	r31, 0x02	; 2
    1f94:	ff 2e       	mov	r15, r31
    1f96:	f0 2d       	mov	r31, r0
    1f98:	20 e0       	ldi	r18, 0x00	; 0
    1f9a:	30 e0       	ldi	r19, 0x00	; 0
    1f9c:	a9 01       	movw	r20, r18
    1f9e:	60 e0       	ldi	r22, 0x00	; 0
    1fa0:	70 e0       	ldi	r23, 0x00	; 0
    1fa2:	cb 01       	movw	r24, r22
    1fa4:	0e 94 21 0d 	call	0x1a42	; 0x1a42 <async>
			LCDDR2 = LCDDR2^(1<<2);
		}
		AFTER(MSEC(10),self,app_main_loop,0);
}
void app_entry(app_object *self,int arg){
		for(int i = 0; i < self->number_of_pulsegens; i++)
    1fa8:	21 96       	adiw	r28, 0x01	; 1
    1faa:	f5 01       	movw	r30, r10
    1fac:	87 81       	ldd	r24, Z+7	; 0x07
    1fae:	90 e0       	ldi	r25, 0x00	; 0
    1fb0:	c8 17       	cp	r28, r24
    1fb2:	d9 07       	cpc	r29, r25
    1fb4:	ec f2       	brlt	.-70     	; 0x1f70 <app_entry+0x1c>
			ASYNC((self->pulse_gens+i),pulse,0);
		ASYNC(self,app_main_loop,0);
    1fb6:	c1 2c       	mov	r12, r1
    1fb8:	d1 2c       	mov	r13, r1
    1fba:	0f 2e       	mov	r0, r31
    1fbc:	f6 e3       	ldi	r31, 0x36	; 54
    1fbe:	ef 2e       	mov	r14, r31
    1fc0:	ff e0       	ldi	r31, 0x0F	; 15
    1fc2:	ff 2e       	mov	r15, r31
    1fc4:	f0 2d       	mov	r31, r0
    1fc6:	85 01       	movw	r16, r10
    1fc8:	20 e0       	ldi	r18, 0x00	; 0
    1fca:	30 e0       	ldi	r19, 0x00	; 0
    1fcc:	a9 01       	movw	r20, r18
    1fce:	60 e0       	ldi	r22, 0x00	; 0
    1fd0:	70 e0       	ldi	r23, 0x00	; 0
    1fd2:	cb 01       	movw	r24, r22
    1fd4:	0e 94 21 0d 	call	0x1a42	; 0x1a42 <async>
	
    1fd8:	df 91       	pop	r29
    1fda:	cf 91       	pop	r28
    1fdc:	1f 91       	pop	r17
    1fde:	0f 91       	pop	r16
    1fe0:	ff 90       	pop	r15
    1fe2:	ef 90       	pop	r14
    1fe4:	df 90       	pop	r13
    1fe6:	cf 90       	pop	r12
    1fe8:	bf 90       	pop	r11
    1fea:	af 90       	pop	r10
    1fec:	08 95       	ret

00001fee <__divmodhi4>:
    1fee:	97 fb       	bst	r25, 7
    1ff0:	07 2e       	mov	r0, r23
    1ff2:	16 f4       	brtc	.+4      	; 0x1ff8 <__divmodhi4+0xa>
    1ff4:	00 94       	com	r0
    1ff6:	07 d0       	rcall	.+14     	; 0x2006 <__divmodhi4_neg1>
    1ff8:	77 fd       	sbrc	r23, 7
    1ffa:	09 d0       	rcall	.+18     	; 0x200e <__divmodhi4_neg2>
    1ffc:	0e 94 1a 10 	call	0x2034	; 0x2034 <__udivmodhi4>
    2000:	07 fc       	sbrc	r0, 7
    2002:	05 d0       	rcall	.+10     	; 0x200e <__divmodhi4_neg2>
    2004:	3e f4       	brtc	.+14     	; 0x2014 <__divmodhi4_exit>

00002006 <__divmodhi4_neg1>:
    2006:	90 95       	com	r25
    2008:	81 95       	neg	r24
    200a:	9f 4f       	sbci	r25, 0xFF	; 255
    200c:	08 95       	ret

0000200e <__divmodhi4_neg2>:
    200e:	70 95       	com	r23
    2010:	61 95       	neg	r22
    2012:	7f 4f       	sbci	r23, 0xFF	; 255

00002014 <__divmodhi4_exit>:
    2014:	08 95       	ret

00002016 <__umulhisi3>:
    2016:	a2 9f       	mul	r26, r18
    2018:	b0 01       	movw	r22, r0
    201a:	b3 9f       	mul	r27, r19
    201c:	c0 01       	movw	r24, r0
    201e:	a3 9f       	mul	r26, r19
    2020:	70 0d       	add	r23, r0
    2022:	81 1d       	adc	r24, r1
    2024:	11 24       	eor	r1, r1
    2026:	91 1d       	adc	r25, r1
    2028:	b2 9f       	mul	r27, r18
    202a:	70 0d       	add	r23, r0
    202c:	81 1d       	adc	r24, r1
    202e:	11 24       	eor	r1, r1
    2030:	91 1d       	adc	r25, r1
    2032:	08 95       	ret

00002034 <__udivmodhi4>:
    2034:	aa 1b       	sub	r26, r26
    2036:	bb 1b       	sub	r27, r27
    2038:	51 e1       	ldi	r21, 0x11	; 17
    203a:	07 c0       	rjmp	.+14     	; 0x204a <__udivmodhi4_ep>

0000203c <__udivmodhi4_loop>:
    203c:	aa 1f       	adc	r26, r26
    203e:	bb 1f       	adc	r27, r27
    2040:	a6 17       	cp	r26, r22
    2042:	b7 07       	cpc	r27, r23
    2044:	10 f0       	brcs	.+4      	; 0x204a <__udivmodhi4_ep>
    2046:	a6 1b       	sub	r26, r22
    2048:	b7 0b       	sbc	r27, r23

0000204a <__udivmodhi4_ep>:
    204a:	88 1f       	adc	r24, r24
    204c:	99 1f       	adc	r25, r25
    204e:	5a 95       	dec	r21
    2050:	a9 f7       	brne	.-22     	; 0x203c <__udivmodhi4_loop>
    2052:	80 95       	com	r24
    2054:	90 95       	com	r25
    2056:	bc 01       	movw	r22, r24
    2058:	cd 01       	movw	r24, r26
    205a:	08 95       	ret

0000205c <setjmp>:
    205c:	dc 01       	movw	r26, r24
    205e:	2d 92       	st	X+, r2
    2060:	3d 92       	st	X+, r3
    2062:	4d 92       	st	X+, r4
    2064:	5d 92       	st	X+, r5
    2066:	6d 92       	st	X+, r6
    2068:	7d 92       	st	X+, r7
    206a:	8d 92       	st	X+, r8
    206c:	9d 92       	st	X+, r9
    206e:	ad 92       	st	X+, r10
    2070:	bd 92       	st	X+, r11
    2072:	cd 92       	st	X+, r12
    2074:	dd 92       	st	X+, r13
    2076:	ed 92       	st	X+, r14
    2078:	fd 92       	st	X+, r15
    207a:	0d 93       	st	X+, r16
    207c:	1d 93       	st	X+, r17
    207e:	cd 93       	st	X+, r28
    2080:	dd 93       	st	X+, r29
    2082:	ff 91       	pop	r31
    2084:	ef 91       	pop	r30
    2086:	8d b7       	in	r24, 0x3d	; 61
    2088:	8d 93       	st	X+, r24
    208a:	8e b7       	in	r24, 0x3e	; 62
    208c:	8d 93       	st	X+, r24
    208e:	8f b7       	in	r24, 0x3f	; 63
    2090:	8d 93       	st	X+, r24
    2092:	ed 93       	st	X+, r30
    2094:	fd 93       	st	X+, r31
    2096:	88 27       	eor	r24, r24
    2098:	99 27       	eor	r25, r25
    209a:	09 94       	ijmp

0000209c <longjmp>:
    209c:	dc 01       	movw	r26, r24
    209e:	cb 01       	movw	r24, r22
    20a0:	81 30       	cpi	r24, 0x01	; 1
    20a2:	91 05       	cpc	r25, r1
    20a4:	81 1d       	adc	r24, r1
    20a6:	2d 90       	ld	r2, X+
    20a8:	3d 90       	ld	r3, X+
    20aa:	4d 90       	ld	r4, X+
    20ac:	5d 90       	ld	r5, X+
    20ae:	6d 90       	ld	r6, X+
    20b0:	7d 90       	ld	r7, X+
    20b2:	8d 90       	ld	r8, X+
    20b4:	9d 90       	ld	r9, X+
    20b6:	ad 90       	ld	r10, X+
    20b8:	bd 90       	ld	r11, X+
    20ba:	cd 90       	ld	r12, X+
    20bc:	dd 90       	ld	r13, X+
    20be:	ed 90       	ld	r14, X+
    20c0:	fd 90       	ld	r15, X+
    20c2:	0d 91       	ld	r16, X+
    20c4:	1d 91       	ld	r17, X+
    20c6:	cd 91       	ld	r28, X+
    20c8:	dd 91       	ld	r29, X+
    20ca:	ed 91       	ld	r30, X+
    20cc:	fd 91       	ld	r31, X+
    20ce:	0d 90       	ld	r0, X+
    20d0:	f8 94       	cli
    20d2:	fe bf       	out	0x3e, r31	; 62
    20d4:	0f be       	out	0x3f, r0	; 63
    20d6:	ed bf       	out	0x3d, r30	; 61
    20d8:	ed 91       	ld	r30, X+
    20da:	fd 91       	ld	r31, X+
    20dc:	09 94       	ijmp

000020de <_exit>:
    20de:	f8 94       	cli

000020e0 <__stop_program>:
    20e0:	ff cf       	rjmp	.-2      	; 0x20e0 <__stop_program>
